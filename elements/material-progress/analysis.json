{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "lib/material-progress-bars.js",
      "properties": [
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "Maximum value represented by all progress bars.\nBars will be scaled according to their `data-value` attribute\nand this maximum.\nNote that, if the sum of all the bars' values are superior to this\n`max`, it will override it.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_refresh\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "100"
        }
      ],
      "methods": [
        {
          "name": "_getWidthForBar",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "barValue"
            },
            {
              "name": "barValuesSum"
            },
            {
              "name": "maxBarValue"
            },
            {
              "name": "barHeight"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 46,
          "column": 8
        },
        "end": {
          "line": 71,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "max",
          "description": "Maximum value represented by all progress bars.\nBars will be scaled according to their `data-value` attribute\nand this maximum.\nNote that, if the sum of all the bars' values are superior to this\n`max`, it will override it.",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "material-progress-bars"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/material-progress-histo.js",
      "properties": [
        {
          "name": "scaleToSum",
          "type": "boolean | null | undefined",
          "description": "Scales the bar relatively to the sum of all bars\ninstead of the maximum bar `data-value`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_refresh\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_getWidthForBar",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "barValue"
            },
            {
              "name": "barValuesSum"
            },
            {
              "name": "maxBarValue"
            },
            {
              "name": "barHeight"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 47,
          "column": 8
        },
        "end": {
          "line": 68,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "scale-to-sum",
          "description": "Scales the bar relatively to the sum of all bars\ninstead of the maximum bar `data-value`.",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "material-progress-histo"
    }
  ],
  "metadata": {
    "polymer": {
      "behaviors": [
        {
          "description": "`window.MaterialProgressBehavior` is the base behavior for all `material-progress`\nelements.",
          "summary": "",
          "path": "lib/material-progress-behavior.js",
          "properties": [
            {
              "name": "barHeight",
              "type": "number | null | undefined",
              "description": "Height of the bar and bars, in pixels.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 12,
                  "column": 4
                },
                "end": {
                  "line": 16,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_refresh\"",
                  "attributeType": "Number"
                }
              },
              "defaultValue": "22"
            },
            {
              "name": "animated",
              "type": "boolean | null | undefined",
              "description": "Animate when the size of a bar changes.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 20,
                  "column": 4
                },
                "end": {
                  "line": 24,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "legendLabel",
              "type": "string | null | undefined",
              "description": "Label to display before the legend.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 28,
                  "column": 4
                },
                "end": {
                  "line": 32,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_refresh\"",
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "bars",
              "type": "Array | null | undefined",
              "description": "The displayed bar nodes (ie direct children with\nthe `bar` class and a `data-value` attribute).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Array"
                }
              },
              "defaultValue": "[]"
            },
            {
              "name": "sum",
              "type": "number | null | undefined",
              "description": "Sum of all the bars' values.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 4
                },
                "end": {
                  "line": 54,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "_legendItems",
              "type": "Array | null | undefined",
              "description": "The legend items to be displayed: Each is composed of the following\nattributes :\n- `label`: match the `data-legend` attribute of the corresponding bar.\n- `color`: match the css `background-color` of the corresponding bar.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 4
                },
                "end": {
                  "line": 67,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Array"
                }
              },
              "defaultValue": "[]"
            },
            {
              "name": "_legendNeeded",
              "type": "boolean | null | undefined",
              "description": "Indicates if the legend needs to be displayed.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 71,
                  "column": 4
                },
                "end": {
                  "line": 76,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "refresh",
              "description": "Refresh the element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 86,
                  "column": 2
                },
                "end": {
                  "line": 154,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 155,
                  "column": 2
                },
                "end": {
                  "line": 176,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "attached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 177,
                  "column": 2
                },
                "end": {
                  "line": 180,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_refresh",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 181,
                  "column": 2
                },
                "end": {
                  "line": 183,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_computeSumAndBars",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 184,
                  "column": 2
                },
                "end": {
                  "line": 211,
                  "column": 3
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getBarMeta",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 212,
                  "column": 2
                },
                "end": {
                  "line": 222,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "bar"
                }
              ]
            },
            {
              "name": "_getWidthForBar",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 223,
                  "column": 2
                },
                "end": {
                  "line": 226,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "barValue"
                },
                {
                  "name": "barValuesSum"
                },
                {
                  "name": "maxBarValue"
                },
                {
                  "name": "barHeight"
                }
              ]
            },
            {
              "name": "_playFirstAnimation",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 227,
                  "column": 2
                },
                "end": {
                  "line": 234,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                },
                {
                  "name": "index"
                },
                {
                  "name": "animationDelay"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_computeLegendNeeded",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 235,
                  "column": 2
                },
                "end": {
                  "line": 237,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "legendItems"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 238,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "window.MaterialProgressBehavior",
          "attributes": [
            {
              "name": "bar-height",
              "description": "Height of the bar and bars, in pixels.",
              "sourceRange": {
                "start": {
                  "line": 12,
                  "column": 4
                },
                "end": {
                  "line": 16,
                  "column": 5
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "animated",
              "description": "Animate when the size of a bar changes.",
              "sourceRange": {
                "start": {
                  "line": 20,
                  "column": 4
                },
                "end": {
                  "line": 24,
                  "column": 5
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "legend-label",
              "description": "Label to display before the legend.",
              "sourceRange": {
                "start": {
                  "line": 28,
                  "column": 4
                },
                "end": {
                  "line": 32,
                  "column": 5
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "bars",
              "description": "The displayed bar nodes (ie direct children with\nthe `bar` class and a `data-value` attribute).",
              "sourceRange": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              },
              "metadata": {},
              "type": "Array | null | undefined"
            },
            {
              "name": "sum",
              "description": "Sum of all the bars' values.",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 4
                },
                "end": {
                  "line": 54,
                  "column": 5
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "bars-changed",
              "description": "Fired when the `bars` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "sum-changed",
              "description": "Fired when the `sum` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  }
}
