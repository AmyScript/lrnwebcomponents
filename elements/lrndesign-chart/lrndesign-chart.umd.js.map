{"version":3,"file":"lrndesign-chart.umd.js","sources":["lib/lrndesign-bar.js","lib/lrndesign-line.js","lib/lrndesign-pie.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\nimport \"@lrnwebcomponents/chartist-render/chartist-render.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\n/**\n`lrndesign-bar`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n -\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n    <iron-ajax id=\"datasource\" url=\"{{dataSource}}\" handle-as=\"text\" last-response=\"{{rawData}}\" on-response=\"handleResponse\"></iron-ajax>\n    <chartist-render id=\"chartist\" type=\"bar\" scale\\$=\"[[scale]]\" chart-title\\$=\"[[chartTitle]]\" chart-desc\\$=\"[[chartDesc]]\" data\\$=\"[[data]]\" options\\$=\"{{options}}\" responsive-options\\$=\"[[responsiveOptions]]\"></chartist-render>\n`,\n\n  is: \"lrndesign-bar\",\n  behaviors: [HAXBehaviors.PropertiesBehaviors, SchemaBehaviors.Schema],\n\n  properties: {\n    /**\n     * The unique identifier of the chart.\n     */\n    chartId: {\n      type: String,\n      value: \"chart\"\n    },\n    /**\n     * The chart title used for accessibility.\n     */\n    chartTitle: {\n      type: String,\n      value: null\n    },\n    /**\n     * The chart description used for accessibility.\n     */\n    chartDesc: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * Scale of the chart.\n     */\n    scale: {\n      type: String,\n      notify: true\n    },\n    /**\n     * Data as an array.\n     */\n    data: {\n      type: Object,\n      value: {},\n      observer: \"_dataUpdated\"\n    },\n    /**\n     * Options as an array.\n     */\n    options: {\n      type: Object,\n      notify: true,\n      value: {}\n    },\n    /**\n     * Fixed width for the chart as a string (i.e. '100px' or '50%').\n     */\n    width: {\n      type: String,\n      value: undefined\n    },\n    /**\n     * Fixed height for the chart as a string (i.e. '100px' or '50%').\n     */\n    height: {\n      type: String,\n      value: undefined\n    },\n    /**\n     *  Padding-top for chart.\n     */\n    paddingTop: {\n      type: Number,\n      value: 5\n    },\n    /**\n     *  Padding-right for chart.\n     */\n    paddingRight: {\n      type: Number,\n      value: 5\n    },\n    /**\n     *  Padding-bottom for chart.\n     */\n    paddingBottom: {\n      type: Number,\n      value: 5\n    },\n    /**\n     *  Padding-left for chart.\n     */\n    paddingLeft: {\n      type: Number,\n      value: 5\n    },\n    /**\n     * Overriding the natural high of the chart allows you to zoom in\n     * or limit the charts highest displayed value.\n     */\n    high: {\n      type: Number,\n      value: undefined\n    },\n    /**\n     * Overriding the natural low of the chart allows you to zoom in\n     * or limit the charts lowest displayed value.\n     */\n    low: {\n      type: Number,\n      value: undefined\n    },\n    /**\n     * Unless low/high are explicitly set, bar chart will be\n     * centered at zero by default. Set referenceValue to null to auto scale.\n     */\n    referenceValue: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Specify the distance in pixel of bars in a group.\n     */\n    seriesBarDistance: {\n      type: Number,\n      value: 15\n    },\n    /**\n     * If set to true this property will cause the series bars\n     * to be stacked. Check the \"stackMode\" option\n     * for further stacking options.\n     */\n    stackBars: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * If set to \"true\" this property will form a total\n     * for each series point. This will also influence\n     * the y-axis and the overall bounds of the chart.\n     * If set to \"false\" this property will force\n     * the stacked bars to draw from the zero line.\n     * In stacked mode the \"seriesBarDistance\" property will have no effect.\n     */\n    stackModeAccumulate: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Inverts the axes of the bar chart in order to draw\n     * a horizontal bar chart. Be aware that you also need\n     * to invert your axis settings as the Y Axis will now display\n     * the labels and the X Axis the values.\n     */\n    horizontalBars: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * If set to true then each bar will represent a series and\n     * the data array is expected to be a one dimensional array\n     * of data values rather than a series array of series.\n     * This is useful if the bar chart should represent\n     * a profile rather than some data over time.\n     */\n    distributeSeries: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Reverse data including labels, the series order as well as\n     * the whole series data arrays.\n     */\n    reverseData: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * If the bar chart should add a background fill to the .ct-grids group.\n     */\n    showGridBackground: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The offset of the chart drawing area to the border of the container.\n     */\n    axisXOffset: {\n      type: Number,\n      value: 30\n    },\n    /**\n     * The offset of the chart drawing area to the border of the container.\n     */\n    axisYOffset: {\n      type: Number,\n      value: 30\n    },\n    /**\n     * Position labels at top-left of axis?\n     */\n    axisXTopLeft: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Position labels at top-left of axis?\n     */\n    axisYTopLeft: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Offset X of labels for X-axis\n     */\n    axisXLabelOffsetX: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Offset Y of labels for X-axis\n     */\n    axisXLabelOffsetY: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Offset X of labels for Y-axis\n     */\n    axisYLabelOffsetX: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Offset Y of labels for Y-axis\n     */\n    axisYLabelOffsetY: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Show axis X labels?\n     */\n    axisXShowLabel: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Show axis Y labels?\n     */\n    axisYshowLabel: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Show axis X grid?\n     */\n    axisXShowGrid: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Show axis Y grid?\n     */\n    axisYshowGrid: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Use only integer values (whole numbers) for the scale steps\n     */\n    axisXOnlyInteger: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Use only integer values (whole numbers) for the scale steps\n     */\n    axisYOnlyInteger: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The responsive options.\n     * (See https://gionkunz.github.io/chartist-js/api-documentation.html.)\n     */\n    responsiveOptions: {\n      type: Array,\n      value: []\n    },\n    /**\n     * Location of the CSV file.\n     */\n    dataSource: {\n      type: String,\n      notify: true,\n      observer: \"_dataSourceChanged\"\n    },\n    /**\n     * Raw data pulled in from the csv file.\n     */\n    rawData: {\n      type: String,\n      notify: true,\n      value: \"\"\n    }\n  },\n\n  /**\n   * Generate the request when we notice data source change.\n   * This enables us to use the same element with things that\n   * manually generate the data within the app instead of\n   * pulling it dynamically from a file / endpoint.\n   */\n  _dataSourceChanged: function(newValue, oldValue) {\n    if (typeof newValue !== undefined) {\n      this.$.datasource.generateRequest();\n    }\n  },\n\n  /**\n   * Convert from csv text to an array in the table function\n   */\n  handleResponse: function(e) {\n    let raw = this.CSVtoArray(this.rawData);\n    this.set(\"data\", {});\n    this.set(\"data\", {\n      labels: raw[0],\n      series: raw.slice(1, raw.length)\n    });\n  },\n\n  /**\n   * Update the chart object when we get new data.\n   */\n  _dataUpdated: function(newValue, oldValue) {\n    // hard reset value to ensure they are updated in the event\n    // this is presenting them on the screen some how.\n    this.set(\"options\", {});\n    this.set(\"options\", this._getOptions());\n    let chart = this.$.chartist.makeChart();\n  },\n\n  /**\n   * wire it for hax-body\n   */\n  attached: function() {\n    // Establish hax properties if they exist\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Bar Chart\",\n        description: \"Creates an accessible bar chart based on a CSV.\",\n        icon: \"editor:nsert-chart\",\n        color: \"green darken-4\",\n        groups: [\"Data\", \"Presentation\"],\n        handles: [\n          {\n            type: \"data\",\n            url: \"csvFile\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"data-source\",\n            title: \"CSV File\",\n            description: \"The URL for your CSV file.\",\n            inputMethod: \"textfield\",\n            icon: \"link\",\n            validationType: \"url\",\n            required: true\n          },\n          {\n            property: \"chartTitle\",\n            title: \"Chart Title\",\n            description: \"Accessible alt text for your chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            required: true\n          },\n          {\n            property: \"chartDesc\",\n            title: \"Chart Description\",\n            description: \"Accessible description of your chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"stackBars\",\n            title: \"Stacked bars?\",\n            description: \"Display as a stacked bar graph.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"horizontalBars\",\n            title: \"Horizonal bars?\",\n            description: \"Display as a horizonal bar graph.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          }\n        ],\n        configure: [\n          {\n            property: \"width\",\n            title: \"Width\",\n            description: \"The width of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"height\",\n            title: \"Height\",\n            description: \"The height of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingTop\",\n            title: \"Padding-Top\",\n            description: \"The padding at the top of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingRight\",\n            title: \"Padding-Right\",\n            description: \"The padding at the right of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingBottom\",\n            title: \"Padding-Bottom\",\n            description: \"The padding at the bottom of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingLeft\",\n            title: \"Padding-Left\",\n            description: \"The padding at the left of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"high\",\n            title: \"Highest Displayed Value\",\n            description:\n              \"Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"low\",\n            title: \"Lowest Displayed Value\",\n            description:\n              \"Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"referenceValue\",\n            title: \"Reference Value\",\n            description:\n              \"Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"axisXShowGrid\",\n            title: \"X-Axis Grid\",\n            description: \"Should axis X grid be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisYShowGrid\",\n            title: \"Y-Axis Grid\",\n            description: \"Should Y-axis grid be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"showGridBackground\",\n            title: \"Show Grid Background?\",\n            description:\n              \"If the bar chart should add a background fill to the .ct-grids group.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          }\n        ],\n        advanced: [\n          {\n            property: \"scale\",\n            title: \"Scale Name\",\n            description:\n              \"The ratio of width:height of the chart (See https://gionkunz.github.io/chartist-js/getting-started.html#default-sass-settings for $ct-scales and $ct-scales-names).\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"reverseData\",\n            title: \"Reverse Data\",\n            description:\n              \"Reverse data including labels, the series order as well as the whole series data arrays.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"stackModeAccumulate\",\n            title: \"Stacked Bars Accumulate\",\n            description:\n              'If set to \"true\" this property will form a total for each series point. If set to \"false\" this property will force the stacked bars to draw from the zero line. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.',\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"distributeSeries\",\n            title: \"Distribute Series\",\n            description:\n              'If set to \"true\" then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.',\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisXOnlyInteger\",\n            title: \"X-Axis Integers\",\n            description: \"Round X-Axis Scale to Integers\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisYOnlyInteger\",\n            title: \"Y-Axis Integers\",\n            description: \"Round Y-Axis Scale to Integers\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisXShowLabel\",\n            title: \"X-Axis Labels\",\n            description: \"Should axis X labels be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisYShowLabel\",\n            title: \"Y-Axis Labels\",\n            description: \"Should Y-axis labels be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisXLabelOffsetX\",\n            title: \"X-Axis Label X-Offset\",\n            description: \"Horizontal Offset offset of X-Axis labels.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"axisXLabelOffsetY\",\n            title: \"X-Axis Label Y-Offset\",\n            description: \"Vertical Offset offset of X-Axis labels.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"axisYLabelOffsetX\",\n            title: \"Y-Axis Label X-Offset\",\n            description: \"Horizontal Offset offset of Y-Axis labels.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"axisYLabelOffsetY\",\n            title: \"Y-Axis Label Y-Offset\",\n            description: \"Vertical Offset offset of Y-Axis labels.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          }\n        ]\n      }\n    };\n    this.setHaxProperties(props);\n  },\n\n  /**\n   * returns options as an array\n   */\n  _getOptions: function() {\n    return {\n      width: this.width,\n      height: this.height,\n      high: this.high,\n      low: this.low,\n      chartPadding: {\n        top: this.paddingTop,\n        right: this.paddingRight,\n        bottom: this.paddingBottom,\n        left: this.paddingLeft\n      },\n      referenceValue: this.referenceValue,\n      seriesBarDistance: this.seriesBarDistance,\n      stackBars: this.stackBars,\n      stackMode: this.stackModeAccumulate == true ? \"accumulate\" : \"overlap\",\n      horizontalBars: this.horizontalBars,\n      distributeSeries: this.distributeSeries,\n      reverseData: this.reverseData,\n      showGridBackground: this.showGridBackground,\n      axisX: {\n        offset: this.axisXOffset,\n        position: this.axisXTopLeft == true ? \"start\" : \"end\",\n        labelOffset: {\n          x: this.axisXLabelOffsetX,\n          y: this.axisXLabelOffsetY\n        },\n        showLabel: this.axisXShowLabel,\n        showGrid: this.axisXShowGrid,\n        onlyInteger: this.axisXOnlyInteger\n      },\n      axisY: {\n        offset: this.axisYOffset,\n        position: this.axisYTopLeft == true ? \"start\" : \"end\",\n        labelOffset: {\n          x: this.axisYLabelOffsetX,\n          y: this.axisYLabelOffsetY\n        },\n        showLabel: this.axisYShowLabel,\n        showGrid: this.axisYShowGrid,\n        onlyInteger: this.axisYOnlyInteger\n      }\n    };\n  },\n\n  /**\n   * Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data\n   */\n  CSVtoArray: function(text) {\n    let p = \"\",\n      row = [\"\"],\n      ret = [row],\n      i = 0,\n      r = 0,\n      s = !0,\n      l;\n    for (l in text) {\n      l = text[l];\n      if ('\"' === l) {\n        if (s && l === p) row[i] += l;\n        s = !s;\n      } else if (\",\" === l && s) {\n        if (row[i].trim().match(/^\\d+$/m) !== null)\n          row[i] = parseInt(row[i].trim());\n        l = row[++i] = \"\";\n      } else if (\"\\n\" === l && s) {\n        if (\"\\r\" === p) row[i] = row[i].slice(0, -1);\n        if (row[i].trim().match(/^\\d+$/m) !== null)\n          row[i] = parseInt(row[i].trim());\n        row = ret[++r] = [(l = \"\")];\n        i = 0;\n      } else row[i] += l;\n      p = l;\n    }\n    if (row[i].trim().match(/^\\d+$/m) !== null)\n      row[i] = parseInt(row[i].trim());\n    return ret;\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\nimport \"@lrnwebcomponents/chartist-render/chartist-render.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\n/**\n`lrndesign-line`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n -\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n    <iron-ajax auto=\"\" url=\"{{dataSource}}\" handle-as=\"text\" last-response=\"{{rawData}}\" on-response=\"handleResponse\"></iron-ajax>\n    <chartist-render id=\"chartist\" type=\"line\" scale\\$=\"[[scale]]\" chart-title\\$=\"[[chartTitle]]\" chart-desc\\$=\"[[chartDesc]]\" data\\$=\"[[data]]\" options\\$=\"{{options}}\" responsive-options\\$=\"[[responsiveOptions]]\"></chartist-render>\n`,\n\n  is: \"lrndesign-line\",\n  behaviors: [HAXBehaviors.PropertiesBehaviors, SchemaBehaviors.Schema],\n\n  properties: {\n    /**\n     * The unique identifier of the chart.\n     */\n    chartId: {\n      type: String,\n      value: \"chart\"\n    },\n    /**\n     * The chart title used for accessibility.\n     */\n    chartTitle: {\n      type: String,\n      value: null\n    },\n    /**\n     * The chart description used for accessibility.\n     */\n    chartDesc: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * Scale of the chart.\n     */\n    scale: {\n      type: String,\n      notify: true,\n      value: \"ct-octave\"\n    },\n    /**\n     * Data as an array.\n     */\n    data: {\n      type: Array,\n      notify: true,\n      value: []\n    },\n    /**\n     * Options as an array.\n     */\n    options: {\n      type: Object,\n      notify: true,\n      value: {}\n    },\n    /**\n     * Fixed width for the chart as a string (i.e. '100px' or '50%').\n     */\n    width: {\n      type: String,\n      value: undefined\n    },\n    /**\n     * Fixed height for the chart as a string (i.e. '100px' or '50%').\n     */\n    height: {\n      type: String,\n      value: undefined\n    },\n    /**\n     * If the line should be drawn or not.\n     */\n    showLine: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * If the line should be drawn or not.\n     */\n    showPoint: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * If the line chart should draw an area.\n     */\n    showArea: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The base for the area chart that will be used\n     * to close the area shape (is normally 0).\n     */\n    areaBase: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Specify if the lines should be smoothed.\n     * This value can be true or false where true\n     * will result in smoothing using the default\n     * smoothing interpolation function Chartist.\n     * Interpolation.cardinal and false results in\n     * Chartist.Interpolation.none.\n     * You can also choose other smoothing /\n     * interpolation functions available in the Chartist.\n     * Interpolation module, or write your own\n     * interpolation function. Check the examples\n     * for a brief description..\n     */\n    lineSmooth: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * If the bar chart should add a background fill to the .ct-grids group.\n     */\n    showGridBackground: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Overriding the natural high of the chart allows you to zoom in\n     * or limit the charts highest displayed value.\n     */\n    high: {\n      type: Number,\n      value: undefined\n    },\n    /**\n     * Overriding the natural low of the chart allows you to zoom in\n     * or limit the charts lowest displayed value.\n     */\n    low: {\n      type: Number,\n      value: undefined\n    },\n    /**\n     *  Padding-top for chart.\n     */\n    paddingTop: {\n      type: Number,\n      value: 15\n    },\n    /**\n     *  Padding-right for chart.\n     */\n    paddingRight: {\n      type: Number,\n      value: 15\n    },\n    /**\n     *  Padding-bottom for chart.\n     */\n    paddingBottom: {\n      type: Number,\n      value: 5\n    },\n    /**\n     *  Padding-left for chart.\n     */\n    paddingLeft: {\n      type: Number,\n      value: 10\n    },\n    /**\n     * When set to true, the last grid line on the x-axis\n     * is not drawn and the chart elements will expand\n     * to the full available width of the chart.\n     * For the last label to be drawn correctly\n     * you might need to add chart padding or offset the\n     * last label with a draw event handler.\n     */\n    fullWidth: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Reverse data including labels, the series order as well as\n     * the whole series data arrays.\n     */\n    reverseData: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The offset of the chart drawing area to the border of the container.\n     */\n    axisXOffset: {\n      type: Number,\n      value: 30\n    },\n    /**\n     * The offset of the chart drawing area to the border of the container.\n     */\n    axisYOffset: {\n      type: Number,\n      value: 30\n    },\n    /**\n     * Position labels at top-left of axis?\n     */\n    axisXTopLeft: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Position labels at top-left of axis?\n     */\n    axisYTopLeft: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Offset X of labels for X-axis\n     */\n    axisXLabelOffsetX: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Offset Y of labels for X-axis\n     */\n    axisXLabelOffsetY: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Offset X of labels for Y-axis\n     */\n    axisYLabelOffsetX: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Offset Y of labels for Y-axis\n     */\n    axisYLabelOffsetY: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Show axis X labels?\n     */\n    axisXShowLabel: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Show axis Y labels?\n     */\n    axisYshowLabel: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Show axis X grid?\n     */\n    axisXShowGrid: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Show axis Y grid?\n     */\n    axisYshowGrid: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Use only integer values (whole numbers) for the scale steps\n     */\n    axisYOnlyInteger: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The responsive options.\n     * (See https://gionkunz.github.io/chartist-js/api-documentation.html.)\n     */\n    responsiveOptions: {\n      type: Array,\n      value: []\n    },\n    /**\n     * Location of the CSV file.\n     */\n    dataSource: {\n      type: String,\n      notify: true\n    },\n    /**\n     * Raw data pulled in from the csv file.\n     */\n    rawData: {\n      type: String,\n      notify: true,\n      value: \"\"\n    }\n  },\n\n  /**\n   * Convert from csv text to an array in the table function\n   */\n  handleResponse: function(e) {\n    let root = this;\n    let raw = root.CSVtoArray(root.rawData);\n    root.data = {\n      labels: raw[0],\n      series: raw.slice(1, raw.length)\n    };\n    root.options = root._getOptions();\n    let chart = root.$.chartist.makeChart();\n  },\n\n  /**\n   * wire it for hax-body\n   */\n  attached: function() {\n    // Establish hax properties if they exist\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Line Chart\",\n        description: \"Creates an accessible line chart based on a CSV.\",\n        icon: \"editor:show-chart\",\n        color: \"green darken-4\",\n        groups: [\"Data\", \"Presentation\"],\n        handles: [\n          {\n            type: \"data\",\n            url: \"csvFile\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"data-source\",\n            title: \"CSV File\",\n            description: \"The URL for your CSV file.\",\n            inputMethod: \"textfield\",\n            icon: \"link\",\n            validationType: \"url\",\n            required: true\n          },\n          {\n            property: \"chartTitle\",\n            title: \"Chart Title\",\n            description: \"Accessible alt text for your chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            required: true\n          },\n          {\n            property: \"chartDesc\",\n            title: \"Chart Description\",\n            description: \"Accessible description of your chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"showLine\",\n            title: \"Show Line\",\n            description: \"If the line should be drawn or not.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"showPoint\",\n            title: \"Show Point\",\n            description: \"If the points should be drawn or not.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"showArea\",\n            title: \"Show Area\",\n            description: \"If the line chart should draw an area.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          }\n        ],\n        configure: [\n          {\n            property: \"width\",\n            title: \"Width\",\n            description: \"The width of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"height\",\n            title: \"Height\",\n            description: \"The height of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingTop\",\n            title: \"Padding-Top\",\n            description: \"The padding at the top of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingRight\",\n            title: \"Padding-Right\",\n            description: \"The padding at the right of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingBottom\",\n            title: \"Padding-Bottom\",\n            description: \"The padding at the bottom of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingLeft\",\n            title: \"Padding-Left\",\n            description: \"The padding at the left of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"high\",\n            title: \"Highest Displayed Value\",\n            description:\n              \"Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"low\",\n            title: \"Lowest Displayed Value\",\n            description:\n              \"Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"areaBase\",\n            title: \"Area base\",\n            description:\n              \"Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"axisXShowGrid\",\n            title: \"X-Axis Grid\",\n            description: \"Should axis X grid be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisYShowGrid\",\n            title: \"Y-Axis Grid\",\n            description: \"Should Y-axis grid be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"showGridBackground\",\n            title: \"Show Grid Background?\",\n            description:\n              \"If the bar chart should add a background fill to the .ct-grids group.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          }\n        ],\n        advanced: [\n          {\n            property: \"scale\",\n            title: \"Scale Name\",\n            description:\n              \"The ratio of width:height of the chart (See https://gionkunz.github.io/chartist-js/getting-started.html#default-sass-settings for $ct-scales and $ct-scales-names).\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"reverseData\",\n            title: \"Reverse Data\",\n            description:\n              \"Reverse data including labels, the series order as well as the whole series data arrays.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"fullWidth\",\n            title: \"Full Width\",\n            description:\n              \"When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisYOnlyInteger\",\n            title: \"Y-Axis Integers\",\n            description: \"Round Y-Axis Scale to Integers\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisXShowLabel\",\n            title: \"X-Axis Labels\",\n            description: \"Should axis X labels be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisYShowLabel\",\n            title: \"Y-Axis Labels\",\n            description: \"Should Y-axis labels be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"axisXLabelOffsetX\",\n            title: \"X-Axis Label X-Offset\",\n            description: \"Horizontal Offset offset of X-Axis labels.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"axisXLabelOffsetY\",\n            title: \"X-Axis Label Y-Offset\",\n            description: \"Vertical Offset offset of X-Axis labels.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"axisYLabelOffsetX\",\n            title: \"Y-Axis Label X-Offset\",\n            description: \"Horizontal Offset offset of Y-Axis labels.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"axisYLabelOffsetY\",\n            title: \"Y-Axis Label Y-Offset\",\n            description: \"Vertical Offset offset of Y-Axis labels.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"lineSmooth\",\n            title: \"Show Area\",\n            description:\n              \"Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description..\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          }\n        ]\n      }\n    };\n\n    this.setHaxProperties(props);\n  },\n\n  /**\n   * returns options as an array\n   */\n  _getOptions: function() {\n    return {\n      showLine: this.showLine,\n      showPoint: this.showPoint,\n      showArea: this.showArea,\n      areaBase: this.areaBase,\n      lineSmooth: this.lineSmooth,\n      fullWidth: this.fullWidth,\n      reverseData: this.reverseData,\n      showGridBackground: this.showGridBackground,\n      axisX: {\n        offset: this.axisXOffset,\n        position: this.axisXTopLeft == true ? \"start\" : \"end\",\n        labelOffset: {\n          x: this.axisXLabelOffsetX,\n          y: this.axisXLabelOffsetY\n        },\n        showLabel: this.axisXShowLabel,\n        showGrid: this.axisXShowGrid\n      },\n      axisY: {\n        offset: this.axisYOffset,\n        position: this.axisYTopLeft == true ? \"start\" : \"end\",\n        labelOffset: {\n          x: this.axisYLabelOffsetX,\n          y: this.axisYLabelOffsetY\n        },\n        showLabel: this.axisYShowLabel,\n        showGrid: this.axisYShowGrid,\n        onlyInteger: this.axisYOnlyInteger\n      }\n    };\n  },\n\n  /**\n   * Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data\n   */\n  CSVtoArray: function(text) {\n    let p = \"\",\n      row = [\"\"],\n      ret = [row],\n      i = 0,\n      r = 0,\n      s = !0,\n      l;\n    for (l in text) {\n      l = text[l];\n      if ('\"' === l) {\n        if (s && l === p) row[i] += l;\n        s = !s;\n      } else if (\",\" === l && s) {\n        if (row[i].trim().match(/^\\d+$/m) !== null)\n          row[i] = parseInt(row[i].trim());\n        l = row[++i] = \"\";\n      } else if (\"\\n\" === l && s) {\n        if (\"\\r\" === p) row[i] = row[i].slice(0, -1);\n        if (row[i].trim().match(/^\\d+$/m) !== null)\n          row[i] = parseInt(row[i].trim());\n        row = ret[++r] = [(l = \"\")];\n        i = 0;\n      } else row[i] += l;\n      p = l;\n    }\n    if (row[i].trim().match(/^\\d+$/m) !== null)\n      row[i] = parseInt(row[i].trim());\n    return ret;\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\nimport \"@lrnwebcomponents/chartist-render/chartist-render.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\n/**\n`lrndesign-pie`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n -\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n    <iron-ajax auto=\"\" url=\"{{dataSource}}\" handle-as=\"text\" last-response=\"{{rawData}}\" on-response=\"handleResponse\"></iron-ajax>\n    <chartist-render id=\"chartist\" type=\"pie\" scale\\$=\"[[scale]]\" chart-title\\$=\"[[chartTitle]]\" chart-desc\\$=\"[[chartDesc]]\" data\\$=\"[[data]]\" options\\$=\"{{options}}\" responsive-options\\$=\"[[responsiveOptions]]\"></chartist-render>\n`,\n\n  is: \"lrndesign-pie\",\n  behaviors: [HAXBehaviors.PropertiesBehaviors, SchemaBehaviors.Schema],\n\n  properties: {\n    /**\n     * The chart title used for accessibility.\n     */\n    chartTitle: {\n      type: String,\n      value: null\n    },\n    /**\n     * The chart description used for accessibility.\n     */\n    chartDesc: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * Scale of the chart.\n     */\n    scale: {\n      type: String,\n      notify: true,\n      value: \"ct-octave\"\n    },\n    /**\n     * Data as an array.\n     */\n    data: {\n      type: Array,\n      notify: true,\n      value: []\n    },\n    /**\n     * Options as an array.\n     */\n    options: {\n      type: Object,\n      notify: true,\n      value: {}\n    },\n    /**\n     * Fixed width for the chart as a string (i.e. '100px' or '50%').\n     */\n    width: {\n      type: String,\n      value: undefined\n    },\n    /**\n     * Fixed height for the chart as a string (i.e. '100px' or '50%').\n     */\n    height: {\n      type: String,\n      value: undefined\n    },\n    /**\n     *  Padding-top for chart.\n     */\n    paddingTop: {\n      type: Number,\n      value: 5\n    },\n    /**\n     *  Padding-right for chart.\n     */\n    paddingRight: {\n      type: Number,\n      value: 5\n    },\n    /**\n     *  Padding-bottom for chart.\n     */\n    paddingBottom: {\n      type: Number,\n      value: 5\n    },\n    /**\n     *  Padding-left for chart.\n     */\n    paddingLeft: {\n      type: Number,\n      value: 5\n    },\n    /**\n     *  Start angle of the pie chart in degrees where 0 points north.\n     * A higher value offsets the start angle clockwise..\n     */\n    startAngle: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Optional total you can specify. By specifying a total value,\n     * the sum of the values in the series must be this total in order\n     * to draw a full pie. You can use this parameter to draw only parts\n     * of a pie or gauge charts.\n     */\n    total: {\n      type: Number,\n      value: undefined\n    },\n    /**\n     * Displays chart as donut instead of pie.\n     */\n    donut: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * If a label should be shown.\n     */\n    showLabel: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Label position offset from the standard position\n     * which is half distance of the radius.\n     * This value can be either positive or negative.\n     * Positive values will position the label away from the center.\n     */\n    labelOffset: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * This option can be set to 'inside', 'outside' or 'center'.\n     * Positioned with 'inside' the labels will be placed on half the distance\n     * of the radius to the border of the Pie by respecting the 'labelOffset'.\n     * The 'outside' option will place the labels at the border of the pie\n     * and 'center' will place the labels in the absolute center point\n     * of the chart. The 'center' option only makes sense\n     * in conjunction with the 'labelOffset' option.\n     */\n    labelPosition: {\n      type: String,\n      value: \"inside\"\n    },\n    /**\n     * Label direction can be 'neutral', 'explode' or 'implode'.\n     * The labels anchor will be positioned based on those settings\n     * as well as the fact if the labels are on the right or\n     * left side of the center of the chart.\n     * Usually explode is useful when labels are positioned\n     * far away from the center.\n     */\n    labelDirection: {\n      type: String,\n      value: \"neutral\"\n    },\n    /**\n     * Reverse data including labels, the series order as well as\n     * the whole series data arrays.\n     */\n    reverseData: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Empty values will be ignored to avoid drawing\n     * unncessary slices and labels\n     */\n    ignoreEmptyValues: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The responsive options.\n     * (See https://gionkunz.github.io/chartist-js/api-documentation.html.)\n     */\n    responsiveOptions: {\n      type: Array,\n      value: []\n    },\n    /**\n     * Location of the CSV file.\n     */\n    dataSource: {\n      type: String,\n      notify: true\n    },\n    /**\n     * Raw data pulled in from the csv file.\n     */\n    rawData: {\n      type: String,\n      notify: true,\n      value: \"\"\n    }\n  },\n\n  /**\n   * Convert from csv text to an array in the table function\n   */\n  handleResponse: function(e) {\n    let root = this;\n    let raw = root.CSVtoArray(root.rawData);\n    root.data = {\n      labels: raw[0],\n      series: raw.slice(1, raw.length)[0]\n    };\n    //root.options = root._getOptions();\n    let chart = root.$.chartist.makeChart();\n  },\n\n  /**\n   * wire it for hax-body\n   */\n  attached: function() {\n    // Establish hax properties if they exist\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Pie Chart\",\n        description: \"Creates an accessible pie chart based on a CSV.\",\n        icon: \"editor:pie-chart\",\n        color: \"green darken-4\",\n        groups: [\"Data\", \"Presentation\"],\n        handles: [\n          {\n            type: \"data\",\n            url: \"csvFile\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"data-source\",\n            title: \"CSV File\",\n            description: \"The URL for your CSV file.\",\n            inputMethod: \"textfield\",\n            icon: \"link\",\n            validationType: \"url\",\n            required: true\n          },\n          {\n            property: \"chartTitle\",\n            title: \"Chart Title\",\n            description: \"Accessible alt text for your chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            required: true\n          },\n          {\n            property: \"chartDesc\",\n            title: \"Chart Description\",\n            description: \"Accessible description of your chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"donut\",\n            title: \"Display as donut?\",\n            description: \"Display as a donut chart instead of a pie chart.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          }\n        ],\n        configure: [\n          {\n            property: \"width\",\n            title: \"Width\",\n            description: \"The width of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"height\",\n            title: \"Height\",\n            description: \"The height of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingTop\",\n            title: \"Padding-Top\",\n            description: \"The padding at the top of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingRight\",\n            title: \"Padding-Right\",\n            description: \"The padding at the right of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingBottom\",\n            title: \"Padding-Bottom\",\n            description: \"The padding at the bottom of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"paddingLeft\",\n            title: \"Padding-Left\",\n            description: \"The padding at the left of the chart.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          }\n        ],\n        advanced: [\n          {\n            property: \"scale\",\n            title: \"Scale Name\",\n            description:\n              \"The ratio of width:height of the chart (See https://gionkunz.github.io/chartist-js/getting-started.html#default-sass-settings for $ct-scales and $ct-scales-names).\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"startAngle\",\n            title: \"Start Angle\",\n            description: \"The angle where pie slices will start.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"total\",\n            title: \"Total of All Slices\",\n            description:\n              \"Optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"showLabel\",\n            title: \"Show labels?\",\n            description: \"Should chart labels be shown?\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"labelOffset\",\n            title: \"Label Offset\",\n            description:\n              \"Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\",\n            inputMethod: \"textfield\",\n            icon: \"text-field\",\n            validationType: \"number\"\n          },\n          {\n            property: \"labelPosition\",\n            title: \"Label Position\",\n            description:\n              'This option can be set to \"inside\", \"outside\" or \"center\". Positioned with \"inside\" the labels will be placed on half the distance of the radius to the border of the Pie by respecting the \"Label Offset\". The \"outside\" option will place the labels at the border of the pie and \"center\" will place the labels in the absolute center point of the chart. The \"center\" option only makes sense in conjunction with the \"Label Offset\" option.',\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"labelDirection\",\n            title: \"Label Direction\",\n            description:\n              'Label direction can be \"neutral\", \"explode\" or \"implode\". The label\\'s anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.',\n            inputMethod: \"textfield\",\n            icon: \"text-field\"\n          },\n          {\n            property: \"reverseData\",\n            title: \"Reverse Data\",\n            description:\n              \"Reverse data including labels, the series order as well as the whole series data arrays.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          },\n          {\n            property: \"ignoreEmptyValues\",\n            title: \"Ignore empty values?\",\n            description:\n              \"Empty values will be ignored to avoid drawing unncessary slices and labels.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box\"\n          }\n        ]\n      }\n    };\n\n    this.setHaxProperties(props);\n  },\n\n  /**\n   * returns options as an array\n   */\n  _getOptions: function() {\n    console.log(\"getting options\");\n    let options = {\n      width: this.width,\n      height: this.height,\n      /*'chartPadding': {\n        'top': this.paddingTop,\n        'right': this.paddingRight,\n        'bottom': this.paddingBottom,\n        'left': this.paddingLeft\n      },*/\n      startAngle: this.startAngle,\n      total: this.total,\n      donut: this.donut,\n      showLabel: this.showLabel,\n      labelOffset: this.labelOffset,\n      labelPosition: this.labelPosition,\n      labelDirection: this.labelDirection,\n      reverseData: this.reverseData,\n      ignoreEmptyValues: this.ignoreEmptyValues\n    };\n    console.log(options);\n    return options;\n  },\n\n  /**\n   * Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data\n   */\n  CSVtoArray: function(text) {\n    let p = \"\",\n      row = [\"\"],\n      ret = [row],\n      i = 0,\n      r = 0,\n      s = !0,\n      l;\n    for (l in text) {\n      l = text[l];\n      if ('\"' === l) {\n        if (s && l === p) row[i] += l;\n        s = !s;\n      } else if (\",\" === l && s) {\n        if (row[i].trim().match(/^\\d+$/m) !== null)\n          row[i] = parseInt(row[i].trim());\n        l = row[++i] = \"\";\n      } else if (\"\\n\" === l && s) {\n        if (\"\\r\" === p) row[i] = row[i].slice(0, -1);\n        if (row[i].trim().match(/^\\d+$/m) !== null)\n          row[i] = parseInt(row[i].trim());\n        row = ret[++r] = [(l = \"\")];\n        i = 0;\n      } else row[i] += l;\n      p = l;\n    }\n    if (row[i].trim().match(/^\\d+$/m) !== null)\n      row[i] = parseInt(row[i].trim());\n    return ret;\n  }\n});\n"],"names":["_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","SchemaBehaviors","Schema","properties","chartId","type","String","value","chartTitle","chartDesc","scale","notify","data","Object","observer","options","width","undefined","height","paddingTop","Number","paddingRight","paddingBottom","paddingLeft","high","low","referenceValue","seriesBarDistance","stackBars","Boolean","stackModeAccumulate","horizontalBars","distributeSeries","reverseData","showGridBackground","axisXOffset","axisYOffset","axisXTopLeft","axisYTopLeft","axisXLabelOffsetX","axisXLabelOffsetY","axisYLabelOffsetX","axisYLabelOffsetY","axisXShowLabel","axisYshowLabel","axisXShowGrid","axisYshowGrid","axisXOnlyInteger","axisYOnlyInteger","responsiveOptions","Array","dataSource","rawData","_dataSourceChanged","newValue","oldValue","_typeof","$","datasource","generateRequest","handleResponse","e","raw","this","CSVtoArray","set","labels","series","slice","length","_dataUpdated","_getOptions","chartist","makeChart","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","url","meta","author","settings","quick","property","inputMethod","validationType","required","configure","advanced","chartPadding","top","right","bottom","left","stackMode","axisX","offset","position","labelOffset","x","y","showLabel","showGrid","onlyInteger","axisY","axisYShowLabel","axisYShowGrid","text","l","p","row","ret","i","r","s","trim","match","parseInt","showLine","showPoint","showArea","areaBase","lineSmooth","fullWidth","startAngle","total","donut","labelPosition","labelDirection","ignoreEmptyValues","console","log"],"mappings":"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X,MAAO,kBACPC,YAAa,oCACbW,YAAa,UACbV,KAAM,cAGVa,UAAW,CACT,CACEJ,SAAU,QACVX,MAAO,QACPC,YAAa,0BACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,SACVX,MAAO,SACPC,YAAa,2BACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,aACVX,MAAO,cACPC,YAAa,uCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,eACVX,MAAO,gBACPC,YAAa,yCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,gBACVX,MAAO,iBACPC,YAAa,0CACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,cACVX,MAAO,eACPC,YAAa,wCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,OACVX,MAAO,0BACPC,YACE,8GACFW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,MACVX,MAAO,yBACPC,YACE,4GACFW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,iBACVX,MAAO,kBACPC,YACE,+HACFW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,gBACVX,MAAO,cACPC,YAAa,+BACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,gBACVX,MAAO,cACPC,YAAa,+BACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,qBACVX,MAAO,wBACPC,YACE,wEACFW,YAAa,UACbV,KAAM,cAGVc,SAAU,CACR,CACEL,SAAU,QACVX,MAAO,aACPC,YACE,sKACFW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,cACVX,MAAO,eACPC,YACE,2FACFW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,sBACVX,MAAO,0BACPC,YACE,+SACFW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,mBACVX,MAAO,oBACPC,YACE,uQACFW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,mBACVX,MAAO,kBACPC,YAAa,iCACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,mBACVX,MAAO,kBACPC,YAAa,iCA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,MAAO,CACLC,MAAO,aACPC,YAAa,mDACbC,KAAM,oBACNC,MAAO,iBACPC,OAAQ,CAAC,OAAQ,gBACjBC,QAAS,CACP,CACEhF,KAAM,OACNiF,IAAK,YAGTC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,cACVX,MAAO,WACPC,YAAa,6BACbW,YAAa,YACbV,KAAM,OACNW,eAAgB,MAChBC,UAAU,GAEZ,CACEH,SAAU,aACVX,MAAO,cACPC,YAAa,sCACbW,YAAa,YACbV,KAAM,aACNY,UAAU,GAEZ,CACEH,SAAU,YACVX,MAAO,oBACPC,YAAa,wCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,WACVX,MAAO,YACPC,YAAa,sCACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,YACVX,MAAO,aACPC,YAAa,wCACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,WACVX,MAAO,YACPC,YAAa,yCACbW,YAAa,UACbV,KAAM,cAGVa,UAAW,CACT,CACEJ,SAAU,QACVX,MAAO,QACPC,YAAa,0BACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,SACVX,MAAO,SACPC,YAAa,2BACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,aACVX,MAAO,cACPC,YAAa,uCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,eACVX,MAAO,gBACPC,YAAa,yCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,gBACVX,MAAO,iBACPC,YAAa,0CACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,cACVX,MAAO,eACPC,YAAa,wCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,OACVX,MAAO,0BACPC,YACE,8GACFW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,MACVX,MAAO,yBACPC,YACE,4GACFW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,WACVX,MAAO,YACPC,YACE,wbACFW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,gBACVX,MAAO,cACPC,YAAa,+BACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,gBACVX,MAAO,cACPC,YAAa,+BACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,qBACVX,MAAO,wBACPC,YACE,wEACFW,YAAa,UACbV,KAAM,cAGVc,SAAU,CACR,CACEL,SAAU,QACVX,MAAO,aACPC,YACE,sKACFW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,cACVX,MAAO,eACPC,YACE,2FACFW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,YACVX,MAAO,aACPC,YACE,gRACFW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,mBACVX,MAAO,kBACPC,YAAa,iCACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,iBACVX,MAAO,gBACPC,YAAa,iCACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,iBACVX,MAAO,gBACPC,YAAa,iCACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,oBACVX,MAAO,wBACPC,YAAa,6CACbW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,oBACVX,MAAO,wBACPC,YAAa,2CACbW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,oBACVX,MAAO,wBACPC,YAAa,6CACbW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,oBACVX,MAAO,wBACPC,YAAa,2CACbW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,aACVX,MAAO,YACPC,YACE,ybACFW,YAAa,UACbV,KAAM,kBAYhBX,YAAa,iBACJ,CACLuD,SAAU/D,KAAK+D,SACfC,UAAWhE,KAAKgE,UAChBC,SAAUjE,KAAKiE,SACfC,SAAUlE,KAAKkE,SACfC,WAAYnE,KAAKmE,WACjBC,UAAWpE,KAAKoE,UAChBlG,YAAa8B,KAAK9B,YAClBC,mBAAoB6B,KAAK7B,mBACzBqE,MAAO,CACLC,OAAQzC,KAAK5B,YACbsE,SAA+B,GAArB1C,KAAK1B,aAAuB,QAAU,MAChDqE,YAAa,CACXC,EAAG5C,KAAKxB,kBACR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YACbV,KAAM,cAER,CACES,SAAU,QACVX,MAAO,oBACPC,YAAa,mDACbW,YAAa,UACbV,KAAM,cAGVa,UAAW,CACT,CACEJ,SAAU,QACVX,MAAO,QACPC,YAAa,0BACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,SACVX,MAAO,SACPC,YAAa,2BACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,aACVX,MAAO,cACPC,YAAa,uCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,eACVX,MAAO,gBACPC,YAAa,yCACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,gBACVX,MAAO,iBACPC,YAAa,0CACbW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,cACVX,MAAO,eACPC,YAAa,wCACbW,YAAa,YACbV,KAAM,eAGVc,SAAU,CACR,CACEL,SAAU,QACVX,MAAO,aACPC,YACE,sKACFW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,aACVX,MAAO,cACPC,YAAa,yCACbW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,QACVX,MAAO,sBACPC,YACE,2NACFW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,YACVX,MAAO,eACPC,YAAa,gCACbW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,cACVX,MAAO,eACPC,YACE,sMACFW,YAAa,YACbV,KAAM,aACNW,eAAgB,UAElB,CACEF,SAAU,gBACVX,MAAO,iBACPC,YACE,obACFW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,iBACVX,MAAO,kBACPC,YACE,sSACFW,YAAa,YACbV,KAAM,cAER,CACES,SAAU,cACVX,MAAO,eACPC,YACE,2FACFW,YAAa,UACbV,KAAM,aAER,CACES,SAAU,oBACVX,MAAO,uBACPC,YACE,8EACFW,YAAa,UACbV,KAAM,kBAYhBX,YAAa,WACXmE,QAAQC,IAAI,uBACR5H,EAAU,CACZC,MAAO+C,KAAK/C,MACZE,OAAQ6C,KAAK7C,OAObkH,WAAYrE,KAAKqE,WACjBC,MAAOtE,KAAKsE,MACZC,MAAOvE,KAAKuE,MACZzB,UAAW9C,KAAK8C,UAChBH,YAAa3C,KAAK2C,YAClB6B,cAAexE,KAAKwE,cACpBC,eAAgBzE,KAAKyE,eACrBvG,YAAa8B,KAAK9B,YAClBwG,kBAAmB1E,KAAK0E,0BAE1BC,QAAQC,IAAI5H,GACLA,GAMTiD,WAAY,SAASmD,OAOjBC,EANEC,EAAI,GACNC,EAAM,CAAC,IACPC,EAAM,CAACD,GACPE,EAAI,EACJC,EAAI,EACJC,GAAI,MAEDN,KAAKD,EAEJ,OADJC,EAAID,EAAKC,KAEHM,GAAKN,IAAMC,IAAGC,EAAIE,IAAMJ,GAC5BM,GAAKA,GACI,MAAQN,GAAKM,GACgB,OAAlCJ,EAAIE,GAAGG,OAAOC,MAAM,YACtBN,EAAIE,GAAKK,SAASP,EAAIE,GAAGG,SAC3BP,EAAIE,IAAME,GAAK,IACN,OAASJ,GAAKM,GACnB,OAASL,IAAGC,EAAIE,GAAKF,EAAIE,GAAGpD,MAAM,GAAI,IACJ,OAAlCkD,EAAIE,GAAGG,OAAOC,MAAM,YACtBN,EAAIE,GAAKK,SAASP,EAAIE,GAAGG,SAC3BL,EAAMC,IAAME,GAAK,CAAEL,EAAI,IACvBI,EAAI,GACCF,EAAIE,IAAMJ,EACjBC,EAAID,SAEgC,OAAlCE,EAAIE,GAAGG,OAAOC,MAAM,YACtBN,EAAIE,GAAKK,SAASP,EAAIE,GAAGG,SACpBJ"}