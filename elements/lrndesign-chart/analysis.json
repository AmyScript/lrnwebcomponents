{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`lrndesign-bar`\nA LRN element",
      "summary": "",
      "path": "lib/lrndesign-bar.js",
      "properties": [
        {
          "name": "chartId",
          "type": "string | null | undefined",
          "description": "The unique identifier of the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"chart\""
        },
        {
          "name": "chartTitle",
          "type": "string | null | undefined",
          "description": "The chart title used for accessibility.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "chartDesc",
          "type": "string | null | undefined",
          "description": "The chart description used for accessibility.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "scale",
          "type": "string | null | undefined",
          "description": "Scale of the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "data",
          "type": "Object | null | undefined",
          "description": "Data as an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dataUpdated\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "options",
          "type": "Object | null | undefined",
          "description": "Options as an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "width",
          "type": "string | null | undefined",
          "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "height",
          "type": "string | null | undefined",
          "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "paddingTop",
          "type": "number | null | undefined",
          "description": "Padding-top for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "paddingRight",
          "type": "number | null | undefined",
          "description": "Padding-right for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "paddingBottom",
          "type": "number | null | undefined",
          "description": "Padding-bottom for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "paddingLeft",
          "type": "number | null | undefined",
          "description": "Padding-left for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "high",
          "type": "number | null | undefined",
          "description": "Overriding the natural high of the chart allows you to zoom in\nor limit the charts highest displayed value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "low",
          "type": "number | null | undefined",
          "description": "Overriding the natural low of the chart allows you to zoom in\nor limit the charts lowest displayed value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "referenceValue",
          "type": "number | null | undefined",
          "description": "Unless low/high are explicitly set, bar chart will be\ncentered at zero by default. Set referenceValue to null to auto scale.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "seriesBarDistance",
          "type": "number | null | undefined",
          "description": "Specify the distance in pixel of bars in a group.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "15"
        },
        {
          "name": "stackBars",
          "type": "boolean | null | undefined",
          "description": "If set to true this property will cause the series bars\nto be stacked. Check the \"stackMode\" option\nfor further stacking options.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "stackModeAccumulate",
          "type": "boolean | null | undefined",
          "description": "If set to \"true\" this property will form a total\nfor each series point. This will also influence\nthe y-axis and the overall bounds of the chart.\nIf set to \"false\" this property will force\nthe stacked bars to draw from the zero line.\nIn stacked mode the \"seriesBarDistance\" property will have no effect.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "horizontalBars",
          "type": "boolean | null | undefined",
          "description": "Inverts the axes of the bar chart in order to draw\na horizontal bar chart. Be aware that you also need\nto invert your axis settings as the Y Axis will now display\nthe labels and the X Axis the values.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "distributeSeries",
          "type": "boolean | null | undefined",
          "description": "If set to true then each bar will represent a series and\nthe data array is expected to be a one dimensional array\nof data values rather than a series array of series.\nThis is useful if the bar chart should represent\na profile rather than some data over time.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "reverseData",
          "type": "boolean | null | undefined",
          "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "showGridBackground",
          "type": "boolean | null | undefined",
          "description": "If the bar chart should add a background fill to the .ct-grids group.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "axisXOffset",
          "type": "number | null | undefined",
          "description": "The offset of the chart drawing area to the border of the container.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "30"
        },
        {
          "name": "axisYOffset",
          "type": "number | null | undefined",
          "description": "The offset of the chart drawing area to the border of the container.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "30"
        },
        {
          "name": "axisXTopLeft",
          "type": "boolean | null | undefined",
          "description": "Position labels at top-left of axis?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "axisYTopLeft",
          "type": "boolean | null | undefined",
          "description": "Position labels at top-left of axis?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisXLabelOffsetX",
          "type": "number | null | undefined",
          "description": "Offset X of labels for X-axis",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "axisXLabelOffsetY",
          "type": "number | null | undefined",
          "description": "Offset Y of labels for X-axis",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "axisYLabelOffsetX",
          "type": "number | null | undefined",
          "description": "Offset X of labels for Y-axis",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "axisYLabelOffsetY",
          "type": "number | null | undefined",
          "description": "Offset Y of labels for Y-axis",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "axisXShowLabel",
          "type": "boolean | null | undefined",
          "description": "Show axis X labels?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 268,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisYshowLabel",
          "type": "boolean | null | undefined",
          "description": "Show axis Y labels?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 275,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisXShowGrid",
          "type": "boolean | null | undefined",
          "description": "Show axis X grid?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisYshowGrid",
          "type": "boolean | null | undefined",
          "description": "Show axis Y grid?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisXOnlyInteger",
          "type": "boolean | null | undefined",
          "description": "Use only integer values (whole numbers) for the scale steps",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 296,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "axisYOnlyInteger",
          "type": "boolean | null | undefined",
          "description": "Use only integer values (whole numbers) for the scale steps",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 4
            },
            "end": {
              "line": 303,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "responsiveOptions",
          "type": "Array | null | undefined",
          "description": "The responsive options.\n(See https://gionkunz.github.io/chartist-js/api-documentation.html.)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "dataSource",
          "type": "string | null | undefined",
          "description": "Location of the CSV file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 319,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_dataSourceChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "rawData",
          "type": "string | null | undefined",
          "description": "Raw data pulled in from the csv file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 4
            },
            "end": {
              "line": 327,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_template",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 1
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_dataSourceChanged",
          "description": "Generate the request when we notice data source change.\nThis enables us to use the same element with things that\nmanually generate the data within the app instead of\npulling it dynamically from a file / endpoint.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 2
            },
            "end": {
              "line": 340,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "handleResponse",
          "description": "Convert from csv text to an array in the table function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 2
            },
            "end": {
              "line": 352,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dataUpdated",
          "description": "Update the chart object when we get new data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 363,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "wire it for hax-body",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 2
            },
            "end": {
              "line": 621,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getOptions",
          "description": "returns options as an array",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 626,
              "column": 2
            },
            "end": {
              "line": 669,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "CSVtoArray",
          "description": "Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 674,
              "column": 2
            },
            "end": {
              "line": 703,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 8
        },
        "end": {
          "line": 704,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "chart-id",
          "description": "The unique identifier of the chart.",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "chart-title",
          "description": "The chart title used for accessibility.",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "chart-desc",
          "description": "The chart description used for accessibility.",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "scale",
          "description": "Scale of the chart.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "data",
          "description": "Data as an array.",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "options",
          "description": "Options as an array.",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "width",
          "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "height",
          "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "padding-top",
          "description": "Padding-top for chart.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-right",
          "description": "Padding-right for chart.",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-bottom",
          "description": "Padding-bottom for chart.",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-left",
          "description": "Padding-left for chart.",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "high",
          "description": "Overriding the natural high of the chart allows you to zoom in\nor limit the charts highest displayed value.",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "low",
          "description": "Overriding the natural low of the chart allows you to zoom in\nor limit the charts lowest displayed value.",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "reference-value",
          "description": "Unless low/high are explicitly set, bar chart will be\ncentered at zero by default. Set referenceValue to null to auto scale.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "series-bar-distance",
          "description": "Specify the distance in pixel of bars in a group.",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "stack-bars",
          "description": "If set to true this property will cause the series bars\nto be stacked. Check the \"stackMode\" option\nfor further stacking options.",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "stack-mode-accumulate",
          "description": "If set to \"true\" this property will form a total\nfor each series point. This will also influence\nthe y-axis and the overall bounds of the chart.\nIf set to \"false\" this property will force\nthe stacked bars to draw from the zero line.\nIn stacked mode the \"seriesBarDistance\" property will have no effect.",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "horizontal-bars",
          "description": "Inverts the axes of the bar chart in order to draw\na horizontal bar chart. Be aware that you also need\nto invert your axis settings as the Y Axis will now display\nthe labels and the X Axis the values.",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "distribute-series",
          "description": "If set to true then each bar will represent a series and\nthe data array is expected to be a one dimensional array\nof data values rather than a series array of series.\nThis is useful if the bar chart should represent\na profile rather than some data over time.",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "reverse-data",
          "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-grid-background",
          "description": "If the bar chart should add a background fill to the .ct-grids group.",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-x-offset",
          "description": "The offset of the chart drawing area to the border of the container.",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-y-offset",
          "description": "The offset of the chart drawing area to the border of the container.",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-x-top-left",
          "description": "Position labels at top-left of axis?",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-y-top-left",
          "description": "Position labels at top-left of axis?",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-x-label-offset-x",
          "description": "Offset X of labels for X-axis",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-x-label-offset-y",
          "description": "Offset Y of labels for X-axis",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-y-label-offset-x",
          "description": "Offset X of labels for Y-axis",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-y-label-offset-y",
          "description": "Offset Y of labels for Y-axis",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-x-show-label",
          "description": "Show axis X labels?",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 268,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-yshow-label",
          "description": "Show axis Y labels?",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 275,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-x-show-grid",
          "description": "Show axis X grid?",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-yshow-grid",
          "description": "Show axis Y grid?",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-x-only-integer",
          "description": "Use only integer values (whole numbers) for the scale steps",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 296,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-y-only-integer",
          "description": "Use only integer values (whole numbers) for the scale steps",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 4
            },
            "end": {
              "line": 303,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "responsive-options",
          "description": "The responsive options.\n(See https://gionkunz.github.io/chartist-js/api-documentation.html.)",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "data-source",
          "description": "Location of the CSV file.",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 319,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "raw-data",
          "description": "Raw data pulled in from the csv file.",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 4
            },
            "end": {
              "line": 327,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "scale-changed",
          "description": "Fired when the `scale` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "options-changed",
          "description": "Fired when the `options` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-source-changed",
          "description": "Fired when the `dataSource` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "raw-data-changed",
          "description": "Fired when the `rawData` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "lrndesign-bar"
    },
    {
      "description": "`lrndesign-line`\nA LRN element",
      "summary": "",
      "path": "lib/lrndesign-line.js",
      "properties": [
        {
          "name": "chartId",
          "type": "string | null | undefined",
          "description": "The unique identifier of the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"chart\""
        },
        {
          "name": "chartTitle",
          "type": "string | null | undefined",
          "description": "The chart title used for accessibility.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "chartDesc",
          "type": "string | null | undefined",
          "description": "The chart description used for accessibility.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "scale",
          "type": "string | null | undefined",
          "description": "Scale of the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"ct-octave\""
        },
        {
          "name": "data",
          "type": "Array | null | undefined",
          "description": "Data as an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "options",
          "type": "Object | null | undefined",
          "description": "Options as an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "width",
          "type": "string | null | undefined",
          "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "height",
          "type": "string | null | undefined",
          "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "showLine",
          "type": "boolean | null | undefined",
          "description": "If the line should be drawn or not.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "showPoint",
          "type": "boolean | null | undefined",
          "description": "If the line should be drawn or not.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "showArea",
          "type": "boolean | null | undefined",
          "description": "If the line chart should draw an area.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "areaBase",
          "type": "number | null | undefined",
          "description": "The base for the area chart that will be used\nto close the area shape (is normally 0).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "lineSmooth",
          "type": "boolean | null | undefined",
          "description": "Specify if the lines should be smoothed.\nThis value can be true or false where true\nwill result in smoothing using the default\nsmoothing interpolation function Chartist.\nInterpolation.cardinal and false results in\nChartist.Interpolation.none.\nYou can also choose other smoothing /\ninterpolation functions available in the Chartist.\nInterpolation module, or write your own\ninterpolation function. Check the examples\nfor a brief description..",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "showGridBackground",
          "type": "boolean | null | undefined",
          "description": "If the bar chart should add a background fill to the .ct-grids group.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "high",
          "type": "number | null | undefined",
          "description": "Overriding the natural high of the chart allows you to zoom in\nor limit the charts highest displayed value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "low",
          "type": "number | null | undefined",
          "description": "Overriding the natural low of the chart allows you to zoom in\nor limit the charts lowest displayed value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "paddingTop",
          "type": "number | null | undefined",
          "description": "Padding-top for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "15"
        },
        {
          "name": "paddingRight",
          "type": "number | null | undefined",
          "description": "Padding-right for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "15"
        },
        {
          "name": "paddingBottom",
          "type": "number | null | undefined",
          "description": "Padding-bottom for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "paddingLeft",
          "type": "number | null | undefined",
          "description": "Padding-left for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "10"
        },
        {
          "name": "fullWidth",
          "type": "boolean | null | undefined",
          "description": "When set to true, the last grid line on the x-axis\nis not drawn and the chart elements will expand\nto the full available width of the chart.\nFor the last label to be drawn correctly\nyou might need to add chart padding or offset the\nlast label with a draw event handler.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "reverseData",
          "type": "boolean | null | undefined",
          "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 207,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "axisXOffset",
          "type": "number | null | undefined",
          "description": "The offset of the chart drawing area to the border of the container.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "30"
        },
        {
          "name": "axisYOffset",
          "type": "number | null | undefined",
          "description": "The offset of the chart drawing area to the border of the container.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "30"
        },
        {
          "name": "axisXTopLeft",
          "type": "boolean | null | undefined",
          "description": "Position labels at top-left of axis?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "axisYTopLeft",
          "type": "boolean | null | undefined",
          "description": "Position labels at top-left of axis?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisXLabelOffsetX",
          "type": "number | null | undefined",
          "description": "Offset X of labels for X-axis",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "axisXLabelOffsetY",
          "type": "number | null | undefined",
          "description": "Offset Y of labels for X-axis",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "axisYLabelOffsetX",
          "type": "number | null | undefined",
          "description": "Offset X of labels for Y-axis",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "axisYLabelOffsetY",
          "type": "number | null | undefined",
          "description": "Offset Y of labels for Y-axis",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "axisXShowLabel",
          "type": "boolean | null | undefined",
          "description": "Show axis X labels?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisYshowLabel",
          "type": "boolean | null | undefined",
          "description": "Show axis Y labels?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisXShowGrid",
          "type": "boolean | null | undefined",
          "description": "Show axis X grid?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisYshowGrid",
          "type": "boolean | null | undefined",
          "description": "Show axis Y grid?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 4
            },
            "end": {
              "line": 291,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "axisYOnlyInteger",
          "type": "boolean | null | undefined",
          "description": "Use only integer values (whole numbers) for the scale steps",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 4
            },
            "end": {
              "line": 298,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "responsiveOptions",
          "type": "Array | null | undefined",
          "description": "The responsive options.\n(See https://gionkunz.github.io/chartist-js/api-documentation.html.)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 303,
              "column": 4
            },
            "end": {
              "line": 306,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "dataSource",
          "type": "string | null | undefined",
          "description": "Location of the CSV file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "rawData",
          "type": "string | null | undefined",
          "description": "Raw data pulled in from the csv file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_template",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 1
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "handleResponse",
          "description": "Convert from csv text to an array in the table function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 2
            },
            "end": {
              "line": 336,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "wire it for hax-body",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 2
            },
            "end": {
              "line": 595,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getOptions",
          "description": "returns options as an array",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 600,
              "column": 2
            },
            "end": {
              "line": 632,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "CSVtoArray",
          "description": "Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 637,
              "column": 2
            },
            "end": {
              "line": 666,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 8
        },
        "end": {
          "line": 667,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "chart-id",
          "description": "The unique identifier of the chart.",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "chart-title",
          "description": "The chart title used for accessibility.",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "chart-desc",
          "description": "The chart description used for accessibility.",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "scale",
          "description": "Scale of the chart.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "data",
          "description": "Data as an array.",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "options",
          "description": "Options as an array.",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "width",
          "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "height",
          "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "show-line",
          "description": "If the line should be drawn or not.",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-point",
          "description": "If the line should be drawn or not.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-area",
          "description": "If the line chart should draw an area.",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "area-base",
          "description": "The base for the area chart that will be used\nto close the area shape (is normally 0).",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "line-smooth",
          "description": "Specify if the lines should be smoothed.\nThis value can be true or false where true\nwill result in smoothing using the default\nsmoothing interpolation function Chartist.\nInterpolation.cardinal and false results in\nChartist.Interpolation.none.\nYou can also choose other smoothing /\ninterpolation functions available in the Chartist.\nInterpolation module, or write your own\ninterpolation function. Check the examples\nfor a brief description..",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-grid-background",
          "description": "If the bar chart should add a background fill to the .ct-grids group.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "high",
          "description": "Overriding the natural high of the chart allows you to zoom in\nor limit the charts highest displayed value.",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "low",
          "description": "Overriding the natural low of the chart allows you to zoom in\nor limit the charts lowest displayed value.",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-top",
          "description": "Padding-top for chart.",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-right",
          "description": "Padding-right for chart.",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-bottom",
          "description": "Padding-bottom for chart.",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-left",
          "description": "Padding-left for chart.",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "full-width",
          "description": "When set to true, the last grid line on the x-axis\nis not drawn and the chart elements will expand\nto the full available width of the chart.\nFor the last label to be drawn correctly\nyou might need to add chart padding or offset the\nlast label with a draw event handler.",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "reverse-data",
          "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 207,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-x-offset",
          "description": "The offset of the chart drawing area to the border of the container.",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-y-offset",
          "description": "The offset of the chart drawing area to the border of the container.",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-x-top-left",
          "description": "Position labels at top-left of axis?",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-y-top-left",
          "description": "Position labels at top-left of axis?",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-x-label-offset-x",
          "description": "Offset X of labels for X-axis",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-x-label-offset-y",
          "description": "Offset Y of labels for X-axis",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-y-label-offset-x",
          "description": "Offset X of labels for Y-axis",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-y-label-offset-y",
          "description": "Offset Y of labels for Y-axis",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "axis-x-show-label",
          "description": "Show axis X labels?",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-yshow-label",
          "description": "Show axis Y labels?",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-x-show-grid",
          "description": "Show axis X grid?",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-yshow-grid",
          "description": "Show axis Y grid?",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 4
            },
            "end": {
              "line": 291,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "axis-y-only-integer",
          "description": "Use only integer values (whole numbers) for the scale steps",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 4
            },
            "end": {
              "line": 298,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "responsive-options",
          "description": "The responsive options.\n(See https://gionkunz.github.io/chartist-js/api-documentation.html.)",
          "sourceRange": {
            "start": {
              "line": 303,
              "column": 4
            },
            "end": {
              "line": 306,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "data-source",
          "description": "Location of the CSV file.",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "raw-data",
          "description": "Raw data pulled in from the csv file.",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "scale-changed",
          "description": "Fired when the `scale` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-changed",
          "description": "Fired when the `data` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "options-changed",
          "description": "Fired when the `options` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-source-changed",
          "description": "Fired when the `dataSource` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "raw-data-changed",
          "description": "Fired when the `rawData` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "lrndesign-line"
    },
    {
      "description": "`lrndesign-pie`\nA LRN element",
      "summary": "",
      "path": "lib/lrndesign-pie.js",
      "properties": [
        {
          "name": "chartTitle",
          "type": "string | null | undefined",
          "description": "The chart title used for accessibility.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "chartDesc",
          "type": "string | null | undefined",
          "description": "The chart description used for accessibility.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "scale",
          "type": "string | null | undefined",
          "description": "Scale of the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"ct-octave\""
        },
        {
          "name": "data",
          "type": "Array | null | undefined",
          "description": "Data as an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "options",
          "type": "Object | null | undefined",
          "description": "Options as an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "width",
          "type": "string | null | undefined",
          "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "height",
          "type": "string | null | undefined",
          "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "paddingTop",
          "type": "number | null | undefined",
          "description": "Padding-top for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "paddingRight",
          "type": "number | null | undefined",
          "description": "Padding-right for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "paddingBottom",
          "type": "number | null | undefined",
          "description": "Padding-bottom for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "paddingLeft",
          "type": "number | null | undefined",
          "description": "Padding-left for chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "startAngle",
          "type": "number | null | undefined",
          "description": "Start angle of the pie chart in degrees where 0 points north.\nA higher value offsets the start angle clockwise..",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "total",
          "type": "number | null | undefined",
          "description": "Optional total you can specify. By specifying a total value,\nthe sum of the values in the series must be this total in order\nto draw a full pie. You can use this parameter to draw only parts\nof a pie or gauge charts.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "donut",
          "type": "boolean | null | undefined",
          "description": "Displays chart as donut instead of pie.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "showLabel",
          "type": "boolean | null | undefined",
          "description": "If a label should be shown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "labelOffset",
          "type": "number | null | undefined",
          "description": "Label position offset from the standard position\nwhich is half distance of the radius.\nThis value can be either positive or negative.\nPositive values will position the label away from the center.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "labelPosition",
          "type": "string | null | undefined",
          "description": "This option can be set to 'inside', 'outside' or 'center'.\nPositioned with 'inside' the labels will be placed on half the distance\nof the radius to the border of the Pie by respecting the 'labelOffset'.\nThe 'outside' option will place the labels at the border of the pie\nand 'center' will place the labels in the absolute center point\nof the chart. The 'center' option only makes sense\nin conjunction with the 'labelOffset' option.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"inside\""
        },
        {
          "name": "labelDirection",
          "type": "string | null | undefined",
          "description": "Label direction can be 'neutral', 'explode' or 'implode'.\nThe labels anchor will be positioned based on those settings\nas well as the fact if the labels are on the right or\nleft side of the center of the chart.\nUsually explode is useful when labels are positioned\nfar away from the center.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"neutral\""
        },
        {
          "name": "reverseData",
          "type": "boolean | null | undefined",
          "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "ignoreEmptyValues",
          "type": "boolean | null | undefined",
          "description": "Empty values will be ignored to avoid drawing\nunncessary slices and labels",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "responsiveOptions",
          "type": "Array | null | undefined",
          "description": "The responsive options.\n(See https://gionkunz.github.io/chartist-js/api-documentation.html.)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "dataSource",
          "type": "string | null | undefined",
          "description": "Location of the CSV file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "rawData",
          "type": "string | null | undefined",
          "description": "Raw data pulled in from the csv file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_template",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 1
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "handleResponse",
          "description": "Convert from csv text to an array in the table function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 2
            },
            "end": {
              "line": 232,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "wire it for hax-body",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 2
            },
            "end": {
              "line": 416,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getOptions",
          "description": "returns options as an array",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 421,
              "column": 2
            },
            "end": {
              "line": 444,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "CSVtoArray",
          "description": "Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 449,
              "column": 2
            },
            "end": {
              "line": 478,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 8
        },
        "end": {
          "line": 479,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "chart-title",
          "description": "The chart title used for accessibility.",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "chart-desc",
          "description": "The chart description used for accessibility.",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "scale",
          "description": "Scale of the chart.",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "data",
          "description": "Data as an array.",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "options",
          "description": "Options as an array.",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "width",
          "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "height",
          "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "padding-top",
          "description": "Padding-top for chart.",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-right",
          "description": "Padding-right for chart.",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-bottom",
          "description": "Padding-bottom for chart.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "padding-left",
          "description": "Padding-left for chart.",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "start-angle",
          "description": "Start angle of the pie chart in degrees where 0 points north.\nA higher value offsets the start angle clockwise..",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "total",
          "description": "Optional total you can specify. By specifying a total value,\nthe sum of the values in the series must be this total in order\nto draw a full pie. You can use this parameter to draw only parts\nof a pie or gauge charts.",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "donut",
          "description": "Displays chart as donut instead of pie.",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-label",
          "description": "If a label should be shown.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label-offset",
          "description": "Label position offset from the standard position\nwhich is half distance of the radius.\nThis value can be either positive or negative.\nPositive values will position the label away from the center.",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "label-position",
          "description": "This option can be set to 'inside', 'outside' or 'center'.\nPositioned with 'inside' the labels will be placed on half the distance\nof the radius to the border of the Pie by respecting the 'labelOffset'.\nThe 'outside' option will place the labels at the border of the pie\nand 'center' will place the labels in the absolute center point\nof the chart. The 'center' option only makes sense\nin conjunction with the 'labelOffset' option.",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label-direction",
          "description": "Label direction can be 'neutral', 'explode' or 'implode'.\nThe labels anchor will be positioned based on those settings\nas well as the fact if the labels are on the right or\nleft side of the center of the chart.\nUsually explode is useful when labels are positioned\nfar away from the center.",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "reverse-data",
          "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "ignore-empty-values",
          "description": "Empty values will be ignored to avoid drawing\nunncessary slices and labels",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "responsive-options",
          "description": "The responsive options.\n(See https://gionkunz.github.io/chartist-js/api-documentation.html.)",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "data-source",
          "description": "Location of the CSV file.",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "raw-data",
          "description": "Raw data pulled in from the csv file.",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "scale-changed",
          "description": "Fired when the `scale` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-changed",
          "description": "Fired when the `data` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "options-changed",
          "description": "Fired when the `options` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-source-changed",
          "description": "Fired when the `dataSource` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "raw-data-changed",
          "description": "Fired when the `rawData` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "lrndesign-pie"
    }
  ]
}
