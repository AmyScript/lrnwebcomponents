{"version":3,"file":"lrnsys-randomimage.umd.js","sources":["lrnsys-randomimage.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/random-image/random-image.js\";\nimport \"@polymer/paper-button/paper-button.js\";\n/**\n`lrnsys-randomimage`\nA LRN element\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n    <div id=\"image-list\">\n      <random-image images-list\\$=\"{{images}}\"></random-image>\n  </div>\n  <paper-button raised=\"\" on-click=\"reload\">Reload</paper-button>\n`,\n\n  is: \"lrnsys-randomimage\",\n\n  properties: {\n    /**\n     * An array of images to pick from at random.\n     */\n    images: {\n      type: Object,\n      notify: true,\n      value: function() {\n        return [];\n      }\n    }\n  },\n\n  /**\n   * trigger a reload of the random-image element\n   */\n  reload: function(e) {\n    let root = this;\n    root.shadowRoot.querySelector(\n      \"#image-list\"\n    ).innerHTML = root.shadowRoot.querySelector(\"#image-list\").innerHTML;\n  }\n});\n"],"names":["_template","html","is","properties","images","type","Object","notify","value","reload","e","this","shadowRoot","querySelector","innerHTML"],"mappings":"6lCASQ,CACNA,UAAWC,YAYXC,GAAI,qBAEJC,WAAY,CAIVC,OAAQ,CACNC,KAAMC,OACNC,QAAQ,EACRC,MAAO,iBACE,MAQbC,OAAQ,SAASC,GACJC,KACNC,WAAWC,cACd,eACAC,UAHSH,KAGQC,WAAWC,cAAc,eAAeC"}