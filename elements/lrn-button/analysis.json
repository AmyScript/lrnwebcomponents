{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`lrn-button`\n`Simple button wrapper with a few options`",
      "summary": "",
      "path": "lrn-button.js",
      "properties": [
        {
          "name": "templateUrl",
          "type": "?",
          "description": "A file that contains the HTML template for the element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "propertiesUrl",
          "type": "?",
          "description": "A file that contains the properties that will be wired into this element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 2
            },
            "end": {
              "line": 221,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "HAXPropertiesUrl",
          "type": "?",
          "description": "A file that contains the HAX properties that will be wired into this element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "styleUrl",
          "type": "?",
          "description": "A file that contains the css for this element to be mixed into the html block.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "href",
          "type": "string | null | undefined",
          "description": "Standard href pass down",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"#\""
        },
        {
          "name": "showHref",
          "type": "string | null | undefined",
          "description": "What to display for the resource",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "raised",
          "type": "boolean | null | undefined",
          "description": "If the button should be visually lifted off the UI.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label to place in the text area",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "target",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 2
            },
            "end": {
              "line": 134,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "iron-icon to use (with iconset if needed)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hoverClass",
          "type": "string | null | undefined",
          "description": "Classes to add / subtract based on the item being hovered.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "iconClass",
          "type": "string | null | undefined",
          "description": "Icon class in the event you want it to look different from the text.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "innerClass",
          "type": "string | null | undefined",
          "description": "Inner container classes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "color",
          "type": "string | null | undefined",
          "description": "materializeCSS color class",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "textColor",
          "type": "string | null | undefined",
          "description": "materializeCSS color class for text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "prefetch",
          "type": "string | null | undefined",
          "description": "Allow for prefetch data on hover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "alt",
          "type": "string | null | undefined",
          "description": "Alt via tooltip.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 190,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "focusState",
          "type": "boolean | null | undefined",
          "description": "Tracks if focus state is applied",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "life cycle, element is afixed to the DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "life cycle, element is removed from the DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 254,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "Go to the href if the button isn't disabled",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 264,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "tapEventOn",
          "description": "Class processing on un-tap / hover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 2
            },
            "end": {
              "line": 284,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "tapEventOff",
          "description": "Undo class processing on un-tap / hover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 304,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focusToggle",
          "description": "Handle toggle for mouse class and manage classList array for paper-button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 2
            },
            "end": {
              "line": 340,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 341,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "LrnButton",
      "attributes": [
        {
          "name": "href",
          "description": "Standard href pass down",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "show-href",
          "description": "What to display for the resource",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "raised",
          "description": "If the button should be visually lifted off the UI.",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "Label to place in the text area",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "target",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 2
            },
            "end": {
              "line": 134,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "iron-icon to use (with iconset if needed)",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hover-class",
          "description": "Classes to add / subtract based on the item being hovered.",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-class",
          "description": "Icon class in the event you want it to look different from the text.",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "inner-class",
          "description": "Inner container classes.",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "color",
          "description": "materializeCSS color class",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "text-color",
          "description": "materializeCSS color class for text",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "prefetch",
          "description": "Allow for prefetch data on hover",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "alt",
          "description": "Alt via tooltip.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled state.",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 190,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "focus-state",
          "description": "Tracks if focus state is applied",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
