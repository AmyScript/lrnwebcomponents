{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`hax-app`\n An app registered with HAX. This provides all the information needed for HAX\n to understand how to talk to this backend as well as represent it in listings.\n It also expresses how to take that data and wire it up to gizmos making it able to\n utilize multiple display methods.",
      "summary": "",
      "path": "lib/hax-app.js",
      "properties": [
        {
          "name": "data",
          "type": "Object | null | undefined",
          "description": "The data model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "ON attached life-cycle, meaning it's in the body most likely, then fire registration.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 2
            },
            "end": {
              "line": 158,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 141,
          "column": 8
        },
        "end": {
          "line": 159,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "data",
          "description": "The data model.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-app"
    },
    {
      "description": "`hax-stax`\nRegister a stax with HAX store.",
      "summary": "",
      "path": "lib/hax-stax.js",
      "properties": [
        {
          "name": "data",
          "type": "Object | null | undefined",
          "description": "The data model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "ON attached life-cycle, meaning it's in the body most likely, then fire registration.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 61,
          "column": 8
        },
        "end": {
          "line": 79,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "data",
          "description": "The data model.",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-stax"
    },
    {
      "description": "`hax-stax-browser-item`\nA button on the hax-gizmo-browser app display",
      "summary": "",
      "path": "lib/hax-stax-browser-item.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "staxReference",
          "type": "Object | null | undefined",
          "description": "Index position in the original list of imports",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "image",
          "type": "string | null | undefined",
          "description": "Image for the button, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "author",
          "type": "string | null | undefined",
          "description": "Author related to this gizmo",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "teaser",
          "type": "string | null | undefined",
          "description": "Teaser / headline.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "Description for this.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "examples",
          "type": "Array | null | undefined",
          "description": "Examples, a list of image links, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "status",
          "type": "Array | null | undefined",
          "description": "Status, whether disabled, enabled, or other future states.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "tag",
          "type": "string | null | undefined",
          "description": "Tag",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "elevation",
          "type": "number | null | undefined",
          "description": "Elevation off the UI",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        }
      ],
      "methods": [
        {
          "name": "tapEventOn",
          "description": "special handling for taps on the thing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "tapEventOff",
          "description": "Hover off stop showing the deeper shadow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireEvent",
          "description": "Fire an event that includes the eventName of what was just pressed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 8
        },
        "end": {
          "line": 172,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "title",
          "description": "Title",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "stax-reference",
          "description": "Index position in the original list of imports",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "image",
          "description": "Image for the button, optional.",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "author",
          "description": "Author related to this gizmo",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "teaser",
          "description": "Teaser / headline.",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "Description for this.",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "examples",
          "description": "Examples, a list of image links, optional.",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "status",
          "description": "Status, whether disabled, enabled, or other future states.",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "tag",
          "description": "Tag",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "elevation",
          "description": "Elevation off the UI",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-stax-browser-item"
    },
    {
      "description": "`hax-stax-browser`\nSelect a stack / template to insert",
      "summary": "",
      "path": "lib/hax-stax-browser.js",
      "properties": [
        {
          "name": "staxList",
          "type": "Array | null | undefined",
          "description": "The list of stax",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_staxListChanged\"",
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 2
            },
            "end": {
              "line": 73,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 94,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_staxListChanged",
          "description": "Notice staxList changing.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resetBrowser",
          "description": "Reset this browser.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 113,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 8
        },
        "end": {
          "line": 114,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "stax-list",
          "description": "The list of stax",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-stax-browser"
    },
    {
      "description": "`hax-blox`\nRegister a blox with HAX store.",
      "summary": "",
      "path": "lib/hax-blox.js",
      "properties": [
        {
          "name": "data",
          "type": "Object | null | undefined",
          "description": "The data model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "ON attached life-cycle, meaning it's in the body most likely, then fire registration.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 61,
          "column": 8
        },
        "end": {
          "line": 79,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "data",
          "description": "The data model.",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-blox"
    },
    {
      "description": "`hax-blox-browser-item`\nA button on the hax-gizmo-browser app display",
      "summary": "",
      "path": "lib/hax-blox-browser-item.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "bloxReference",
          "type": "Object | null | undefined",
          "description": "Index position in the original list of imports",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "icon for the button, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "author",
          "type": "string | null | undefined",
          "description": "Author related to this gizmo",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "teaser",
          "type": "string | null | undefined",
          "description": "Teaser / headline.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "Description for this.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "examples",
          "type": "Array | null | undefined",
          "description": "Examples, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "status",
          "type": "Array | null | undefined",
          "description": "Status, whether disabled, enabled, or other future states.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "layout",
          "type": "string | null | undefined",
          "description": "Layout string to use",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tag",
          "type": "string | null | undefined",
          "description": "Tag",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "elevation",
          "type": "number | null | undefined",
          "description": "Elevation off the UI",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        }
      ],
      "methods": [
        {
          "name": "tapEventOn",
          "description": "special handling for taps on the thing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "tapEventOff",
          "description": "Hover off stop showing the deeper shadow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireEvent",
          "description": "Fire an event that includes the eventName of what was just pressed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 8
        },
        "end": {
          "line": 194,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "title",
          "description": "Title",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "blox-reference",
          "description": "Index position in the original list of imports",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "icon",
          "description": "icon for the button, optional.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "author",
          "description": "Author related to this gizmo",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "teaser",
          "description": "Teaser / headline.",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "Description for this.",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "examples",
          "description": "Examples, optional.",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "status",
          "description": "Status, whether disabled, enabled, or other future states.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "layout",
          "description": "Layout string to use",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "tag",
          "description": "Tag",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "elevation",
          "description": "Elevation off the UI",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-blox-browser-item"
    },
    {
      "description": "`hax-blox-browser`\nList of layout blox to select from",
      "summary": "",
      "path": "lib/hax-blox-browser.js",
      "properties": [
        {
          "name": "bloxList",
          "type": "Array | null | undefined",
          "description": "The list of blox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_bloxListChanged\"",
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_bloxListChanged",
          "description": "Notice bloxList changing.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resetBrowser",
          "description": "Reset this browser.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 8
        },
        "end": {
          "line": 112,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "blox-list",
          "description": "The list of blox",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-blox-browser"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/hax-store.js",
      "properties": [
        {
          "name": "haxAppPicker",
          "type": "Object | null | undefined",
          "description": "Hax app picker element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haxStaxPicker",
          "type": "Object | null | undefined",
          "description": "Hax stax picker element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haxManager",
          "type": "Object | null | undefined",
          "description": "Hax manager element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haxAutoloader",
          "type": "Object | null | undefined",
          "description": "Hax autoloader element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haxBodies",
          "type": "Array | null | undefined",
          "description": "A list of all haxBodies that exist",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "activePlaceHolder",
          "type": "Object | null | undefined",
          "description": "An active place holder item reference. This is used\nfor inline drag and drop event detection so that we\nknow what element replace in context.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "activeHaxBody",
          "type": "Object | null | undefined",
          "description": "The hax-body that is currently active.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "appStore",
          "type": "Object | null | undefined",
          "description": "Possible appStore endpoint for loading in things dynamically.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_appStoreChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haxToast",
          "type": "Object | null | undefined",
          "description": "HAX Toast message.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haxPanel",
          "type": "Object | null | undefined",
          "description": "Hax panel element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haxExport",
          "type": "Object | null | undefined",
          "description": "Hax export dialog element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 99,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haxPreferences",
          "type": "Object | null | undefined",
          "description": "Hax preferences dialog element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "activeHaxElement",
          "type": "Object | null | undefined",
          "description": "Active HAX Element if we have one we are working on.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "activeNode",
          "type": "Object | null | undefined",
          "description": "Active Node.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "activeContainerNode",
          "type": "Object | null | undefined",
          "description": "Active container Node, 2nd highest parent of activeNode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "editMode",
          "type": "boolean | null | undefined",
          "description": "editMode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canSupportUploads",
          "type": "boolean | null | undefined",
          "description": "Boolean for if this instance has backends that support uploading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "skipExitTrap",
          "type": "boolean | null | undefined",
          "description": "skip the exit trap to prevent losing data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "defaults",
          "type": "Object | null | undefined",
          "description": "Default settings that can be overridden as needed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"image\":{\"src\":\"stock.jpg\",\"alt\":\"A beachfront deep in the heart of Alaska.\"},\"iframe\":{\"src\":\"https://www.wikipedia.org/\"}}"
        },
        {
          "name": "gizmoList",
          "type": "Array | null | undefined",
          "description": "Available gizmos.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "elementList",
          "type": "Object | null | undefined",
          "description": "Available elements keyed by tagName and with\ntheir haxProperties centrally registered.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "appList",
          "type": "Array | null | undefined",
          "description": "Available apps of things supplying media / content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "staxList",
          "type": "Array | null | undefined",
          "description": "Available hax stax which are just re-usable templates",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 188,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "bloxList",
          "type": "Array | null | undefined",
          "description": "Available hax blox which are grid plate / layout elements",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "globalPreferences",
          "type": "Object | null | undefined",
          "description": "Global preferences that HAX can write to and\nother elements can use to go off of.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 203,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "activeApp",
          "type": "Object | null | undefined",
          "description": "Globally active app, used for brokering communications",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "validTagList",
          "type": "Array | null | undefined",
          "description": "Valid tag list, tag only and including primatives for a baseline.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[\"p\",\"div\",\"ol\",\"ul\",\"li\",\"a\",\"strong\",\"kbd\",\"em\",\"i\",\"b\",\"hr\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"blockquote\",\"code\",\"figure\",\"img\",\"iframe\",\"video\",\"audio\",\"section\",\"grid-plate\",\"template\",\"webview\"]"
        },
        {
          "name": "validGizmoTypes",
          "type": "Array | null | undefined",
          "description": "Gizmo types which can be used to bridge apps to gizmos.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[\"data\",\"video\",\"audio\",\"text\",\"link\",\"file\",\"pdf\",\"image\",\"csv\",\"doc\",\"content\",\"text\",\"inline\",\"*\"]"
        },
        {
          "name": "_isSandboxed",
          "type": "boolean | null | undefined",
          "description": "Sandboxed environment test",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "__appStoreData",
          "type": "Object | null | undefined",
          "description": "Internal app store data property after request",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 4
            },
            "end": {
              "line": 294,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "isTextElement",
          "description": "If this is a text node or not so we know if the inline context\noperations are valid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 2
            },
            "end": {
              "line": 326,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "isGridPlateElement",
          "description": "test for being a valid grid plate, li is here because\nnested lists make this really complicated",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 2
            },
            "end": {
              "line": 357,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_appStoreChanged",
          "description": "Notice _appStore changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 2
            },
            "end": {
              "line": 373,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_loadAppStoreData",
          "description": "Load and attach items from the app store.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "appDataResponse"
            },
            {
              "name": "haxAutoloader"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 425,
              "column": 2
            },
            "end": {
              "line": 508,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "attached.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 513,
              "column": 2
            },
            "end": {
              "line": 592,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__splitNode",
          "description": "Magic node splitting function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 2
            },
            "end": {
              "line": 630,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "limit"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__getNodeIndex",
          "description": "Get node index within a parent item so we know\nhow far down the object to look for it's position.\nThis is a helper with no other meaningful purpose.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 637,
              "column": 2
            },
            "end": {
              "line": 645,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parent"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "created",
          "description": "Created life-cycle to ensure a single global store.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 650,
              "column": 2
            },
            "end": {
              "line": 739,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildPrimitiveDefinitions",
          "description": "Build HAX property definitions for primitives that we support.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 744,
              "column": 2
            },
            "end": {
              "line": 1034,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_injectToast",
          "description": "Inject a toast element to manage our messages",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1039,
              "column": 2
            },
            "end": {
              "line": 1047,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterManager",
          "description": "Set the haxManager node so we can interface with it.\nThis also allows for using a different manager that supplies\nthe same functions if that would be desired at some point.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1054,
              "column": 2
            },
            "end": {
              "line": 1058,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterAutoloader",
          "description": "Register autoloader so we can ship to it from app-store spec",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1063,
              "column": 2
            },
            "end": {
              "line": 1067,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterAppPicker",
          "description": "Set the appPicker node so we can interface with it.\nThis helps with picking between multiple options when we need the user\nto decide between a sub-set of options",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1074,
              "column": 2
            },
            "end": {
              "line": 1078,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterStaxPicker",
          "description": "Set the stax picker so that we have an element in charge\nof the listing of available stax.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1084,
              "column": 2
            },
            "end": {
              "line": 1088,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterBloxPicker",
          "description": "Set the blox picker so that we have an element in charge\nof the listing of available blox.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1094,
              "column": 2
            },
            "end": {
              "line": 1098,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "closeAllDrawers",
          "description": "Close all drawers",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1103,
              "column": 2
            },
            "end": {
              "line": 1147,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active",
              "defaultValue": "false"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreInsertContent",
          "description": "Insert content in the body.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1152,
              "column": 2
            },
            "end": {
              "line": 1206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterBody",
          "description": "Set the activeHaxBody and add to the list so we know what to insert into.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1211,
              "column": 2
            },
            "end": {
              "line": 1220,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterPanel",
          "description": "Set the haxPanel so we know what to insert into.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1225,
              "column": 2
            },
            "end": {
              "line": 1229,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterExport",
          "description": "Set the haxExport so we know who to call for exporting",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1234,
              "column": 2
            },
            "end": {
              "line": 1238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterPreferences",
          "description": "Set the haxPreferences so we know what has global preferences",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1243,
              "column": 2
            },
            "end": {
              "line": 1247,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "computePolyfillSafe",
          "description": "Feature detect on the bar.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1252,
              "column": 2
            },
            "end": {
              "line": 1266,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_writeHaxStore",
          "description": "Write store event callback.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1271,
              "column": 2
            },
            "end": {
              "line": 1286,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterApp",
          "description": "Notice that an app was set in HAX; register it",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1291,
              "column": 2
            },
            "end": {
              "line": 1304,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterStax",
          "description": "Notice that a stax was set in HAX; register it",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1309,
              "column": 2
            },
            "end": {
              "line": 1322,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterBlox",
          "description": "Notice that a blox was set in HAX; register it",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1327,
              "column": 2
            },
            "end": {
              "line": 1340,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStoreRegisterProperties",
          "description": "Notice that a property off an element was set in HAX some place; register it here",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1345,
              "column": 2
            },
            "end": {
              "line": 1376,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 27
        },
        "end": {
          "line": 1377,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "Polymer.HaxStore",
      "attributes": [
        {
          "name": "hax-app-picker",
          "description": "Hax app picker element.",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-stax-picker",
          "description": "Hax stax picker element.",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-manager",
          "description": "Hax manager element.",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-autoloader",
          "description": "Hax autoloader element.",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-bodies",
          "description": "A list of all haxBodies that exist",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "active-place-holder",
          "description": "An active place holder item reference. This is used\nfor inline drag and drop event detection so that we\nknow what element replace in context.",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "active-hax-body",
          "description": "The hax-body that is currently active.",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "app-store",
          "description": "Possible appStore endpoint for loading in things dynamically.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-toast",
          "description": "HAX Toast message.",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-panel",
          "description": "Hax panel element.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-export",
          "description": "Hax export dialog element.",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 99,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-preferences",
          "description": "Hax preferences dialog element.",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "active-hax-element",
          "description": "Active HAX Element if we have one we are working on.",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "active-node",
          "description": "Active Node.",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "active-container-node",
          "description": "Active container Node, 2nd highest parent of activeNode.",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "edit-mode",
          "description": "editMode",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "can-support-uploads",
          "description": "Boolean for if this instance has backends that support uploading",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "skip-exit-trap",
          "description": "skip the exit trap to prevent losing data",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "defaults",
          "description": "Default settings that can be overridden as needed",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "gizmo-list",
          "description": "Available gizmos.",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "element-list",
          "description": "Available elements keyed by tagName and with\ntheir haxProperties centrally registered.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "app-list",
          "description": "Available apps of things supplying media / content.",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "stax-list",
          "description": "Available hax stax which are just re-usable templates",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 188,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "blox-list",
          "description": "Available hax blox which are grid plate / layout elements",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "global-preferences",
          "description": "Global preferences that HAX can write to and\nother elements can use to go off of.",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 203,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "active-app",
          "description": "Globally active app, used for brokering communications",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "valid-tag-list",
          "description": "Valid tag list, tag only and including primatives for a baseline.",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "valid-gizmo-types",
          "description": "Gizmo types which can be used to bridge apps to gizmos.",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-store"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/hax-toolbar-menu.js",
      "properties": [
        {
          "name": "resetOnSelect",
          "type": "boolean | null | undefined",
          "description": "Should we reset the selection after it is made",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "tooltip",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "tooltipDirection",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "selected",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "_selectChanged",
          "description": "Select changed to trip button.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_menubuttonTap",
          "description": "Ensure menu is visible / default'ed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "hideMenu",
          "description": "Ensure menu is hidden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 8
        },
        "end": {
          "line": 133,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "reset-on-select",
          "description": "Should we reset the selection after it is made",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "tooltip",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "tooltip-direction",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "selected",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-toolbar-menu"
    },
    {
      "description": "`hax-context-item-menu`\nAn icon / button that has support for multiple options via drop down.",
      "summary": "",
      "path": "lib/hax-context-item-menu.js",
      "properties": [
        {
          "name": "_blockEvent",
          "type": "boolean | null | undefined",
          "description": "Internal flag to allow blocking the event firing if machine selects tag.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "resetOnSelect",
          "type": "boolean | null | undefined",
          "description": "Should we reset the selection after it is made",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "selectedValue",
          "type": "number | null | undefined",
          "description": "Value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedUpdated\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "direction",
          "type": "string | null | undefined",
          "description": "Direction for the tooltip",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:text-fields\""
        },
        {
          "name": "iconClass",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"black-text\""
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:text-fields\""
        },
        {
          "name": "eventName",
          "type": "string | null | undefined",
          "description": "Name of the event to bubble up as being tapped.\nThis can be used to tell other elements what was\nclicked so it can take action appropriately.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"button\""
        }
      ],
      "methods": [
        {
          "name": "_selectedUpdated",
          "description": "Notice the selected value has changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 151,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "reset-on-select",
          "description": "Should we reset the selection after it is made",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-value",
          "description": "Value.",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "direction",
          "description": "Direction for the tooltip",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-class",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Label for the button.",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "event-name",
          "description": "Name of the event to bubble up as being tapped.\nThis can be used to tell other elements what was\nclicked so it can take action appropriately.",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-value-changed",
          "description": "Fired when the `selectedValue` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-context-item-menu"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/hax-toolbar-item.js",
      "properties": [
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disabled state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "light",
          "type": "boolean | null | undefined",
          "description": "Inverted display mode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "menu",
          "type": "boolean | null | undefined",
          "description": "Style to be presented in a menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "mini",
          "type": "boolean | null | undefined",
          "description": "Present smaller the normal but consistent",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Icon to represent this button, required.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Text applied to the button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "tooltip",
          "type": "string | null | undefined",
          "description": "Hover tip text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "tooltipDirection",
          "type": "string | null | undefined",
          "description": "Direction that the tooltip should flow",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "default",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "iconClass",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 8
        },
        "end": {
          "line": 185,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "disabled",
          "description": "disabled state",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "light",
          "description": "Inverted display mode",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "menu",
          "description": "Style to be presented in a menu",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "mini",
          "description": "Present smaller the normal but consistent",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "icon",
          "description": "Icon to represent this button, required.",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Text applied to the button",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "tooltip",
          "description": "Hover tip text",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "tooltip-direction",
          "description": "Direction that the tooltip should flow",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "default",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "icon-class",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-toolbar-item"
    },
    {
      "description": "`hax-context-item`\nA single button in the hax context menu for consistency.",
      "summary": "",
      "path": "lib/hax-context-item.js",
      "properties": [
        {
          "name": "light",
          "type": "boolean | null | undefined",
          "description": "Light theme for toolbar item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 50,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disabled state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "mini",
          "type": "boolean | null | undefined",
          "description": "Mini theme for making things small and round.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "menu",
          "type": "boolean | null | undefined",
          "description": "Style to be presented in a menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "direction",
          "type": "string | null | undefined",
          "description": "Direction for the tooltip",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:text-fields\""
        },
        {
          "name": "iconClass",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:text-fields\""
        },
        {
          "name": "eventName",
          "type": "string | null | undefined",
          "description": "Name of the event to bubble up as being tapped.\nThis can be used to tell other elements what was\nclicked so it can take action appropriately.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"button\""
        },
        {
          "name": "inputMethod",
          "type": "string | null | undefined",
          "description": "Method of input to display when activated. This is\nonly used when triggered as part of haxProperties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "propertyToBind",
          "type": "string | null | undefined",
          "description": "Optional slot to bind this value to.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "slotToBind",
          "type": "string | null | undefined",
          "description": "Optional slot to bind this value to.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "Optional description for this item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "default",
          "type": "boolean | null | undefined",
          "description": "Is this button concidered a primary interaction",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "an optional value to send along in the press. Allows for\nreusing events more easily",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "_fireEvent",
          "description": "Fire an event that includes the eventName of what was just pressed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 172,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 8
        },
        "end": {
          "line": 173,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "light",
          "description": "Light theme for toolbar item.",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 50,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "disabled state",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "mini",
          "description": "Mini theme for making things small and round.",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "menu",
          "description": "Style to be presented in a menu",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "direction",
          "description": "Direction for the tooltip",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-class",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Label for the button.",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "event-name",
          "description": "Name of the event to bubble up as being tapped.\nThis can be used to tell other elements what was\nclicked so it can take action appropriately.",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "input-method",
          "description": "Method of input to display when activated. This is\nonly used when triggered as part of haxProperties",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "property-to-bind",
          "description": "Optional slot to bind this value to.",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "slot-to-bind",
          "description": "Optional slot to bind this value to.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "Optional description for this item.",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "default",
          "description": "Is this button concidered a primary interaction",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "an optional value to send along in the press. Allows for\nreusing events more easily",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-context-item"
    },
    {
      "description": "`hax-context-item-textop`\nA single button in the hax context menus for consistency. This one uses the mousedown event becasue tap won't work in safari / firefox / IE while maintaining focus inside the contenteditable area (stupid, I know)",
      "summary": "",
      "path": "lib/hax-context-item-textop.js",
      "properties": [
        {
          "name": "target",
          "type": "Object | null | undefined",
          "description": "target for the iron-a11y-keys element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "light",
          "type": "boolean | null | undefined",
          "description": "Light theme for toolbar item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "mini",
          "type": "boolean | null | undefined",
          "description": "Mini theme for making things small and round.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "menu",
          "type": "boolean | null | undefined",
          "description": "Style to be presented in a menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "direction",
          "type": "string | null | undefined",
          "description": "Direction for the tooltip",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:text-fields\""
        },
        {
          "name": "iconClass",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:text-fields\""
        },
        {
          "name": "eventName",
          "type": "string | null | undefined",
          "description": "Name of the event to bubble up as being tapped.\nThis can be used to tell other elements what was\nclicked so it can take action appropriately.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"button\""
        },
        {
          "name": "inputMethod",
          "type": "string | null | undefined",
          "description": "Method of input to display when activated. This is\nonly used when triggered as part of haxProperties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "propertyToBind",
          "type": "string | null | undefined",
          "description": "Optional slot to bind this value to.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "slotToBind",
          "type": "string | null | undefined",
          "description": "Optional slot to bind this value to.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 140,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "Optional description for this item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 156,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireEvent",
          "description": "Fire an event that includes the eventName of what was just pressed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 27,
          "column": 8
        },
        "end": {
          "line": 167,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "target",
          "description": "target for the iron-a11y-keys element.",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "light",
          "description": "Light theme for toolbar item.",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "mini",
          "description": "Mini theme for making things small and round.",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "menu",
          "description": "Style to be presented in a menu",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "direction",
          "description": "Direction for the tooltip",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-class",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Label for the button.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "event-name",
          "description": "Name of the event to bubble up as being tapped.\nThis can be used to tell other elements what was\nclicked so it can take action appropriately.",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "input-method",
          "description": "Method of input to display when activated. This is\nonly used when triggered as part of haxProperties",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "property-to-bind",
          "description": "Optional slot to bind this value to.",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "slot-to-bind",
          "description": "Optional slot to bind this value to.",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 140,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "Optional description for this item.",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-context-item-textop"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/hax-toolbar.js",
      "properties": [
        {
          "name": "haxProperties",
          "type": "Object | null | undefined",
          "description": "Selected value to match ce direction currently.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_haxPropertiesChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "hideMore",
          "type": "boolean | null | undefined",
          "description": "Hide the more menu.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "size",
          "type": "number | null | undefined",
          "description": "size of the slider if it exists.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "100"
        },
        {
          "name": "justifyIcon",
          "type": "string | null | undefined",
          "description": "Justify icon to reflect state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:format-align-left\""
        },
        {
          "name": "inline",
          "type": "boolean | null | undefined",
          "description": "This is an inline context menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "justifyValue",
          "type": "string | null | undefined",
          "description": "Selected value to match ce direction currently.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "_haxPropertiesChanged",
          "description": "If hax properties changes, let's see what the initial state\nof the buttons should be.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxContextOperation",
          "description": "Respond to simple modifications.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 8
        },
        "end": {
          "line": 209,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "hax-properties",
          "description": "Selected value to match ce direction currently.",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hide-more",
          "description": "Hide the more menu.",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "size",
          "description": "size of the slider if it exists.",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "justify-icon",
          "description": "Justify icon to reflect state.",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "inline",
          "description": "This is an inline context menu",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "justify-value",
          "description": "Selected value to match ce direction currently.",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "size-changed",
          "description": "Fired when the `size` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "justify-value-changed",
          "description": "Fired when the `justifyValue` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-toolbar"
    },
    {
      "description": "`hax-text-context`\nA context menu that provides common text based authoring options.",
      "summary": "",
      "path": "lib/hax-text-context.js",
      "properties": [
        {
          "name": "justifyIcon",
          "type": "string | null | undefined",
          "description": "Justify icon to reflect state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:format-align-left\""
        },
        {
          "name": "polyfillSafe",
          "type": "boolean | null | undefined",
          "description": "Polyfill safe; this helps remove options from polyfilled platforms\nas far as text manipulation operations.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "selectedValue",
          "type": "string | null | undefined",
          "description": "Selected value to match format of the tag currently.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"p\""
        },
        {
          "name": "justifyValue",
          "type": "string | null | undefined",
          "description": "Selected value to match text direction currently.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"text-align-left\""
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready, figure out polyfill",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 102,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxContextOperation",
          "description": "Respond to simple modifications.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 8
        },
        "end": {
          "line": 146,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "justify-icon",
          "description": "Justify icon to reflect state.",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "polyfill-safe",
          "description": "Polyfill safe; this helps remove options from polyfilled platforms\nas far as text manipulation operations.",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-value",
          "description": "Selected value to match format of the tag currently.",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "justify-value",
          "description": "Selected value to match text direction currently.",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-value-changed",
          "description": "Fired when the `selectedValue` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "justify-value-changed",
          "description": "Fired when the `justifyValue` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-text-context"
    },
    {
      "description": "`hax-inline-context`\nA context menu that provides common text based authoring options.",
      "summary": "",
      "path": "lib/hax-inline-context.js",
      "properties": [
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "Track visibility status.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_openedChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "Attached life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 137,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openedChanged",
          "description": "Notice open or close state",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxContextOperation",
          "description": "Respond to simple modifications.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "isSafari",
          "description": "Test for safari, if it is don't place things in the menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 2
            },
            "end": {
              "line": 273,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "typevalue"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 8
        },
        "end": {
          "line": 274,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "opened",
          "description": "Track visibility status.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-inline-context"
    },
    {
      "description": "`hax-ce-context`\nA context menu that provides common custom-element based authoring options. While\ntrying to call for haxProperties which can automatically generate the buttons\nrequired for populating input.",
      "summary": "",
      "path": "lib/hax-ce-context.js",
      "properties": [
        {
          "name": "ceSize",
          "type": "number | null | undefined",
          "description": "ce size.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_ceSizeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "100"
        },
        {
          "name": "haxProperties",
          "type": "Object | null | undefined",
          "description": "Selected value to match ce direction currently.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_haxPropertiesChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "humanName",
          "type": "string | null | undefined",
          "description": "Active Name from the properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "setHaxProperties",
          "description": "Set haxProperties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_ceSizeChanged",
          "description": "ce size changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxPropertiesChanged",
          "description": "HAX properties changed, update buttons available.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 187,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 8
        },
        "end": {
          "line": 188,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "ce-size",
          "description": "ce size.",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "hax-properties",
          "description": "Selected value to match ce direction currently.",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "human-name",
          "description": "Active Name from the properties",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-ce-context"
    },
    {
      "description": "`hax-plate-context`\nA context menu that provides common grid plate based authoring options.",
      "summary": "",
      "path": "lib/hax-plate-context.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 8
        },
        "end": {
          "line": 49,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-plate-context"
    },
    {
      "description": "`hax-input-mixer`\nA context menu that provides common custom-element based authoring options. While\ntrying to call for haxProperties which can automatically generate the buttons\nrequired for populating input.",
      "summary": "",
      "path": "lib/hax-input-mixer.js",
      "properties": [
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "value, where the magic happens.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label for the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "validation",
          "type": "string | null | undefined",
          "description": "Optional regex Validation for input and textarea fields",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "validationType",
          "type": "string | null | undefined",
          "description": "Optional input type validation; use on input field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Required; used on input and textarea fields",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "options",
          "type": "Object | null | undefined",
          "description": "Options for the input if it's a select of some form",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 154,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Optional icon that represents the item mixing.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"android\""
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "longer description for the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "inputMethod",
          "type": "string | null | undefined",
          "description": "longer description for the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_inputMethodChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "propertyToBind",
          "type": "string | null | undefined",
          "description": "longer description for the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "slotToBind",
          "type": "string | null | undefined",
          "description": "slot to bind input back to",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ensure our weird data binding for templates is set initially.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 201,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_inputMethodChanged",
          "description": "Input method changes, allow our templates to rebind correctly.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 2
            },
            "end": {
              "line": 241,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validInputMethods",
          "description": "Validate input method.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resetInputMethods",
          "description": "Reset all our meta attributes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 2
            },
            "end": {
              "line": 269,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxContextOperation",
          "description": "Respond to simple modifications.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 2
            },
            "end": {
              "line": 309,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 8
        },
        "end": {
          "line": 310,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "value",
          "description": "value, where the magic happens.",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Label for the input",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "validation",
          "description": "Optional regex Validation for input and textarea fields",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "validation-type",
          "description": "Optional input type validation; use on input field",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Required; used on input and textarea fields",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "options",
          "description": "Options for the input if it's a select of some form",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 154,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "icon",
          "description": "Optional icon that represents the item mixing.",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "longer description for the input",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "input-method",
          "description": "longer description for the input",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "property-to-bind",
          "description": "longer description for the input",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "slot-to-bind",
          "description": "slot to bind input back to",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-input-mixer"
    },
    {
      "description": "`hax-body`\nA LRN element that will change the world.",
      "summary": "",
      "path": "hax-body.js",
      "properties": [
        {
          "name": "editMode",
          "type": "boolean | null | undefined",
          "description": "State of if we are editing or not.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_editModeChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "globalPreferences",
          "type": "Object | null | undefined",
          "description": "Access to the global properties object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_globalPreferencesUpdated\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "haxRayMode",
          "type": "boolean | null | undefined",
          "description": "Bust out the HAX Ray mode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "activeNode",
          "type": "Object | null | undefined",
          "description": "A reference to the active node in the slot.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_activeNodeChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "activeContainerNode",
          "type": "Object | null | undefined",
          "description": "A reference to the active node in the slot.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_activeContainerNodeChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready state to tee everything up.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 284,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM; now we can fire event to the store that\nwe exist and are the thing being edited.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 296,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 2
            },
            "end": {
              "line": 305,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "replacePlaceholder",
          "description": "Replace place holder after an event has called for it in the element itself",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 2
            },
            "end": {
              "line": 329,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "replaceElementWorkflow",
          "description": "Whole workflow of replacing something in place contextually.\nThis can fire for things like events needing this workflow to\ninvoke whether it's a \"convert\" event or a \"replace placeholder\" event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 2
            },
            "end": {
              "line": 407,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_globalPreferencesUpdated",
          "description": "Global prefs updated, let's visualize stuff from hax-ray",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 2
            },
            "end": {
              "line": 415,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 2
            },
            "end": {
              "line": 430,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "haxClearBody",
          "description": "Clear area.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 2
            },
            "end": {
              "line": 444,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "confirm",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "haxInsert",
          "description": "Insert new tag + content into the local DOM as a node.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 448,
              "column": 2
            },
            "end": {
              "line": 547,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "tag"
            },
            {
              "name": "content"
            },
            {
              "name": "properties",
              "defaultValue": "{}"
            }
          ]
        },
        {
          "name": "haxToContent",
          "description": "Return the current hax content area as text that could be\ninserted into something.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 2
            },
            "end": {
              "line": 647,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "haxDuplicateNode",
          "description": "Duplicate node into the local DOM below the current item if we can.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 651,
              "column": 2
            },
            "end": {
              "line": 679,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "parent",
              "defaultValue": "this"
            }
          ]
        },
        {
          "name": "hideContextMenus",
          "description": "Hide all context menus.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 683,
              "column": 2
            },
            "end": {
              "line": 695,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "positionContextMenus",
          "description": "Reposition context menus to match an element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 699,
              "column": 2
            },
            "end": {
              "line": 755,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "container"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "haxMoveGridPlate",
          "description": "Move grid plate around",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 759,
              "column": 2
            },
            "end": {
              "line": 806,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "direction"
            },
            {
              "name": "node"
            },
            {
              "name": "container"
            }
          ]
        },
        {
          "name": "haxReplaceNode",
          "description": "Convert an element from one tag to another.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 810,
              "column": 2
            },
            "end": {
              "line": 824,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "replacement"
            },
            {
              "name": "parent",
              "defaultValue": "this"
            }
          ]
        },
        {
          "name": "haxChangeTagName",
          "description": "Convert an element from one tag to another.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 828,
              "column": 2
            },
            "end": {
              "line": 844,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "tagName"
            },
            {
              "name": "newNode"
            }
          ]
        },
        {
          "name": "haxDeleteNode",
          "description": "Delete the node passed in",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 848,
              "column": 2
            },
            "end": {
              "line": 890,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "parent",
              "defaultValue": "this"
            }
          ]
        },
        {
          "name": "importContent",
          "description": "Bulk import HTML with option to clear what is currently\nin the slot of this tag. This also validates tags\nthat are being inserted for security based on the\ninternal whitelist.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 897,
              "column": 2
            },
            "end": {
              "line": 942,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "html"
            },
            {
              "name": "clear",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxContextOperation",
          "description": "Respond to hax operations.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 946,
              "column": 2
            },
            "end": {
              "line": 1158,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxInputMixerOperation",
          "description": "Respond to an input mixer call.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1162,
              "column": 2
            },
            "end": {
              "line": 1182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_focusIn",
          "description": "Item has gained focus, change active element to match",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1186,
              "column": 2
            },
            "end": {
              "line": 1262,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editModeChanged",
          "description": "Notice the change between states for editing.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1266,
              "column": 2
            },
            "end": {
              "line": 1282,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxResolvePreviousElement",
          "description": "Test if this is a HAX element or not",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1286,
              "column": 2
            },
            "end": {
              "line": 1295,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_haxElementTest",
          "description": "Test if this is a HAX element or not",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1299,
              "column": 2
            },
            "end": {
              "line": 1307,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_HTMLPrimativeTest",
          "description": "Test if this is an HTML primative",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1311,
              "column": 2
            },
            "end": {
              "line": 1319,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_applyContentEditable",
          "description": "Walk everything we find and either enable or disable editable state.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1323,
              "column": 2
            },
            "end": {
              "line": 1345,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "status"
            },
            {
              "name": "target",
              "defaultValue": "this.$.body"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activeContainerNodeChanged",
          "description": "Container has changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1349,
              "column": 2
            },
            "end": {
              "line": 1363,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activeNodeChanged",
          "description": "React to a new node being set to active.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1367,
              "column": 2
            },
            "end": {
              "line": 1414,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_positionContextMenu",
          "description": "Handle display and position of the context menu",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1418,
              "column": 2
            },
            "end": {
              "line": 1444,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "menu"
            },
            {
              "name": "target"
            },
            {
              "name": "xoffset"
            },
            {
              "name": "yoffset"
            },
            {
              "name": "matchStyle",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hideContextMenu",
          "description": "Simple hide / reset of whatever menu it's handed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1448,
              "column": 2
            },
            "end": {
              "line": 1451,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "menu"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_escKeyPressed",
          "description": "When the user hits escape key, let's deselect what we have now",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1455,
              "column": 2
            },
            "end": {
              "line": 1474,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_delKeyPressed",
          "description": "When the user hits delete, test if there's any content\nleft in this container. If thre isn't then delete the\ncontainer itself",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1480,
              "column": 2
            },
            "end": {
              "line": 1521,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_upKeyPressed",
          "description": "Move between things pressing up and down if empty",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1525,
              "column": 2
            },
            "end": {
              "line": 1538,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_downKeyPressed",
          "description": "Move between things pressing up and down if empty",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1542,
              "column": 2
            },
            "end": {
              "line": 1555,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tabKeyPressed",
          "description": "Find the next thing to tab forward to.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1559,
              "column": 2
            },
            "end": {
              "line": 1598,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tabBackKeyPressed",
          "description": "Move back through things when tab back pressed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1602,
              "column": 2
            },
            "end": {
              "line": 1637,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 194,
          "column": 8
        },
        "end": {
          "line": 1638,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "edit-mode",
          "description": "State of if we are editing or not.",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "global-preferences",
          "description": "Access to the global properties object.",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "hax-ray-mode",
          "description": "Bust out the HAX Ray mode",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "active-node",
          "description": "A reference to the active node in the slot.",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "active-container-node",
          "description": "A reference to the active node in the slot.",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-node-changed",
          "description": "Fired when the `activeNode` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "active-container-node-changed",
          "description": "Fired when the `activeContainerNode` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-body"
    },
    {
      "description": "`hax-autoloader`\nAutomatically load elements based on the most logical location with future fallback support for CDNs.",
      "summary": "",
      "path": "lib/hax-autoloader.js",
      "properties": [
        {
          "name": "processedList",
          "type": "Object | null | undefined",
          "description": "List of elements processed so we don't double process",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire that we exist.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "Ready.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "processNewElements",
          "description": "Process new elements",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 8
        },
        "end": {
          "line": 87,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "processed-list",
          "description": "List of elements processed so we don't double process",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-autoloader"
    },
    {
      "description": "`hax-preview`\nAn element that can generate a form",
      "summary": "",
      "path": "lib/hax-preview.js",
      "properties": [
        {
          "name": "previewNode",
          "type": "Object | null | undefined",
          "description": "A reference to the previewNode so we can do data binding correctly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_previewNodeChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "Returned value from the form input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "modeTab",
          "type": "string | null | undefined",
          "description": "State of mode tabs.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_editorModeChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"configure\""
        },
        {
          "name": "editTitle",
          "type": "string | null | undefined",
          "description": "Edit title since it can change based on the operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Update\""
        },
        {
          "name": "element",
          "type": "Object | null | undefined",
          "description": "The element to work against expressing the structure of the DOM element\nto create in the preview area.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_elementChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "haspreviewNode",
          "type": "boolean | null | undefined",
          "description": "Boolean association for a preview node existing.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "JSON Schema.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"schema\":{}}"
        },
        {
          "name": "advancedForm",
          "type": "boolean | null | undefined",
          "description": "If this is the advancedForm or not. Default to not but slider allows\nswitching mode for the form to be presented.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canEditSource",
          "type": "boolean | null | undefined",
          "description": "If we should show source view or not.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "formKey",
          "type": "string | null | undefined",
          "description": "Form key from hax to target.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_formKeyChanged\"",
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "humanName",
          "type": "string | null | undefined",
          "description": "Active Name from the properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 295,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "cancel",
          "description": "Trigger cancel on manager as it is the parent here.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 2
            },
            "end": {
              "line": 303,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "insert",
          "description": "Trigger insert on manager as it is the parent here.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 2
            },
            "end": {
              "line": 310,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computedHasPreviewNode",
          "description": "Make a boolean to match the preview node's existance.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "previewNode"
            }
          ]
        },
        {
          "name": "_computedEditSource",
          "description": "Edit source.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 2
            },
            "end": {
              "line": 340,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ]
        },
        {
          "name": "_computedFormKey",
          "description": "Compute form key to use.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 2
            },
            "end": {
              "line": 351,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "advanced"
            }
          ]
        },
        {
          "name": "_formKeyChanged",
          "description": "Form key changed, rebuild schema for the form\nbut don't update the element. Critical difference.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 450,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_previewNodeChanged",
          "description": "When the preview node is updated, pull schema associated with it",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 2
            },
            "end": {
              "line": 573,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_elementChanged",
          "description": "Element changed, update the preview area.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 578,
              "column": 2
            },
            "end": {
              "line": 605,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "Value in the form has changed, reflect to the preview.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 610,
              "column": 2
            },
            "end": {
              "line": 766,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editorModeChanged",
          "description": "Editor mode changed handler",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 771,
              "column": 2
            },
            "end": {
              "line": 780,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "mode"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 8
        },
        "end": {
          "line": 781,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "preview-node",
          "description": "A reference to the previewNode so we can do data binding correctly.",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "Returned value from the form input.",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "mode-tab",
          "description": "State of mode tabs.",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "edit-title",
          "description": "Edit title since it can change based on the operation",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "element",
          "description": "The element to work against expressing the structure of the DOM element\nto create in the preview area.",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "haspreview-node",
          "description": "Boolean association for a preview node existing.",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "schema",
          "description": "JSON Schema.",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "advanced-form",
          "description": "If this is the advancedForm or not. Default to not but slider allows\nswitching mode for the form to be presented.",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "can-edit-source",
          "description": "If we should show source view or not.",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "form-key",
          "description": "Form key from hax to target.",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "human-name",
          "description": "Active Name from the properties",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 295,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-preview"
    },
    {
      "description": "`hax-app-browser-item`\nA button on the hax-app-browser display",
      "summary": "",
      "path": "lib/hax-app-browser-item.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "index",
          "type": "number | null | undefined",
          "description": "Index position in the original list of imports",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Icon for the button, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "image",
          "type": "string | null | undefined",
          "description": "Image for the button, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "color",
          "type": "string | null | undefined",
          "description": "MaterializeCSS color name of the item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "author",
          "type": "string | null | undefined",
          "description": "Author related to this app",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "teaser",
          "type": "string | null | undefined",
          "description": "Teaser / headline.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "Description for this.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "examples",
          "type": "Array | null | undefined",
          "description": "Examples, a list of image links, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "status",
          "type": "Array | null | undefined",
          "description": "Status, whether disabled, enabled, or other future states.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "elevation",
          "type": "number | null | undefined",
          "description": "Elevation off the UI",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        }
      ],
      "methods": [
        {
          "name": "tapEventOn",
          "description": "special handling for taps on the thing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 172,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "tapEventOff",
          "description": "Hover off stop showing the deeper shadow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 2
            },
            "end": {
              "line": 179,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireEvent",
          "description": "Fire an event that includes the eventName of what was just pressed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 186,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 8
        },
        "end": {
          "line": 187,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "title",
          "description": "Title",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "index",
          "description": "Index position in the original list of imports",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "icon",
          "description": "Icon for the button, optional.",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "image",
          "description": "Image for the button, optional.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "color",
          "description": "MaterializeCSS color name of the item",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "author",
          "description": "Author related to this app",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "teaser",
          "description": "Teaser / headline.",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "Description for this.",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "examples",
          "description": "Examples, a list of image links, optional.",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "status",
          "description": "Status, whether disabled, enabled, or other future states.",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "elevation",
          "description": "Elevation off the UI",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-app-browser-item"
    },
    {
      "description": "`hax-app-search-inputs`\n An element that brokers the visual display of a listing of material from an end point. The goal is to normalize data from some location which is media centric. This expects to get at least enough data in order to form a grid of items which are selectable. It's also generically implemented so that anything can be hooked up as a potential source for input (example: youtube API or custom in-house solution). The goal is to return enough info via fired event so that hax-manager can tell hax-body that the user selected a tag, properties, slot combination so that hax-body can turn the selection into a custom element / element injected into the hax-body slot.",
      "summary": "",
      "path": "lib/hax-app-search-inputs.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Title.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"app\""
        },
        {
          "name": "values",
          "type": "Object | null | undefined",
          "description": "Search input values mapped to schema inputs.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "Schema used to generate the input types.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_valueChanged",
          "description": "Search input was added.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 2
            },
            "end": {
              "line": 94,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 95,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "label",
          "description": "Title.",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "values",
          "description": "Search input values mapped to schema inputs.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "schema",
          "description": "Schema used to generate the input types.",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-app-search-inputs"
    },
    {
      "description": "`hax-source`\n An element that brokers the visual display of a listing of material from an end point. The goal is to normalize data from some location which is media centric. This expects to get at least enough data in order to form a grid of items which are selectable. It's also generically implemented so that anything can be hooked up as a potential source for input (example: youtube API or custom in-house solution). The goal is to return enough info via fired event so that hax-manager can tell hax-body that the user selected a tag, properties, slot combination so that hax-body can turn the selection into a custom element / element injected into the hax-body slot.",
      "summary": "",
      "path": "lib/hax-app-search-result.js",
      "properties": [
        {
          "name": "resultData",
          "type": "Object | null | undefined",
          "description": "Preview object from hax-app originally.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_itemSelected",
          "description": "Handle media item selected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 8
        },
        "end": {
          "line": 146,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "result-data",
          "description": "Preview object from hax-app originally.",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-app-search-result"
    },
    {
      "description": "`hax-app-search`\n An element that brokers the visual display of a listing of material from an end point. The goal is to normalize data from some location which is media centric. This expects to get at least enough data in order to form a grid of items which are selectable. It's also generically implemented so that anything can be hooked up as a potential source for input (example: youtube API or custom in-house solution). The goal is to return enough info via fired event so that hax-manager can tell hax-body that the user selected a tag, properties, slot combination so that hax-body can turn the selection into a custom element / element injected into the hax-body slot.",
      "summary": "",
      "path": "lib/hax-app-search.js",
      "properties": [
        {
          "name": "activeApp",
          "type": "Object | null | undefined",
          "description": "Active app globally bound based on previous selection.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_resetAppSearch\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "auto",
          "type": "boolean | null | undefined",
          "description": "Immediatley perform a request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "searchSchema",
          "type": "Object | null | undefined",
          "description": "Search schema for presenting a form of input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "searchValues",
          "type": "Object | null | undefined",
          "description": "Search values for data binding between search input\nand actually rebuilding the search request query",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "headers",
          "type": "Object | null | undefined",
          "description": "Custom headers for data binding from the App feed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "Custom method for requesting data (almost always will be GET)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"GET\""
        },
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "loading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "requestData",
          "type": "Object | null | undefined",
          "description": "Media request data updated",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_requestDataChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "media",
          "type": "Array | null | undefined",
          "description": "Media object, normalized.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 193,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_mediaChanged\"",
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "_searchValuesEvent",
          "description": "Search input was added.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetAppSearch",
          "description": "Active app has changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 278,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 2
            },
            "end": {
              "line": 306,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 2
            },
            "end": {
              "line": 319,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestDataChanged",
          "description": "Callback for when media has been updated via the end point",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 2
            },
            "end": {
              "line": 433,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_mediaChanged",
          "description": "Callback for when media has been processed for display",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 438,
              "column": 2
            },
            "end": {
              "line": 444,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resolveObjectPath",
          "description": "Helper to take a multi-dimensional object and convert\nit's reference into the real value. This allows for variable input defined\nin a string to actually hit the deeper part of an object structure.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 2
            },
            "end": {
              "line": 455,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "obj"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 8
        },
        "end": {
          "line": 456,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "active-app",
          "description": "Active app globally bound based on previous selection.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "auto",
          "description": "Immediatley perform a request.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "search-schema",
          "description": "Search schema for presenting a form of input.",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "search-values",
          "description": "Search values for data binding between search input\nand actually rebuilding the search request query",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "headers",
          "description": "Custom headers for data binding from the App feed.",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "method",
          "description": "Custom method for requesting data (almost always will be GET)",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "loading",
          "description": "loading",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "request-data",
          "description": "Media request data updated",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "media",
          "description": "Media object, normalized.",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 193,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-app-search"
    },
    {
      "description": "`hax-app-browser`\nBrowse a list of apps. This provides a listing of our gizmos that we've integrated with.",
      "summary": "",
      "path": "lib/hax-app-browser.js",
      "properties": [
        {
          "name": "search",
          "type": "string | null | undefined",
          "description": "Search term",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title of the browser, for translation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Find\""
        },
        {
          "name": "searching",
          "type": "boolean | null | undefined",
          "description": "Searching mode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "activeApp",
          "type": "Object | null | undefined",
          "description": "Global activeApp object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activeAppChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "Attached",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_appSelected",
          "description": "App has been selected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 180,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activeAppChanged",
          "description": "Active app updated, so scroll it into view",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resetBrowser",
          "description": "Reset this browser.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 2
            },
            "end": {
              "line": 225,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 8
        },
        "end": {
          "line": 226,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "search",
          "description": "Search term",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "title",
          "description": "Title of the browser, for translation.",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "searching",
          "description": "Searching mode",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "active-app",
          "description": "Global activeApp object.",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-app-browser"
    },
    {
      "description": "`hax-gizmo-browser-item`\nA button on the hax-gizmo-browser app display",
      "summary": "",
      "path": "lib/hax-gizmo-browser-item.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 99,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "index",
          "type": "number | null | undefined",
          "description": "Index position in the original list of imports",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Icon for the button, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "image",
          "type": "string | null | undefined",
          "description": "Image for the button, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "color",
          "type": "string | null | undefined",
          "description": "MaterializeCSS color name of the item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "author",
          "type": "string | null | undefined",
          "description": "Author related to this gizmo",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "teaser",
          "type": "string | null | undefined",
          "description": "Teaser / headline.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "Description for this.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "examples",
          "type": "Array | null | undefined",
          "description": "Examples, a list of image links, optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "status",
          "type": "Array | null | undefined",
          "description": "Status, whether disabled, enabled, or other future states.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 154,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "tag",
          "type": "string | null | undefined",
          "description": "Tag",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "elevation",
          "type": "number | null | undefined",
          "description": "Elevation off the UI",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        }
      ],
      "methods": [
        {
          "name": "tapEventOn",
          "description": "special handling for taps on the thing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 2
            },
            "end": {
              "line": 176,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "tapEventOff",
          "description": "Hover off stop showing the deeper shadow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireEvent",
          "description": "Fire an event that includes the eventName of what was just pressed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 2
            },
            "end": {
              "line": 196,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 8
        },
        "end": {
          "line": 197,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "title",
          "description": "Title",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 99,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "index",
          "description": "Index position in the original list of imports",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "icon",
          "description": "Icon for the button, optional.",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "image",
          "description": "Image for the button, optional.",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "color",
          "description": "MaterializeCSS color name of the item",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "author",
          "description": "Author related to this gizmo",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "teaser",
          "description": "Teaser / headline.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "Description for this.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "examples",
          "description": "Examples, a list of image links, optional.",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "status",
          "description": "Status, whether disabled, enabled, or other future states.",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 154,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "tag",
          "description": "Tag",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "elevation",
          "description": "Elevation off the UI",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-gizmo-browser-item"
    },
    {
      "description": "`hax-gizmo-browser`\nBrowse a list of gizmos. This provides a listing of custom elements for people to search and select based on what have been defined as gizmos for users to select.",
      "summary": "",
      "path": "lib/hax-gizmo-browser.js",
      "properties": [
        {
          "name": "search",
          "type": "string | null | undefined",
          "description": "Search term",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title of the browser, for translation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Make\""
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "Attached",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 128,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 2
            },
            "end": {
              "line": 151,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resetBrowser",
          "description": "Reset this browser.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 2
            },
            "end": {
              "line": 169,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 170,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "search",
          "description": "Search term",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "title",
          "description": "Title of the browser, for translation.",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-gizmo-browser"
    },
    {
      "description": "`hax-manager`\nA LRN element for brokering the UI for api endpoints both in querying and uploading of new media to eventually bubble up an event for hax-body to have content inserted into it. This is a wiring closet of sorts to ensure we can talk to any backend that's returning a slew of widgets / media to insert.",
      "summary": "",
      "path": "lib/hax-manager.js",
      "properties": [
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "Track visibility status.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_openedChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "editExistingNode",
          "type": "boolean | null | undefined",
          "description": "Title when open.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 234,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "editTitle",
          "type": "string | null | undefined",
          "description": "Title when open.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 4
            },
            "end": {
              "line": 241,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "addTitle",
          "type": "string | null | undefined",
          "description": "Active title",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Add content\""
        },
        {
          "name": "activeStep",
          "type": "boolean | null | undefined",
          "description": "Active step currently selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activeStepChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "searching",
          "type": "boolean | null | undefined",
          "description": "Searching mode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "activePage",
          "type": "string | null | undefined",
          "description": "Active page currently selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activePageChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "canSupportUploads",
          "type": "boolean | null | undefined",
          "description": "If this can support uploads or not based on presense of a backend\nthis property is synced down from the store",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "activeHaxElement",
          "type": "Object | null | undefined",
          "description": "Active element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activeHaxElementChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "appList",
          "type": "Array | null | undefined",
          "description": "List of apps so they can be added",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 296,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "__allowUpload",
          "type": "boolean | null | undefined",
          "description": "Helper so we can upload after prompting where to go.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 4
            },
            "end": {
              "line": 303,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "appendJwt",
          "type": "string | null | undefined",
          "description": "Support for JWTs if name of the JWT is used",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "appendUploadEndPoint",
          "type": "string | null | undefined",
          "description": "Support for other data that's generated dynamically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Created life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 325,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire that we exist.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 2
            },
            "end": {
              "line": 347,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 2
            },
            "end": {
              "line": 365,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "togglePanelSize",
          "description": "Toggle panel size",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 2
            },
            "end": {
              "line": 374,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeEditTitle",
          "description": "compute title for edit mode",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 2
            },
            "end": {
              "line": 385,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "updateExisting"
            }
          ]
        },
        {
          "name": "_placeHolderFileDrop",
          "description": "A file event was detected from a drag and drop in the interface, most likely\nfrom a place-holder tag",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 2
            },
            "end": {
              "line": 404,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fileAboutToUpload",
          "description": "Respond to uploading a file",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 409,
              "column": 2
            },
            "end": {
              "line": 442,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxAppPickerSelection",
          "description": "Event for an app being selected from a picker\nThis happens when multiple upload targets support the given type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 448,
              "column": 2
            },
            "end": {
              "line": 475,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fileUploadResponse",
          "description": "Respond to successful file upload, now inject url into url field and\ndo a gizmo guess from there!",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 481,
              "column": 2
            },
            "end": {
              "line": 526,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activePageChanged",
          "description": "Notice page changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 531,
              "column": 2
            },
            "end": {
              "line": 541,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 546,
              "column": 2
            },
            "end": {
              "line": 554,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activeHaxElementChanged",
          "description": "Notice active element changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 559,
              "column": 2
            },
            "end": {
              "line": 571,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "insertHaxElement",
          "description": "Bubble up insert event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 576,
              "column": 2
            },
            "end": {
              "line": 593,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resetManager",
          "description": "Reset things on the display to their defaults.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 598,
              "column": 2
            },
            "end": {
              "line": 612,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activePage",
              "defaultValue": "0"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "cancel",
          "description": "Cancel interaction with the modal",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 617,
              "column": 2
            },
            "end": {
              "line": 620,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openedChanged",
          "description": "Open state change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 625,
              "column": 2
            },
            "end": {
              "line": 631,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "Respond to the modal closing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 636,
              "column": 2
            },
            "end": {
              "line": 645,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "Open the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 650,
              "column": 2
            },
            "end": {
              "line": 652,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "newAssetConfigure",
          "description": "Configure asset after upload or URL passed in.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 657,
              "column": 2
            },
            "end": {
              "line": 684,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleDialog",
          "description": "Toggle ourselves.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 689,
              "column": 2
            },
            "end": {
              "line": 695,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "toggle",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "selectStep",
          "description": "Set step to configure or insert",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 700,
              "column": 2
            },
            "end": {
              "line": 706,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activeStepChanged",
          "description": "Notice step changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 711,
              "column": 2
            },
            "end": {
              "line": 716,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resolveObjectPath",
          "description": "Helper to take a multi-dimensional object and convert\nit's reference into the real value. This allows for variable input defined\nin a string to actually hit the deeper part of an object structure.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 723,
              "column": 2
            },
            "end": {
              "line": 727,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "obj"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 8
        },
        "end": {
          "line": 728,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "opened",
          "description": "Track visibility status.",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "edit-existing-node",
          "description": "Title when open.",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 234,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "edit-title",
          "description": "Title when open.",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 4
            },
            "end": {
              "line": 241,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "add-title",
          "description": "Active title",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "active-step",
          "description": "Active step currently selected",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "searching",
          "description": "Searching mode",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "active-page",
          "description": "Active page currently selected",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "can-support-uploads",
          "description": "If this can support uploads or not based on presense of a backend\nthis property is synced down from the store",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "active-hax-element",
          "description": "Active element",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "app-list",
          "description": "List of apps so they can be added",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 296,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "append-jwt",
          "description": "Support for JWTs if name of the JWT is used",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "append-upload-end-point",
          "description": "Support for other data that's generated dynamically",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-manager"
    },
    {
      "description": "`hax-app-picker`\n A picker for selecting an item from a list of apps / hax gizmos which require\n a decision to be made. This is used when multiple things match either on upload\n in the add operation of the app or in the gizmo selection to render through,\n such as having multiple ways of presenting an image.",
      "summary": "",
      "path": "lib/hax-app-picker.js",
      "properties": [
        {
          "name": "_elements",
          "type": "Array | null | undefined",
          "description": "raw element set",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "selectionList",
          "type": "Array | null | undefined",
          "description": "Refactored list for selection purposes",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title for the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Pick an options\""
        },
        {
          "name": "pickerType",
          "type": "string | null | undefined",
          "description": "Allow multiple uses",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"gizmo\""
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "Opened status to bind to the dialog box being open",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_openedChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "Attached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "Attached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 201,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "Close the picker and ensure body locking is off.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openedChanged",
          "description": "Open status changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "presentOptions",
          "description": "Present options to the user with a modal and selection method that\nshifts itself to be above everything (stack order)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 277,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elements"
            },
            {
              "name": "type"
            },
            {
              "name": "title",
              "defaultValue": "\"Select an option\""
            },
            {
              "name": "pickerType",
              "defaultValue": "\"gizmo\""
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selected",
          "description": "Handle the user selecting an app.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 2
            },
            "end": {
              "line": 320,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 8
        },
        "end": {
          "line": 321,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "selection-list",
          "description": "Refactored list for selection purposes",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "title",
          "description": "Title for the dialog",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "picker-type",
          "description": "Allow multiple uses",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opened",
          "description": "Opened status to bind to the dialog box being open",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-app-picker"
    },
    {
      "description": "`hax-panel-item`\nA single button in the hax panel for consistency.",
      "summary": "",
      "path": "lib/hax-panel-item.js",
      "properties": [
        {
          "name": "voiceCommand",
          "type": "string | null | undefined",
          "description": "Voice command to append for things that support data-voicecommand.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Support for disabled state buttons",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "edged",
          "type": "string | null | undefined",
          "description": "If we should apply a rounded edge to the button, opposite\nto the direction that it's came from.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:text-fields\""
        },
        {
          "name": "iconClass",
          "type": "string | null | undefined",
          "description": "Icon for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"white-text\""
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label for the button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"editor:text-fields\""
        },
        {
          "name": "eventName",
          "type": "string | null | undefined",
          "description": "Name of the event to bubble up as being tapped.\nThis can be used to tell other elements what was\nclicked so it can take action appropriately.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"button\""
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Possible value to send along as well with the event.\nCan help with normalized event names / selection of\noptions.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "_fireEvent",
          "description": "Fire an event that includes the eventName of what was just pressed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 8
        },
        "end": {
          "line": 198,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "voice-command",
          "description": "Voice command to append for things that support data-voicecommand.",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Support for disabled state buttons",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "edged",
          "description": "If we should apply a rounded edge to the button, opposite\nto the direction that it's came from.",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-class",
          "description": "Icon for the button.",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Label for the button.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "event-name",
          "description": "Name of the event to bubble up as being tapped.\nThis can be used to tell other elements what was\nclicked so it can take action appropriately.",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Possible value to send along as well with the event.\nCan help with normalized event names / selection of\noptions.",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-panel-item"
    },
    {
      "description": "`hax-export-dialog`\nExport dialog with all export options and settings provided.",
      "summary": "",
      "path": "lib/hax-preferences-dialog.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title when open.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Preferences\""
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "Schema that has all of inputs / manages state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "preferences",
          "type": "Object | null | undefined",
          "description": "Preferences managed for everything global about HAX.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM; now we can fire event to the store that\nwe exist and are the thing being edited.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 188,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_preferencesChanged",
          "description": "Notice preferences have changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleDialog",
          "description": "Toggle state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "open the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 2
            },
            "end": {
              "line": 213,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "close the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 220,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 8
        },
        "end": {
          "line": 221,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "title",
          "description": "Title when open.",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "schema",
          "description": "Schema that has all of inputs / manages state",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "preferences",
          "description": "Preferences managed for everything global about HAX.",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-preferences-dialog"
    },
    {
      "description": "`hax-stax-picker`\n A picker for selecting an item from a list of apps / hax stax which require\n a decision to be made. This is used when multiple things match either on upload\n in the add operation of the app or in the stax selection to render through,\n such as having multiple ways of presenting an image.",
      "summary": "",
      "path": "lib/hax-stax-picker.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Header so it's variable",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Templates\""
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "open the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "close the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleDialog",
          "description": "Toggle state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 8
        },
        "end": {
          "line": 109,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "title",
          "description": "Header so it's variable",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-stax-picker"
    },
    {
      "description": "`hax-blox-picker`\n A picker for selecting an item from a list of apps / hax blox which require\n a decision to be made. This is used when multiple things match either on upload\n in the add operation of the app or in the blox selection to render through,\n such as having multiple ways of presenting an image.",
      "summary": "",
      "path": "lib/hax-blox-picker.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Header so it's variable",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Layouts\""
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "open the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "close the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleDialog",
          "description": "Toggle state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 8
        },
        "end": {
          "line": 109,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "title",
          "description": "Header so it's variable",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-blox-picker"
    },
    {
      "description": "`hax-panel`\nA LRN element that provides a panel / pallet of options to choose from.\nThis is intended to be placed in a larger system for creating content quickly\nas the events being bubbled up include HTML nodes to inject into something",
      "summary": "",
      "path": "lib/hax-panel.js",
      "properties": [
        {
          "name": "align",
          "type": "string | null | undefined",
          "description": "Display to the right corner instead of the left (default)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"left\""
        },
        {
          "name": "editMode",
          "type": "boolean | null | undefined",
          "description": "State of the panel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_editModeChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hideExportButton",
          "type": "boolean | null | undefined",
          "description": "Showing export area.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "haxDeveloperMode",
          "type": "boolean | null | undefined",
          "description": "Show developer mode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hidePreferencesButton",
          "type": "boolean | null | undefined",
          "description": "Showing preferences area.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hidePanelOps",
          "type": "boolean | null | undefined",
          "description": "Showing button area at all a well as internal\nstate managing buttons like cancel and save",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "globalPreferences",
          "type": "Object | null | undefined",
          "description": "Global preferences for HAX overall",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Created life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 189,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM; now we can fire event to the store that\nwe exist and are the thing being edited.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 205,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_globalPreferencesChanged",
          "description": "Global preference changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processItemEvent",
          "description": "Process event for simple content inserts.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 2
            },
            "end": {
              "line": 346,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editModeChanged",
          "description": "_editModeChanged",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 2
            },
            "end": {
              "line": 359,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clickEditButton",
          "description": "Toggle the drawer when the button is clicked.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 2
            },
            "end": {
              "line": 366,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clickSaveButton",
          "description": "Toggle the drawer when the button is clicked.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 2
            },
            "end": {
              "line": 374,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_htmlExportDialog",
          "description": "HTML Export trigger.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 2
            },
            "end": {
              "line": 381,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_preferencesDialog",
          "description": "Preferences trigger.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 386,
              "column": 2
            },
            "end": {
              "line": 388,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "Toggle the panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 2
            },
            "end": {
              "line": 399,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 8
        },
        "end": {
          "line": 400,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "align",
          "description": "Display to the right corner instead of the left (default)",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "edit-mode",
          "description": "State of the panel",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-export-button",
          "description": "Showing export area.",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hax-developer-mode",
          "description": "Show developer mode",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-preferences-button",
          "description": "Showing preferences area.",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-panel-ops",
          "description": "Showing button area at all a well as internal\nstate managing buttons like cancel and save",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "global-preferences",
          "description": "Global preferences for HAX overall",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-panel"
    },
    {
      "description": "`hax-export-dialog`\nExport dialog with all export options and settings provided.",
      "summary": "",
      "path": "lib/hax-export-dialog.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title when open.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Export\""
        },
        {
          "name": "globalPreferences",
          "type": "Object | null | undefined",
          "description": "Access to the global properties object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire that we exist.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 2
            },
            "end": {
              "line": 140,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detached life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "download",
          "description": "Download file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "downloadfull",
          "description": "Download file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "importContent",
          "description": "Download file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 191,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "selectBody",
          "description": "selectBody",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "htmlToHaxElements",
          "description": "HTML to HAX Elements",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "contentToFile",
          "description": "Output entire thing as a file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 2
            },
            "end": {
              "line": 272,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "full"
            }
          ]
        },
        {
          "name": "toggleDialog",
          "description": "Toggle ourselves.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 2
            },
            "end": {
              "line": 284,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "open the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "close the dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 2
            },
            "end": {
              "line": 298,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 8
        },
        "end": {
          "line": 299,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "title",
          "description": "Title when open.",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "global-preferences",
          "description": "Access to the global properties object.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "hax-export-dialog"
    }
  ]
}
