{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`lrnsys-button`\nA LRN element",
      "summary": "",
      "path": "lrnsys-button.js",
      "properties": [
        {
          "name": "href",
          "type": "string | null | undefined",
          "description": "Standard href pass down",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"#\""
        },
        {
          "name": "showHref",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "raised",
          "type": "boolean | null | undefined",
          "description": "If the button should be visually lifted off the UI.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label to place in the text area",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "target",
          "type": "string | null | undefined",
          "description": "Support for target to open in new windows.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "iron-icon to use (with iconset if needed)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hoverClass",
          "type": "string | null | undefined",
          "description": "Classes to add / subtract based on the item being hovered.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "buttonClass",
          "type": "string | null | undefined",
          "description": "Button class.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "iconClass",
          "type": "string | null | undefined",
          "description": "Icon class in the event you want it to look different from the text.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "innerClass",
          "type": "string | null | undefined",
          "description": "Inner container classes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "color",
          "type": "string | null | undefined",
          "description": "materializeCSS color class",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "textColor",
          "type": "string | null | undefined",
          "description": "materializeCSS color class for text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "prefetch",
          "type": "string | null | undefined",
          "description": "Allow for prefetch data on hover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "alt",
          "type": "string | null | undefined",
          "description": "Alt via tooltip.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "focusState",
          "type": "boolean | null | undefined",
          "description": "Tracks if focus state is applied",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "Ready.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getShowHref",
          "description": "Generate the pass down href if it exists. This helps\nensure that if a button is disabled it won't do anything\neven if it has a resource reference.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 209,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "href"
            },
            {
              "name": "disabled"
            }
          ]
        },
        {
          "name": "tapEventOn",
          "description": "Class processing on un-tap / hover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 2
            },
            "end": {
              "line": 229,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "tapEventOff",
          "description": "Undo class processing on un-tap / hover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 2
            },
            "end": {
              "line": 249,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focusToggle",
          "description": "Handle toggle for mouse class and manage classList array for paper-button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 278,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 8
        },
        "end": {
          "line": 279,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "href",
          "description": "Standard href pass down",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "show-href",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "raised",
          "description": "If the button should be visually lifted off the UI.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "Label to place in the text area",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "target",
          "description": "Support for target to open in new windows.",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "iron-icon to use (with iconset if needed)",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hover-class",
          "description": "Classes to add / subtract based on the item being hovered.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "button-class",
          "description": "Button class.",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-class",
          "description": "Icon class in the event you want it to look different from the text.",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "inner-class",
          "description": "Inner container classes.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "color",
          "description": "materializeCSS color class",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "text-color",
          "description": "materializeCSS color class for text",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "prefetch",
          "description": "Allow for prefetch data on hover",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "alt",
          "description": "Alt via tooltip.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled state.",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "focus-state",
          "description": "Tracks if focus state is applied",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "lrnsys-button"
    }
  ]
}
