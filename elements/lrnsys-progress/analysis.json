{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`lrnsys-progress-circle`\n`circle that the outline grows as the percentage ticks up`",
      "summary": "",
      "path": "lib/lrnsys-progress-circle.js",
      "properties": [
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Current value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_testValueComplete\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "toolTip",
          "type": "boolean | null | undefined",
          "description": "Whether to add a tooltip on hover.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "listView",
          "type": "boolean | null | undefined",
          "description": "If this is in a list view, expand the output.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Icon.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 4
            },
            "end": {
              "line": 229,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "iconComplete",
          "type": "string | null | undefined",
          "description": "Special icon to use when the item has been completed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "loadingIcon",
          "type": "string | null | undefined",
          "description": "Loading icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"hourglass-full\""
        },
        {
          "name": "finishedIcon",
          "type": "string | null | undefined",
          "description": "Finished icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"thumb-up\""
        },
        {
          "name": "activeIcon",
          "type": "string | null | undefined",
          "description": "Current value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "Array position within a larger body of items.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "active",
          "type": "boolean | null | undefined",
          "description": "If this item is active or not in the larger list",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "status",
          "type": "string | null | undefined",
          "description": "Status of the progression.\nPossible values are disabled, loading, available, complete",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_statusChange\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"available\""
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Correctly disable the button if it's status is such.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 296,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "Calculate if something is in a loading status which invokes a swirl.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 4
            },
            "end": {
              "line": 303,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "finished",
          "type": "boolean | null | undefined",
          "description": "Boolean to invoke \"finished\" state. Useful for the last circle\nin a series.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "max",
          "type": "string | null | undefined",
          "description": "Max progression for doing math against.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 318,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "__chimed",
          "type": "boolean | null | undefined",
          "description": "Internal property to ensure we only ding 1x",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 4
            },
            "end": {
              "line": 325,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "__finishchimed",
          "type": "boolean | null | undefined",
          "description": "Internal property to ensure we only finish 1x",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "URL to link to on click.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"#\""
        },
        {
          "name": "dataUrl",
          "type": "string | null | undefined",
          "description": "Data url to bubble up for more advanced implementations.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "strokeWidth",
          "type": "number | null | undefined",
          "description": "Stroke width.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "4"
        },
        {
          "name": "focusState",
          "type": "boolean | null | undefined",
          "description": "Tracks if focus state is applied for element consistency\nwhen dealing with focus vs hover states.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "playSound",
          "type": "boolean | null | undefined",
          "description": "Play sound status; if this should play sound\nwhen it hits certain milestones or not.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 372,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "playFinishSound",
          "type": "boolean | null | undefined",
          "description": "Play sound at end; if this should play sound\nwhen it hits certain milestones or not.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 381,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "completeSound",
          "type": "string | null | undefined",
          "description": "Play sound on complete.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 4
            },
            "end": {
              "line": 389,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"assets/complete.mp3\""
        },
        {
          "name": "finishedSound",
          "type": "string | null | undefined",
          "description": "Play sound on complete.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"assets/finished.mp3\""
        },
        {
          "name": "_bubbleProgress",
          "type": "Object | null | undefined",
          "description": "Fire and track milestones towards completion state.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 4
            },
            "end": {
              "line": 408,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"25\":false,\"50\":false,\"75\":false}"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "Ready state",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 414,
              "column": 2
            },
            "end": {
              "line": 423,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_testValueComplete",
          "description": "Test if the value = max meaning that we hit complete from available",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 2
            },
            "end": {
              "line": 450,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focusEvent",
          "description": "Focus event for UX consistency.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 2
            },
            "end": {
              "line": 473,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focusOn",
          "description": "Focus event for UX consistency.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 478,
              "column": 2
            },
            "end": {
              "line": 485,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focusOff",
          "description": "Focus event for UX consistency.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 490,
              "column": 2
            },
            "end": {
              "line": 500,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "tapEventOn",
          "description": "Tapped on the item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 505,
              "column": 2
            },
            "end": {
              "line": 507,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getActiveIcon",
          "description": "Calculate which icon to present.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 2
            },
            "end": {
              "line": 535,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "icon"
            },
            {
              "name": "iconComplete"
            },
            {
              "name": "status"
            }
          ]
        },
        {
          "name": "_playSound",
          "description": "Play the sound effect.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 540,
              "column": 2
            },
            "end": {
              "line": 554,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_loadingStatus",
          "description": "Calculate loading based on the status of the item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 559,
              "column": 2
            },
            "end": {
              "line": 564,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "status"
            }
          ]
        },
        {
          "name": "_finishedStatus",
          "description": "Calculate loading based on the status of the item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 569,
              "column": 2
            },
            "end": {
              "line": 577,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "status"
            }
          ]
        },
        {
          "name": "_statusChange",
          "description": "Notice when state changes to fire up an event for others to respond to.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 582,
              "column": 2
            },
            "end": {
              "line": 587,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_disableStatus",
          "description": "Calculate disable based on the status of the item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 592,
              "column": 2
            },
            "end": {
              "line": 597,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "status"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 8
        },
        "end": {
          "line": 598,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "value",
          "description": "Current value.",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "tool-tip",
          "description": "Whether to add a tooltip on hover.",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "list-view",
          "description": "If this is in a list view, expand the output.",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "icon",
          "description": "Icon.",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 4
            },
            "end": {
              "line": 229,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-complete",
          "description": "Special icon to use when the item has been completed.",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "loading-icon",
          "description": "Loading icon",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "finished-icon",
          "description": "Finished icon",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "active-icon",
          "description": "Current value.",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "step",
          "description": "Array position within a larger body of items.",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "active",
          "description": "If this item is active or not in the larger list",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "status",
          "description": "Status of the progression.\nPossible values are disabled, loading, available, complete",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Correctly disable the button if it's status is such.",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 296,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "loading",
          "description": "Calculate if something is in a loading status which invokes a swirl.",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 4
            },
            "end": {
              "line": 303,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "finished",
          "description": "Boolean to invoke \"finished\" state. Useful for the last circle\nin a series.",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "max",
          "description": "Max progression for doing math against.",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 318,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "url",
          "description": "URL to link to on click.",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "data-url",
          "description": "Data url to bubble up for more advanced implementations.",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "stroke-width",
          "description": "Stroke width.",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "focus-state",
          "description": "Tracks if focus state is applied for element consistency\nwhen dealing with focus vs hover states.",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "play-sound",
          "description": "Play sound status; if this should play sound\nwhen it hits certain milestones or not.",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 372,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "play-finish-sound",
          "description": "Play sound at end; if this should play sound\nwhen it hits certain milestones or not.",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 381,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "complete-sound",
          "description": "Play sound on complete.",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 4
            },
            "end": {
              "line": 389,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "finished-sound",
          "description": "Play sound on complete.",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-icon-changed",
          "description": "Fired when the `activeIcon` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "status-changed",
          "description": "Fired when the `status` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "lrnsys-progress-circle"
    },
    {
      "description": "`lrnsys-progress`\n`track progression as a circle and series of circles`",
      "summary": "",
      "path": "lrnsys-progress.js",
      "properties": [
        {
          "name": "disableAjaxCalls",
          "type": "boolean | null | undefined",
          "description": "Disable internal ajax calls as something is handling them above.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "Items to display to visualize the progression.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_itemsChanged\"",
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "sound",
          "type": "boolean | null | undefined",
          "description": "Play sounds whenever an item is complete.\nThis can get pretty annoying though unless the items\nwon't be completed for awhile.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "soundFinish",
          "type": "boolean | null | undefined",
          "description": "Play sound when the user finishes the progression. This\ncould also be annoying but far less so :)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "completeSound",
          "type": "string | null | undefined",
          "description": "Play sound on complete.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"assets/complete.mp3\""
        },
        {
          "name": "finishedSound",
          "type": "string | null | undefined",
          "description": "Play sound on complete.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"assets/finished.mp3\""
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title of this progression, primarily for accessibility.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Steps to completion\""
        },
        {
          "name": "keyItems",
          "type": "Array | null | undefined",
          "description": "Items displayed at specific points on the progression.\nThese aren't filled up but place points along the progression\nwhich can help people see where they are relative to other\nfactors such as % complete as a tick mark or icon.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "active",
          "type": "number | null | undefined",
          "description": "ID of the active item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 200,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_activeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "progressiveUnlock",
          "type": "boolean | null | undefined",
          "description": "Whether to automatically make disabled items available\nor not when the previous one was just complete.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "state",
          "type": "string | null | undefined",
          "description": "State of progress in the current progression",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_reportState\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "overallPercentage",
          "type": "number | null | undefined",
          "description": "How far is the user through this series of items.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_responseList",
          "type": "Array | null | undefined",
          "description": "Responses for each item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 234,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "activeNodeResponse",
          "type": "string | null | undefined",
          "description": "Active response from the node selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activeResponseChange\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "nodeData",
          "type": "Object | null | undefined",
          "description": "Active response from the node selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "nodeDataError",
          "type": "Object | null | undefined",
          "description": "Error.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleNodeError\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "vertical",
          "type": "boolean | null | undefined",
          "description": "Flag to be vertical instead of horizontal.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 264,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "size",
          "type": "string | null | undefined",
          "description": "Size to make everything, small, medium, large, and epic\nare available class names; default medium.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"medium\""
        },
        {
          "name": "strokeWidth",
          "type": "number | null | undefined",
          "description": "Calculate width based on the size since we have to convert em to px.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_getStrokeWidth",
          "description": "Set an appropriate stroke width based on size of the element.\nThis is because it's a hard pixel value when the rest of our\nsizing is based on em's",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 306,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "size"
            }
          ]
        },
        {
          "name": "_reportState",
          "description": "Fire event that state has changed with what the statement is.\nThis gives a readable name to what the state is of the progress bar\nas well as access to the full item that triggered the state change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_itemsChanged",
          "description": "Notice items have changed; only worry about if the count changes\nthough since other oberservers handle downstream mutation",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 2
            },
            "end": {
              "line": 355,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isActive",
          "description": "Simple boolean for whatever is active currently.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 2
            },
            "end": {
              "line": 362,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            },
            {
              "name": "active"
            }
          ]
        },
        {
          "name": "_activeResponseChange",
          "description": "Active Response changed; bubble it up.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 2
            },
            "end": {
              "line": 369,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_bubbleUpChangeActive",
          "description": "Notice event from the nodes themselves\nand set active based on a node bubbling up an event\nthat says \"Hey I am active now!\"",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 376,
              "column": 2
            },
            "end": {
              "line": 379,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activeChanged",
          "description": "Active item has changed, set the rest of the data to match.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 2
            },
            "end": {
              "line": 432,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_statusChanged",
          "description": "Listen for the state of anything below to change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 437,
              "column": 2
            },
            "end": {
              "line": 464,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "handleNodeResponse",
          "description": "Response returned from triggering the Node's URL to fire to get a response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 469,
              "column": 2
            },
            "end": {
              "line": 487,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleNodeError",
          "description": "Weak support for error code being found",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 492,
              "column": 2
            },
            "end": {
              "line": 511,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_overallPercentageCompute",
          "description": "Calculate the overall percentage competed.\nThis forms the line that's connecting the steps.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 517,
              "column": 2
            },
            "end": {
              "line": 520,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            },
            {
              "name": "active"
            }
          ]
        },
        {
          "name": "changePercentage",
          "description": "Change the percentage for the active item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 525,
              "column": 2
            },
            "end": {
              "line": 582,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "percentage"
            },
            {
              "name": "mode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateItems",
          "description": "Modify items and update template binding correctly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 587,
              "column": 2
            },
            "end": {
              "line": 603,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "op"
            },
            {
              "name": "item"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 8
        },
        "end": {
          "line": 604,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "disable-ajax-calls",
          "description": "Disable internal ajax calls as something is handling them above.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "items",
          "description": "Items to display to visualize the progression.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "sound",
          "description": "Play sounds whenever an item is complete.\nThis can get pretty annoying though unless the items\nwon't be completed for awhile.",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "sound-finish",
          "description": "Play sound when the user finishes the progression. This\ncould also be annoying but far less so :)",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "complete-sound",
          "description": "Play sound on complete.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "finished-sound",
          "description": "Play sound on complete.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "title",
          "description": "Title of this progression, primarily for accessibility.",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "key-items",
          "description": "Items displayed at specific points on the progression.\nThese aren't filled up but place points along the progression\nwhich can help people see where they are relative to other\nfactors such as % complete as a tick mark or icon.",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "active",
          "description": "ID of the active item.",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 200,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "progressive-unlock",
          "description": "Whether to automatically make disabled items available\nor not when the previous one was just complete.",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "state",
          "description": "State of progress in the current progression",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "overall-percentage",
          "description": "How far is the user through this series of items.",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "active-node-response",
          "description": "Active response from the node selected.",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "node-data",
          "description": "Active response from the node selected.",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "node-data-error",
          "description": "Error.",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "vertical",
          "description": "Flag to be vertical instead of horizontal.",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 264,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "size",
          "description": "Size to make everything, small, medium, large, and epic\nare available class names; default medium.",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "stroke-width",
          "description": "Calculate width based on the size since we have to convert em to px.",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "key-items-changed",
          "description": "Fired when the `keyItems` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "progressive-unlock-changed",
          "description": "Fired when the `progressiveUnlock` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "size-changed",
          "description": "Fired when the `size` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "lrnsys-progress"
    }
  ]
}
