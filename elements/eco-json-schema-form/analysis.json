{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "lib/eco-json-schema-boolean.js",
      "properties": [
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "value",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 50,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 52,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 25
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 2
            },
            "end": {
              "line": 74,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 30,
          "column": 8
        },
        "end": {
          "line": 102,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-boolean"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/eco-json-schema-enum.js",
      "properties": [
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "error",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "_items",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 83,
              "column": 25
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 57,
          "column": 8
        },
        "end": {
          "line": 143,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-enum"
    },
    {
      "description": "`eco-json-schema-input` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.",
      "summary": "",
      "path": "lib/eco-json-schema-input.js",
      "properties": [
        {
          "name": "language",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "resources",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "error",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 83,
              "column": 25
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 164,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 173,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 2
            },
            "end": {
              "line": 180,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 187,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 201,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 204,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 207,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 52,
          "column": 8
        },
        "end": {
          "line": 208,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-input"
    },
    {
      "description": "`eco-json-schema-file` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.",
      "summary": "",
      "path": "lib/eco-json-schema-file.js",
      "properties": [
        {
          "name": "language",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "resources",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "target",
          "type": "string | null | undefined",
          "description": "`target` is the target url to upload the files to.\nAdditionally by adding '<name>' in your url, it will be replaced by\nthe file name.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "accept",
          "type": "string | null | undefined",
          "description": "`accept` is the set of comma separated file extensions or mime types\nto filter as accepted.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "droppable",
          "type": "boolean | null | undefined",
          "description": "`droppable` indicates whether or not to allow file drop.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "dropText",
          "type": "string | null | undefined",
          "description": "`dropText` is the  text to display in the file drop area.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 4
            },
            "end": {
              "line": 222,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Drop Files Here\""
        },
        {
          "name": "multi",
          "type": "boolean | null | undefined",
          "description": "`multi` indicates whether or not to allow multiple files to be uploaded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "files",
          "type": "Array | null | undefined",
          "description": "`files` is the list of files to be uploaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 241,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "raised",
          "type": "boolean | null | undefined",
          "description": "`raised` indicates whether or not the button should be raised",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "`noink` indicates that the button should not have an ink effect",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "headers",
          "type": "Object | null | undefined",
          "description": "`headers` is a key value map of header names and values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "retryText",
          "type": "string | null | undefined",
          "description": "`retryText` is the text for the tooltip to retry an upload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Retry Upload\""
        },
        {
          "name": "removeText",
          "type": "string | null | undefined",
          "description": "`removeText` is the text for the tooltip to remove an upload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Remove\""
        },
        {
          "name": "successText",
          "type": "string | null | undefined",
          "description": "`successText` is the text for the tooltip of a successful upload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Success\""
        },
        {
          "name": "errorText",
          "type": "string | null | undefined",
          "description": "`errorText` is the text to display for a failed upload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 297,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Error uploading file...\""
        },
        {
          "name": "_shownDropText",
          "type": "boolean | null | undefined",
          "description": "`_shownDropText` indicates whether or not the drop text should be shown",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 305,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "additional",
          "type": "Object | null | undefined",
          "description": "`additional` object of key-pair values to send additional values along with file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "fileDataName",
          "type": "string | null | undefined",
          "description": "`fileDataName` is the name for the file data in the `formData` object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"file\""
        },
        {
          "name": "paperButtonAlt",
          "type": "string | null | undefined",
          "description": "`paperButtonAlt` allows changing the alt property on the paper button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "paperButtonTitle",
          "type": "string | null | undefined",
          "description": "`paperButtonTitle` allows changing the title property on the paper button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 4
            },
            "end": {
              "line": 337,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "clear",
          "description": "Clears the list of files",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 2
            },
            "end": {
              "line": 346,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 359,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setupDrop",
          "description": "A function to set up a drop area for drag-and-drop file uploads",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 2
            },
            "end": {
              "line": 425,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fileClick",
          "description": "Clicks the invisible file input",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 2
            },
            "end": {
              "line": 438,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fileChange",
          "description": "Called whenever the list of selected files changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "object",
              "description": "An event object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "cancel",
          "description": "Cancels the file upload for a specific file",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 2
            },
            "end": {
              "line": 474,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "file",
              "type": "object",
              "description": "An element of the files array"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelUpload",
          "description": "Cancels the file upload",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 481,
              "column": 2
            },
            "end": {
              "line": 483,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "object",
              "description": "An event object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_retryUpload",
          "description": "Retries to upload the file",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 490,
              "column": 2
            },
            "end": {
              "line": 498,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "object",
              "description": "An event object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showDropText",
          "description": "Whether or not to display the drop text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 503,
              "column": 2
            },
            "end": {
              "line": 505,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "uploadFile",
          "description": "Uploads a file",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 2
            },
            "end": {
              "line": 546,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "file",
              "type": "object",
              "description": "An element of the files array"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 547,
              "column": 2
            },
            "end": {
              "line": 549,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 550,
              "column": 2
            },
            "end": {
              "line": 573,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSchemaValue",
          "description": "_errorChanged: function() {\n    if (this.error) {\n      this.$.fileInput.errorMessage = this.error;\n      this.$.fileInput.invalid = true;\n    } else {\n      this.$.fileInput.invalid = false;\n      this.$.fileInput.errorMessage = null;\n    }\n  },",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 2
            },
            "end": {
              "line": 587,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 588,
              "column": 2
            },
            "end": {
              "line": 594,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 595,
              "column": 2
            },
            "end": {
              "line": 601,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 602,
              "column": 2
            },
            "end": {
              "line": 608,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 609,
              "column": 2
            },
            "end": {
              "line": 615,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 616,
              "column": 2
            },
            "end": {
              "line": 618,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 619,
              "column": 2
            },
            "end": {
              "line": 621,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "stringify",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 622,
              "column": 2
            },
            "end": {
              "line": 624,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "s"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 154,
          "column": 8
        },
        "end": {
          "line": 625,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "target",
          "description": "`target` is the target url to upload the files to.\nAdditionally by adding '<name>' in your url, it will be replaced by\nthe file name.",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "accept",
          "description": "`accept` is the set of comma separated file extensions or mime types\nto filter as accepted.",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "droppable",
          "description": "`droppable` indicates whether or not to allow file drop.",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "drop-text",
          "description": "`dropText` is the  text to display in the file drop area.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 4
            },
            "end": {
              "line": 222,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "multi",
          "description": "`multi` indicates whether or not to allow multiple files to be uploaded.",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "files",
          "description": "`files` is the list of files to be uploaded",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 241,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "raised",
          "description": "`raised` indicates whether or not the button should be raised",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "noink",
          "description": "`noink` indicates that the button should not have an ink effect",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "headers",
          "description": "`headers` is a key value map of header names and values",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "retry-text",
          "description": "`retryText` is the text for the tooltip to retry an upload",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "remove-text",
          "description": "`removeText` is the text for the tooltip to remove an upload",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "success-text",
          "description": "`successText` is the text for the tooltip of a successful upload",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error-text",
          "description": "`errorText` is the text to display for a failed upload",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 297,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "additional",
          "description": "`additional` object of key-pair values to send additional values along with file.",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "file-data-name",
          "description": "`fileDataName` is the name for the file data in the `formData` object.",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "paper-button-alt",
          "description": "`paperButtonAlt` allows changing the alt property on the paper button",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "paper-button-title",
          "description": "`paperButtonTitle` allows changing the title property on the paper button",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 4
            },
            "end": {
              "line": 337,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "language-changed",
          "description": "Fired when the `language` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "resources-changed",
          "description": "Fired when the `resources` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "files-changed",
          "description": "Fired when the `files` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-file"
    },
    {
      "description": "`eco-json-schema-array` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.",
      "summary": "",
      "path": "lib/eco-json-schema-array.js",
      "properties": [
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "error",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_schemaArrayItems",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "_valueChanged",
          "description": "Notice values have changed and rebuild the form\nto match (potentially).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 2
            },
            "end": {
              "line": 186,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 189,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildSchemaArrayItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 2
            },
            "end": {
              "line": 192,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaArraySplicesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 270,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail"
            }
          ]
        },
        {
          "name": "_schemaArrayItemChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 307,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeArrayEl",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 2
            },
            "end": {
              "line": 324,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 2
            },
            "end": {
              "line": 330,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 2
            },
            "end": {
              "line": 335,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 2
            },
            "end": {
              "line": 345,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onAddItemWithValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 2
            },
            "end": {
              "line": 418,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values"
            },
            {
              "name": "pointer"
            }
          ]
        },
        {
          "name": "_onAddItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 2
            },
            "end": {
              "line": 449,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onRemoveItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 450,
              "column": 2
            },
            "end": {
              "line": 454,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deepClone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 2
            },
            "end": {
              "line": 457,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "o"
            }
          ]
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 458,
              "column": 2
            },
            "end": {
              "line": 465,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 2
            },
            "end": {
              "line": 472,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 473,
              "column": 2
            },
            "end": {
              "line": 479,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaEnum",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 2
            },
            "end": {
              "line": 482,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 2
            },
            "end": {
              "line": 489,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 490,
              "column": 2
            },
            "end": {
              "line": 496,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 497,
              "column": 2
            },
            "end": {
              "line": 499,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 500,
              "column": 2
            },
            "end": {
              "line": 502,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 135,
          "column": 8
        },
        "end": {
          "line": 503,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-array"
    },
    {
      "description": "`eco-json-schema-object` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-object schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-object>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```",
      "summary": "",
      "path": "lib/eco-json-schema-object.js",
      "properties": [
        {
          "name": "language",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "resources",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 4
            },
            "end": {
              "line": 341,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "error",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "wizard",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 2
            },
            "end": {
              "line": 360,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildSchemaProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 2
            },
            "end": {
              "line": 430,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaPropertyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 2
            },
            "end": {
              "line": 494,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 495,
              "column": 2
            },
            "end": {
              "line": 504,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 505,
              "column": 2
            },
            "end": {
              "line": 542,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removePropertyEl",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 543,
              "column": 2
            },
            "end": {
              "line": 555,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 556,
              "column": 2
            },
            "end": {
              "line": 561,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 562,
              "column": 2
            },
            "end": {
              "line": 567,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 568,
              "column": 2
            },
            "end": {
              "line": 578,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deepClone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 579,
              "column": 2
            },
            "end": {
              "line": 581,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "o"
            }
          ]
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 582,
              "column": 2
            },
            "end": {
              "line": 589,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 590,
              "column": 2
            },
            "end": {
              "line": 596,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 2
            },
            "end": {
              "line": 603,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaEnum",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 604,
              "column": 2
            },
            "end": {
              "line": 606,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 607,
              "column": 2
            },
            "end": {
              "line": 613,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 614,
              "column": 2
            },
            "end": {
              "line": 620,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 2
            },
            "end": {
              "line": 623,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 624,
              "column": 2
            },
            "end": {
              "line": 626,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 323,
          "column": 8
        },
        "end": {
          "line": 627,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 4
            },
            "end": {
              "line": 341,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "wizard",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "wizard-changed",
          "description": "Fired when the `wizard` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-object"
    },
    {
      "description": "`eco-json-schema-wizard` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-wizard schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-wizard>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```",
      "summary": "",
      "path": "lib/eco-json-schema-wizard.js",
      "properties": [
        {
          "name": "language",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 4
            },
            "end": {
              "line": 373,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "resources",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 4
            },
            "end": {
              "line": 377,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 4
            },
            "end": {
              "line": 381,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 4
            },
            "end": {
              "line": 384,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 4
            },
            "end": {
              "line": 391,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "page",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 396,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_pageChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "pages",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 4
            },
            "end": {
              "line": 401,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "error",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 4
            },
            "end": {
              "line": 405,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "isReview",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 4
            },
            "end": {
              "line": 410,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canSubmit",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasNext",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 4
            },
            "end": {
              "line": 418,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasPrev",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 4
            },
            "end": {
              "line": 422,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "titles",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 423,
              "column": 4
            },
            "end": {
              "line": 427,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 432,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 2
            },
            "end": {
              "line": 436,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildSchemaProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 437,
              "column": 2
            },
            "end": {
              "line": 488,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaPropertyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 489,
              "column": 2
            },
            "end": {
              "line": 549,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 550,
              "column": 2
            },
            "end": {
              "line": 557,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 558,
              "column": 2
            },
            "end": {
              "line": 582,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removePropertyEl",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 583,
              "column": 2
            },
            "end": {
              "line": 595,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 596,
              "column": 2
            },
            "end": {
              "line": 601,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 602,
              "column": 2
            },
            "end": {
              "line": 611,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "next",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 612,
              "column": 2
            },
            "end": {
              "line": 624,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "prev",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 625,
              "column": 2
            },
            "end": {
              "line": 637,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "submit",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 638,
              "column": 2
            },
            "end": {
              "line": 640,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_pageChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 641,
              "column": 2
            },
            "end": {
              "line": 653,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 654,
              "column": 2
            },
            "end": {
              "line": 664,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deepClone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 665,
              "column": 2
            },
            "end": {
              "line": 667,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "o"
            }
          ]
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 668,
              "column": 2
            },
            "end": {
              "line": 675,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 676,
              "column": 2
            },
            "end": {
              "line": 682,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 683,
              "column": 2
            },
            "end": {
              "line": 689,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaEnum",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 690,
              "column": 2
            },
            "end": {
              "line": 692,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 693,
              "column": 2
            },
            "end": {
              "line": 699,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 700,
              "column": 2
            },
            "end": {
              "line": 706,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 707,
              "column": 2
            },
            "end": {
              "line": 709,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 710,
              "column": 2
            },
            "end": {
              "line": 712,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 365,
          "column": 8
        },
        "end": {
          "line": 713,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 4
            },
            "end": {
              "line": 373,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 4
            },
            "end": {
              "line": 377,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 4
            },
            "end": {
              "line": 381,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 4
            },
            "end": {
              "line": 384,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 4
            },
            "end": {
              "line": 391,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "page",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 396,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "pages",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 4
            },
            "end": {
              "line": 401,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 4
            },
            "end": {
              "line": 405,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "is-review",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 4
            },
            "end": {
              "line": 410,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "can-submit",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-next",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 4
            },
            "end": {
              "line": 418,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-prev",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 4
            },
            "end": {
              "line": 422,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "titles",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 423,
              "column": 4
            },
            "end": {
              "line": 427,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "title",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 432,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "language-changed",
          "description": "Fired when the `language` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "resources-changed",
          "description": "Fired when the `resources` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "page-changed",
          "description": "Fired when the `page` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "pages-changed",
          "description": "Fired when the `pages` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "is-review-changed",
          "description": "Fired when the `isReview` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "can-submit-changed",
          "description": "Fired when the `canSubmit` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "has-next-changed",
          "description": "Fired when the `hasNext` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "has-prev-changed",
          "description": "Fired when the `hasPrev` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "titles-changed",
          "description": "Fired when the `titles` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "title-changed",
          "description": "Fired when the `title` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-wizard"
    }
  ]
}
