{"version":3,"file":"scary-gallery.umd.js","sources":["lib/scary-image.js","scary-gallery.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\n\n/**\nAdapted from PolymerElements/iron-image to simplify the functionality for scary-gallery\nand expose naturalWidth and naturalHeight\n\nOriginal @license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n`scary-image` is an element to be used in `scary-gallery`\nadapted from `iron-image`\n\nUsage:\n\nBasically identical to the `<img src=\"...\">` tag:\n\n    <scary-image src=\"http://lorempixel.com/400/400\"></scary-image>\n\n@element scary-image\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        overflow: hidden;\n        position: relative;\n      }\n\n      #baseURIAnchor {\n        display: none;\n      }\n\n      #sizedImgDiv {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n        display: block;\n        background-size: cover;\n        background-position: center;\n        background-repeat: no-repeat;\n      }\n\n      #img {\n        display: none;\n      }\n    </style>\n\n    <a id=\"baseURIAnchor\" href=\"#\"></a>\n    <div id=\"sizedImgDiv\" role=\"img\" aria-hidden$=\"[[_computeImgDivARIAHidden(alt)]]\" aria-label$=\"[[_computeImgDivARIALabel(alt, src)]]\"></div>\n    <img id=\"img\" on-load=\"_imgOnLoad\" on-error=\"_imgOnError\">\n`,\n\n  is: \"scary-image\",\n  properties: {\n    /**\n     * The URL of an image.\n     */\n    src: {\n      type: String,\n      value: \"\"\n    },\n\n    /**\n     * A short text alternative for the image.\n     */\n    alt: {\n      type: String,\n      value: null\n    },\n\n    /**\n     * Read-only value that is true when the image is loaded.\n     */\n    loaded: {\n      notify: true,\n      readOnly: true,\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Read-only value that tracks the loading state of the image when the `preload`\n     * option is used.\n     */\n    loading: {\n      notify: true,\n      readOnly: true,\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Read-only value that indicates that the last set `src` failed to load.\n     */\n    error: {\n      notify: true,\n      readOnly: true,\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Can be used to set the width of image (e.g. via binding); size may also be\n     * set via CSS.\n     */\n    width: {\n      observer: \"_widthChanged\",\n      type: Number,\n      value: null\n    },\n\n    /**\n     * Can be used to set the height of image (e.g. via binding); size may also be\n     * set via CSS.\n     *\n     * @attribute height\n     * @type number\n     * @default null\n     */\n    height: {\n      observer: \"_heightChanged\",\n      type: Number,\n      value: null\n    },\n\n    /**\n     * Natural width of the loaded image\n     */\n    naturalWidth: {\n      type: Number,\n      notify: true,\n      computed: \"_computeNaturalWidth(loaded)\"\n    },\n\n    /**\n     * Natural height of the loaded image\n     */\n    naturalHeight: {\n      type: Number,\n      notify: true,\n      computed: \"_computeNaturalHeight(loaded)\"\n    }\n  },\n\n  observers: [\"_loadStateObserver(src)\"],\n\n  created: function() {\n    this._resolvedSrc = \"\";\n  },\n\n  _imgOnLoad: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this._setLoading(false);\n    this._setLoaded(true);\n    this._setError(false);\n  },\n\n  _computeNaturalWidth: function(loaded) {\n    if (!loaded) {\n      return null;\n    }\n    return this.$.img.naturalWidth;\n  },\n\n  _computeNaturalHeight: function(loaded) {\n    if (!loaded) {\n      return null;\n    }\n    return this.$.img.naturalHeight;\n  },\n\n  _imgOnError: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this.$.img.removeAttribute(\"src\");\n    this.$.sizedImgDiv.style.backgroundImage = \"\";\n\n    this._setLoading(false);\n    this._setLoaded(false);\n    this._setError(true);\n  },\n\n  _computeImgDivARIAHidden: function() {\n    return this.alt === \"\" ? \"true\" : undefined;\n  },\n\n  _computeImgDivARIALabel: function() {\n    if (this.alt !== null) {\n      return this.alt;\n    }\n\n    // that URL x, but '' is the default for src.\n    if (this.src === \"\") {\n      return \"\";\n    }\n\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    var resolved = this._resolveSrc(this.src);\n    // Remove query parts, get file name.\n    return resolved\n      .replace(/[?|#].*/g, \"\")\n      .split(\"/\")\n      .pop();\n  },\n\n  _widthChanged: function() {\n    this.style.width = isNaN(this.width) ? this.width : this.width + \"px\";\n  },\n\n  _heightChanged: function() {\n    this.style.height = isNaN(this.height) ? this.height : this.height + \"px\";\n  },\n\n  _loadStateObserver: function(src) {\n    var newResolvedSrc = this._resolveSrc(src);\n    if (newResolvedSrc === this._resolvedSrc) {\n      return;\n    }\n    this._resolvedSrc = newResolvedSrc;\n\n    this.$.img.removeAttribute(\"src\");\n    this.$.sizedImgDiv.style.backgroundImage = \"\";\n\n    if (src === \"\") {\n      this._setLoading(false);\n      this._setLoaded(false);\n      this._setError(false);\n    } else {\n      this.$.img.src = this._resolvedSrc;\n      this.$.sizedImgDiv.style.backgroundImage =\n        'url(\"' + this._resolvedSrc + '\")';\n\n      this._setLoading(true);\n      this._setLoaded(false);\n      this._setError(false);\n    }\n  },\n\n  _resolveSrc: function(testSrc) {\n    var resolved = this.resolveUrl(testSrc, this.$.baseURIAnchor.href);\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    if (resolved[0] === \"/\") {\n      // In IE location.origin might not work\n      // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n      resolved =\n        (location.origin || location.protocol + \"//\" + location.host) +\n        resolved;\n    }\n    return resolved;\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport { FlattenedNodesObserver } from \"@polymer/polymer/lib/utils/flattened-nodes-observer.js\";\nimport \"./lib/scary-image.js\";\n/**\n`<scary-gallery>` will (try to) layout any of its `<scary-image>` children\nto make best use of available space, and rearranges the images, when the\nsize changes.\n\nSample usage:\n```\n<scary-gallery>\n  <scary-image src=\"img1.jpg\"></scary-image>\n  <scary-image src=\"img2.jpg\"></scary-image>\n  <scary-image src=\"img3.jpg\"></scary-image>\n  <scary-image src=\"img4.jpg\"></scary-image>\n  <scary-image src=\"img5.jpg\"></scary-image>\n  <scary-image src=\"img6.jpg\"></scary-image>\n</scary-gallery>\n```\n\nDisclaimer:\n\nWork in progress, the algorithm to layout the images is far from perfect.\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: \"scary-gallery\",\n\n  properties: {\n    /**\n     * Minimum height of photos, unless they are too wide to fit.\n     */\n    minHeight: {\n      type: Number,\n      value: 200\n    },\n\n    /**\n     * Spacing between the images in pixels\n     */\n    gap: {\n      type: Number,\n      value: 4\n    }\n  },\n\n  observers: [\"_init(minHeight, gap)\"],\n\n  attached: function() {\n    this._observer = new FlattenedNodesObserver(this, this._init);\n    this._boundResize = this._resize.bind(this);\n    window.addEventListener(\"resize\", this._boundResize);\n  },\n\n  detached: function() {\n    dom(this).unobserveNodes(this._observer);\n    window.removeEventListener(\"resize\", this._boundResize);\n  },\n\n  _init: function() {\n    this.debounce(\n      \"init\",\n      function() {\n        this._firstResize = true;\n        this._children = Array.prototype.slice.call(\n          dom(this).querySelectorAll(\"scary-image\")\n        );\n        this._resize();\n      },\n      50\n    );\n  },\n\n  _resize: function() {\n    this.debounce(\n      \"resize\",\n      function() {\n        var loaded = true;\n        var rows = [];\n        var row = [];\n        var rowWidth = 0;\n        this._maxWidth = this.offsetWidth;\n        this._children.forEach(\n          function(img) {\n            img.style.margin = (this.gap / 2).toString(10) + \"px\";\n            if (img.loaded) {\n              var width =\n                (this.minHeight / img.naturalHeight) * img.naturalWidth +\n                this.gap;\n              if (rowWidth + width > this._maxWidth) {\n                if (row.length > 0) {\n                  rows.push({\n                    images: row,\n                    width: rowWidth\n                  });\n                  row = [];\n                }\n                rowWidth = 0;\n              }\n              rowWidth += width;\n              img.tmpWidth = width;\n              row.push(img);\n            } else {\n              loaded = false;\n            }\n          }.bind(this)\n        );\n        if (row.length > 0) {\n          rows.push({\n            images: row,\n            width: rowWidth\n          });\n        }\n\n        rows.forEach(\n          function(row) {\n            var totalGap = row.images.length * this.gap;\n            var targetWidth = this._maxWidth - totalGap;\n            var rowWidth = row.width - totalGap;\n            var targetHeight = (this.minHeight * targetWidth) / rowWidth;\n\n            row.images.forEach(\n              function(img) {\n                img.height = targetHeight;\n                img.width =\n                  (targetHeight / img.naturalHeight) * img.naturalWidth;\n              }.bind(this)\n            );\n          }.bind(this)\n        );\n\n        if (!loaded) {\n          this._resize();\n        }\n        if (loaded && this._firstResize) {\n          // Unfortunately there is no way (I know of) to detect size changes\n          // because of scrollbars appearing after the initial load.\n          // Therefore I trigger a second _resize() manually here.\n          this._firstResize = false;\n          this._resize();\n        }\n      },\n      50\n    );\n  }\n});\n"],"names":["_template","html","is","properties","src","type","String","value","alt","loaded","notify","readOnly","Boolean","loading","error","width","observer","Number","height","naturalWidth","computed","naturalHeight","observers","created","_resolvedSrc","_imgOnLoad","this","$","img","_resolveSrc","_setLoading","_setLoaded","_setError","_computeNaturalWidth","_computeNaturalHeight","_imgOnError","removeAttribute","sizedImgDiv","style","backgroundImage","_computeImgDivARIAHidden","undefined","_computeImgDivARIALabel","replace","split","pop","_widthChanged","isNaN","_heightChanged","_loadStateObserver","newResolvedSrc","testSrc","resolved","resolveUrl","baseURIAnchor","href","location","origin","protocol","host","minHeight","gap","attached","_observer","FlattenedNodesObserver","_init","_boundResize","_resize","bind","window","addEventListener","detached","dom","unobserveNodes","removeEventListener","debounce","_firstResize","_children","Array","prototype","slice","call","querySelectorAll","rows","row","rowWidth","_maxWidth","offsetWidth","forEach","margin","toString","length","push","images","tmpWidth","totalGap","targetWidth","targetHeight"],"mappings":"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"}