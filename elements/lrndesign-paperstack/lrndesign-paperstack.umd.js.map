{"version":3,"file":"lrndesign-paperstack.umd.js","sources":["lrndesign-paperstack.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\n/**\n * `lrndesign-paperstack`\n * `Stack of papers visually`\n *\n * @demo demo/index.html\n */\nPolymer({\n  _template: html`\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n      }\n      /* Example card */\n      .egletter p {\n        position: relative;\n        z-index: 3;\n        line-height: 24px;\n      }\n\n      .egletter ul {\n        position: relative;\n        z-index: 3;\n        line-height: 24px;\n      }\n\n      .egletter span {\n        font-family: cursive;\n        margin: 0 auto;\n        position: relative;\n        z-index: 3;\n        line-height: 64px;\n      }\n\n      iron-icon {\n        display: block;\n        font-size: 12px;\n        height: 40px;\n        width: 40px;\n        padding: 4px;\n      }\n\n      .icon-container {\n        float: left;\n        width: 48px;\n        height: 48px;\n        margin-right: 8px;\n      }\n\n      .egletter span {\n        line-height: 48px;\n      }\n\n      .egletter {\n        min-height: 160px;\n        padding: 12px 24px;\n        position: relative;\n        width: 80%;\n        z-index: 4;\n        margin-bottom: 48px;\n      }\n\n      .egletter:before,\n      .egletter:after {\n        content: \"\";\n        height: 98%;\n        position: absolute;\n        width: 100%;\n        z-index: -1;\n      }\n\n      .egletter:before {\n        background: #fafafa;\n        box-shadow: 0 0 .5rem rgba(0, 0, 0, 0.2);\n        left: -.32px;\n        top: .32px;\n        transform: rotate(-2.5deg);\n      }\n\n      .egletter:after {\n        background: #ffffff;\n        box-shadow: 0 0 .32px rgba(0, 0, 0, 0.2);\n        right: -.32px;\n        top: 1.6px;\n        transform: rotate(1.4deg);\n      }\n    </style>\n    <div class=\"egletter\">\n      <div class$=\"icon-container circle [[color]]\">\n        <iron-icon icon=\"[[icon]]\" class$=\"[[textColor]]\"></iron-icon>\n      </div>\n      <span>[[title]]</span>\n      <p><slot></slot></p>\n    </div>\n`,\n\n  is: \"lrndesign-paperstack\",\n\n  behaviors: [\n    HAXBehaviors.PropertiesBehaviors,\n    A11yBehaviors.A11y,\n    MaterializeCSSBehaviors.ColorBehaviors\n  ],\n\n  properties: {\n    /**\n     * Title\n     */\n    title: {\n      type: String,\n      value: \"Title\"\n    },\n    /**\n     * icon\n     */\n    icon: {\n      type: String,\n      value: \"lrn:assignment\"\n    },\n    /**\n     * Color code\n     */\n    colorCode: {\n      type: String,\n      value: \"#000000\",\n      observer: \"_colorCodeChange\"\n    },\n    /**\n     * Color class\n     */\n    color: {\n      type: String,\n      computed: '_computeColorClass(colorCode, \"bg\")'\n    },\n    /**\n     * Text color\n     */\n    textCodeColor: {\n      type: String,\n      value: \"#ffffff\"\n    },\n    /**\n     * Text color class\n     */\n    textColor: {\n      type: String,\n      computed: \"_computeColorClass(textCodeColor)\"\n    }\n  },\n\n  /**\n   * Attached.\n   */\n  attached: function() {\n    // Establish hax properties if they exist\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Paper stack\",\n        description: \"A stack of papers\",\n        icon: \"icons:content-copy\",\n        color: \"grey\",\n        groups: [\"Video\", \"Media\"],\n        handles: [],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"Title of the cards\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"Title of the cards\",\n            inputMethod: \"boolean\"\n          },\n          {\n            property: \"colorCode\",\n            title: \"Color\",\n            description: \"Color of the card\",\n            inputMethod: \"colorpicker\"\n          },\n          {\n            property: \"icon\",\n            title: \"Icon\",\n            description: \"Icon for the card\",\n            inputMethod: \"iconpicker\"\n          },\n          {\n            slot: \"\",\n            title: \"Contents\",\n            description: \"card contents\",\n            inputMethod: \"code-editor\"\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  },\n\n  /**\n   * Notice the color change and shift it over to the class name.\n   */\n  _computeColorClass: function(color, bg) {\n    if (color != null && color.toLowerCase() == \"#ffffff\") {\n      if (bg == \"bg\") {\n        return \"white\";\n      }\n      return \"white-text\";\n    } else if (color != null && color == \"#000000\") {\n      if (bg == \"bg\") {\n        return \"black\";\n      }\n      return \"black-text\";\n    } else if (color != null && color.substring(0, 1) == \"#\") {\n      return this._colorTransform(color.toLowerCase(), \"\", \"\");\n    }\n  },\n\n  /**\n   * Text color change and shift it over to the class name.\n   */\n  _colorCodeChange: function(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined && newValue != null) {\n      // sees if there's enough contrast and adjusts them accordingly\n      this.computeTextPropContrast(\"textCodeColor\", \"colorCode\");\n    }\n  }\n});\n"],"names":["_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","A11yBehaviors","A11y","MaterializeCSSBehaviors","ColorBehaviors","properties","title","type","String","value","icon","colorCode","observer","color","computed","textCodeColor","textColor","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","description","groups","handles","meta","author","settings","quick","property","inputMethod","configure","slot","advanced","_computeColorClass","bg","toLowerCase","substring","this","_colorTransform","_colorCodeChange","newValue","oldValue","_typeof","computeTextPropContrast"],"mappings":"8/FAYQ,CACNA,UAAWC,YAwFXC,GAAI,uBAEJC,UAAW,CACTC,aAAaC,oBACbC,cAAcC,KACdC,wBAAwBC,gBAG1BC,WAAY,CAIVC,MAAO,CACLC,KAAMC,OACNC,MAAO,SAKTC,KAAM,CACJH,KAAMC,OACNC,MAAO,kBAKTE,UAAW,CACTJ,KAAMC,OACNC,MAAO,UACPG,SAAU,oBAKZC,MAAO,CACLN,KAAMC,OACNM,SAAU,uCAKZC,cAAe,CACbR,KAAMC,OACNC,MAAO,WAKTO,UAAW,CACTT,KAAMC,OACNM,SAAU,sCAOdG,SAAU,gBAwDHC,iBAtDO,CACVC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLhB,MAAO,cACPiB,YAAa,oBACbb,KAAM,qBACNG,MAAO,OACPW,OAAQ,CAAC,QAAS,SAClBC,QAAS,GACTC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,QACVxB,MAAO,QACPiB,YAAa,qBACbQ,YAAa,YACbrB,KAAM,iBAGVsB,UAAW,CACT,CACEF,SAAU,QACVxB,MAAO,QACPiB,YAAa,qBACbQ,YAAa,WAEf,CACED,SAAU,YACVxB,MAAO,QACPiB,YAAa,oBACbQ,YAAa,eAEf,CACED,SAAU,OACVxB,MAAO,OACPiB,YAAa,oBACbQ,YAAa,cAEf,CACEE,KAAM,GACN3B,MAAO,WACPiB,YAAa,gBACbQ,YAAa,gBAGjBG,SAAU,OAShBC,mBAAoB,SAAStB,EAAOuB,UACrB,MAATvB,GAAwC,WAAvBA,EAAMwB,cACf,MAAND,EACK,QAEF,aACW,MAATvB,GAA0B,WAATA,EAChB,MAANuB,EACK,QAEF,aACW,MAATvB,GAA0C,KAAzBA,EAAMyB,UAAU,EAAG,GACtCC,KAAKC,gBAAgB3B,EAAMwB,cAAe,GAAI,SADhD,GAQTI,iBAAkB,SAASC,EAAUC,iBAC/BC,EAAOF,IAA6C,MAAZA,QAErCG,wBAAwB,gBAAiB"}