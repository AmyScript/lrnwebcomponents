{"version":3,"file":"a11y-media-player.umd.js","sources":["lib/a11y-media-behaviors.js","lib/a11y-media-player-properties.js","lib/a11y-media-button.js","lib/a11y-media-controls.js","lib/a11y-media-loader.js","lib/a11y-media-play-button.js","lib/a11y-media-transcript-cue.js","lib/a11y-media-transcript.js","lib/a11y-media-transcript-controls.js","lib/a11y-media-utility.js","lib/a11y-media-youtube-utility.js","a11y-media-player.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\n\nexport { A11yMediaBehaviors };\n/**\n * `a11y-media-behaviors`\n * `A set of properties for a11y-media components.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends SimpleColors\n * @customElement\n * @polymer\n */\nclass A11yMediaBehaviors extends SimpleColors {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-behaviors\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * autoplay is an option,\n       * but generally not recommended for a11y\n       */\n      autoplay: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show closed captions\n       */\n      cc: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * The height of the media player.\n       */\n      height: {\n        type: Number,\n        value: null\n      },\n      /**\n       * is YouTube?\n       */\n      isYoutube: {\n        type: Boolean,\n        computed: \"_hasAttribute(youtubeId)\"\n      },\n      /**\n       * Language\n       */\n      lang: {\n        type: String,\n        value: \"en\"\n      },\n      /**\n       * Loop the video?\n       */\n      loop: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Dash.js manifest source?\n       */\n      manifest: {\n        type: String,\n        value: null\n      },\n      /**\n       * Is audio muted?\n       */\n      muted: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Preload the sources: auto, metadata (default), or none.\n       */\n      preload: {\n        type: String,\n        value: \"metadata\"\n      },\n      /**\n       * Playback rate where 1 is normal speed, 0.5 is half-speed, and 2 is double speed\n       */\n      playbackRate: {\n        type: Number,\n        value: 1\n      },\n      /**\n       * status\n       */\n      status: {\n        type: String,\n        value: \"loading...\"\n      },\n      /**\n       * the selected track\n       */\n      selectedTrack: {\n        type: Object,\n        value: null\n      },\n      /**\n       * id of the selected track\n       */\n      selectedTrackID: {\n        type: Number,\n        value: null\n      },\n      /**\n       * array of tracks and cues\n       */\n      tracks: {\n        type: Array,\n        value: null\n      },\n      /**\n       * Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n       */\n      volume: {\n        type: Number,\n        value: 70\n      },\n      /**\n       * the id for the video\n       */\n      youtubeId: {\n        type: String,\n        value: null\n      },\n      /**\n       * the YouTube player object\n       */\n      youTube: {\n        type: Object,\n        value: {}\n      }\n    };\n  }\n\n  /**\n   * gets behaviors\n   */\n  static get behaviors() {\n    return [SimpleColors, ResponsiveUtility];\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * returns true if an attribute is not null\n   *\n   * @param {object} the attribute to check\n   * @returns {boolean} attr !== undefined && attr !== null\n   */\n  _hasAttribute(attr) {\n    return attr !== undefined && attr !== null;\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {object} the attribute to check\n   * @param {object} the value to check\n   * @returns {boolean} attr === val\n   */\n\n  _testAttribute(attr, val) {\n    return attr === val;\n  }\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   *\n   * @param {object} a set of responsive for options, eg: `{element: root, attribute: \"responsive-size\", relativeToParent: true}`\n   */\n  _addResponsiveUtility(options) {\n    let root = this;\n    window.ResponsiveUtility.requestAvailability();\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail:\n          options !== undefined\n            ? options\n            : {\n                element: root,\n                attribute: \"responsive-size\",\n                relativeToParent: true\n              }\n      })\n    );\n  }\n\n  /**\n   * converts time in millesconds to HH:MM:SS\n   *\n   * @param {float} the elapsed time, in seconds\n   * @param {float} the duration, in seconds\n   * @returns {string} a human-readable string of elapsed time/duration in HH:MM:SS\n   *\n   */\n  _getHHMMSS(val, max) {\n    max = max === undefined ? val : max;\n    let a = val => {\n        return val < 10 ? \"0\" + val : val;\n      },\n      b = (val, i, none) => {\n        return max >= i ? a(Math.floor(val / i)) + \":\" : none;\n      },\n      c = val => {\n        return val < 100 ? val + \"0\" : val;\n      };\n    return (\n      b(val, 3600, \"\") + b(val % 3600, 60, \"00:\") + a(Math.round(val % 60))\n    );\n  }\n}\nwindow.customElements.define(A11yMediaBehaviors.tag, A11yMediaBehaviors);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\n\nexport { A11yMediaPlayerProperties };\n/**\n * `a11y-media-player-properties`\n * `A set of properties for a11y-media player components.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaPlayerProperties extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Allow this media to play concurrently with other a11y-media-players?\n       * Default is to pause this a11y-media-player when other a11y-media-player starts playing.\n       */\n\n      allowConcurrent: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * label/microcopy for audio\n       */\n      audioLabel: {\n        type: String,\n        value: \"audio\"\n      },\n      /**\n       * Is this an audio file?\n       */\n      audioOnly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * label for autoscroll button on transcript controls\n       */\n      autoScrollLabel: {\n        type: String,\n        value: \"auto-scrolling\"\n      },\n      /**\n       * icon for autoscroll button on transcript controls\n       */\n      autoScrollIcon: {\n        type: String,\n        value: \"swap-vert\"\n      },\n      /**\n       * icon for closed captions button on player controls\n       */\n      captionsIcon: {\n        type: String,\n        value: \"av:closed-caption\"\n      },\n      /**\n       * label for closed captions button on player controls\n       */\n      captionsLabel: {\n        type: String,\n        value: \"closed captions\"\n      },\n      /**\n       * label for captions drop-down menu on settings menu of player controls\n       */\n      captionsMenuLabel: {\n        type: String,\n        value: \"Captions\"\n      },\n      /**\n       * label for captions off drop-down menu item on settings menu of player controls\n       */\n      captionsMenuOff: {\n        type: String,\n        value: \"Off\"\n      },\n      /**\n       * Use compact controls?\n       */\n      compactControls: {\n        type: Boolean,\n        computed: \"_getCompactControls(responsiveSize)\",\n        reflectToAttribute: true\n      },\n      /**\n       * crossorigin attribute for <video> and <audio> tags\n       */\n      crossorigin: {\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * Use dark theme on transcript? Default is false, even when player is dark.\n       */\n      darkTranscript: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable fullscreen option\n       */\n      disableFullscreen: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disableInteractive: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable transcript search feature\n       */\n      disableSearch: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable autoscrolling as transcript plays\n       */\n      disableScroll: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable transcript print button\n       */\n      disablePrintButton: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Determines if video and transcript are in a flex layout\n       */\n      flexLayout: {\n        type: Boolean,\n        computed:\n          \"_isFlexLayout(standAlone,hideTranscript,noHeight,stackedLayout)\",\n        reflectToAttribute: true\n      },\n      /**\n       * icon for forward button on player controls\n       */\n      forwardIcon: {\n        type: String,\n        value: \"av:fast-forward\"\n      },\n      /**\n       * label for rewind button on player controls\n       */\n      forwardLabel: {\n        type: String,\n        value: \"forward\"\n      },\n      /**\n       * Is fullscreen mode?\n       */\n      fullscreen: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show the FullscreenButton?\n       */\n      fullscreenButton: {\n        type: Boolean,\n        computed: \"_getFullscreenButton(disableFullscreen)\",\n        notify: true\n      },\n      /**\n       * icon for fullscreen button on transcript\n       */\n      fullscreenIcon: {\n        type: String,\n        value: \"fullscreen\"\n      },\n      /**\n       * label for fullscreen button on transcript\n       */\n      fullscreenLabel: {\n        type: String,\n        value: \"fullscreen\"\n      },\n      /**\n       * Does the player have tracks?\n       */\n      hasCaptions: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Does the player have an interactive transcript?\n       */\n      hasTranscript: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide elapsed time?\n       */\n      hideElapsedTime: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show cue's start and end time\n       */\n      hideTimestamps: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * label for loading status\n       */\n      loadingLabel: {\n        type: String,\n        value: \"Loading...\"\n      },\n      /**\n       * label for loop menu item on settings menu of player controls\n       */\n      loopLabel: {\n        type: String,\n        value: \"Loop Playback\"\n      },\n      /**\n       * the media to be manipulated\n       */\n      media: {\n        type: Object,\n        value: null\n      },\n      /**\n       * optional title of media (shows when printed)\n       */\n      mediaTitle: {\n        type: String,\n        value: \"\",\n        reflectToAttribute: true\n      },\n      /**\n       * icon for mute button on player controls\n       */\n      muteIcon: {\n        type: String,\n        value: \"av:volume-up\"\n      },\n      /**\n       * label for fullscreen button on player controls\n       */\n      muteLabel: {\n        type: String,\n        value: \"mute\"\n      },\n      /**\n       * Is it an audio player with no thumbnail?\n       */\n      noHeight: {\n        type: Boolean,\n        computed: \"_getNoHeight(audioOnly,thumbnailSrc)\",\n        reflectToAttribute: true\n      },\n      /**\n       * Hide the giant play button?\n       */\n      noPlayButton: {\n        type: Boolean,\n        computed: \"_noPlayButton(noHeight,isYoutube)\"\n      },\n      /**\n       * icon for pause button on player controls\n       */\n      pauseIcon: {\n        type: String,\n        value: \"av:pause\"\n      },\n      /**\n       * label for pause button on player controls\n       */\n      pauseLabel: {\n        type: String,\n        value: \"pause\"\n      },\n      /**\n       * icon for play button on player controls\n       */\n      playIcon: {\n        type: String,\n        value: \"av:play-arrow\"\n      },\n      /**\n       * Is media playing?\n       */\n      playing: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * label for play button on player controls\n       */\n      playLabel: {\n        type: String,\n        value: \"play\"\n      },\n      /**\n       * label for print button on player controls\n       */\n      printLabel: {\n        type: String,\n        value: \"print transcript\"\n      },\n      /**\n       * icon for print button on player controls\n       */\n      printIcon: {\n        type: String,\n        value: \"print\"\n      },\n      /**\n       * Size of the a11y media element for responsive styling\n       */\n      responsiveSize: {\n        type: String,\n        notify: true,\n        reflectToAttribute: true\n      },\n      /**\n       * icon for restart button on player controls\n       */\n      restartIcon: {\n        type: String,\n        value: \"av:replay\"\n      },\n      /**\n       * label for restart button on player controls\n       */\n      restartLabel: {\n        type: String,\n        value: \"restart\"\n      },\n      /**\n       * icon for rewind button on player controls\n       */\n      rewindIcon: {\n        type: String,\n        value: \"av:fast-rewind\"\n      },\n      /**\n       * label for rewind button on player controls\n       */\n      rewindLabel: {\n        type: String,\n        value: \"backward\"\n      },\n      /**\n       * the search tool for the transcript\n       */\n      search: {\n        type: Object,\n        value: null\n      },\n      /**\n       * label for print button on player controls\n       */\n      searchIcon: {\n        type: String,\n        value: \"search\"\n      },\n      /**\n       * label for print button on player controls\n       */\n      searchLabel: {\n        type: String,\n        value: \"search transcript\"\n      },\n      /**\n       * icon for the next button on transcript search\n       */\n      searchNextButtonIcon: {\n        type: String,\n        value: \"arrow-forward\"\n      },\n      /**\n       * label for the next button on transcript search\n       */\n      searchNextButtonLabel: {\n        type: String,\n        value: \"next result\"\n      },\n      /**\n       * label for print button on player controls\n       */\n      searchNextIcon: {\n        type: String,\n        value: \"arrow-forward\"\n      },\n      /**\n       * label for print button on player controls\n       */\n      searchNextLabel: {\n        type: String,\n        value: \"next result\"\n      },\n      /**\n       * icon for the previous button on transcript search\n       */\n      searchPrevButtonIcon: {\n        type: String,\n        value: \"arrow-back\"\n      },\n      /**\n       * label for the previous button on transcript search\n       */\n      searchPrevButtonLabel: {\n        type: String,\n        value: \"previous result\"\n      },\n      /**\n       * label for print button on player controls\n       */\n      searchPrevIcon: {\n        type: String,\n        value: \"arrow-back\"\n      },\n      /**\n       * label for print button on player controls\n       */\n      searchPrevLabel: {\n        type: String,\n        value: \"previous result\"\n      },\n      /**\n       * icon for settings menu on player controls\n       */\n      settingsIcon: {\n        type: String,\n        value: \"settings\"\n      },\n      /**\n       * label for settings menu on player controls\n       */\n      settingsLabel: {\n        type: String,\n        value: \"settings\"\n      },\n      /**\n       * is YouTube?\n       */\n      showCustomCaptions: {\n        type: Boolean,\n        computed: \"_showCustomCaptions(isYoutube,audioOnly,hasCaptions,cc)\"\n      },\n      /**\n       * label for skip the transcript link before the transcript\n       */\n      skipTranscriptLink: {\n        type: String,\n        value: \"Skip the transcript.\"\n      },\n      /**\n       * label for speed menu item on settings menu of player controls\n       */\n      speedLabel: {\n        type: String,\n        value: \"Speed %\"\n      },\n      /**\n       * stacked layout instead of side-by-side?\n       */\n      stackedLayout: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Is stand-alone player (without transcript)?\n       */\n      standAlone: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * target of the controls\n       */\n      target: {\n        type: Object,\n        value: null\n      },\n      /**\n       * Source of optional thumbnail image\n       */\n      thumbnailSrc: {\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * icon for transcript button on player controls\n       */\n      transcriptIcon: {\n        type: String,\n        value: \"description\"\n      },\n      /**\n       * label for transcript button on player controls\n       */\n      transcriptLabel: {\n        type: String,\n        value: \"transcript\"\n      },\n      /**\n       * label for transcript menu item on settings menu of player controls\n       */\n      transcriptMenuLabel: {\n        type: String,\n        value: \"Transcript\"\n      },\n      /**\n       * the interface UI language\n       */\n      uiLanguage: {\n        type: String,\n        value: \"en\"\n      },\n      /**\n       * icon for unmute button on player controls\n       */\n      unmuteIcon: {\n        type: String,\n        value: \"av:volume-off\"\n      },\n      /**\n       * label for unmute button on player controls\n       */\n      unmuteLabel: {\n        type: String,\n        value: \"unmute\"\n      },\n      /**\n       * label/microcopy for audio\n       */\n      videoLabel: {\n        type: String,\n        value: \"video\"\n      },\n      /**\n       * label for volume slider on player controls\n       */\n      volumeLabel: {\n        type: String,\n        value: \"volume\"\n      },\n      /**\n       * The width of the media player.\n       */\n      width: {\n        type: String,\n        value: null\n      }\n    };\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-player-properties\";\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {boolean} Is the media audio only?\n   * @param {string} optional: the source URL of the thumbnail image\n   * @returns {boolean} Should height of video/thumbnail area be set to 0?\n   */\n  _getNoHeight(audioOnly, thumbnailSrc) {\n    return audioOnly && (thumbnailSrc === null || thumbnailSrc === undefined);\n  }\n\n  /**\n   * returns true if the player has no giant play button\n   *\n   * @param {boolean} Should height of video/thumbnail area be set to 0?\n   * @param {boolean} Is the media a YouTube video?\n   * @returns {boolean} Should the play button be displayed?\n   */\n  _noPlayButton(noHeight, isYoutube) {\n    return noHeight || isYoutube;\n  }\n\n  /**\n   * returns whether or not the fullscreen mode should be disabled\n   *\n   * @param {boolean} Is fullscreen mode set to disabled?\n   * @returns {boolean} Should fullscreen disabled?\n   */\n  _getFullscreenButton(disableFullscreen) {\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) ||\n      disableFullscreen\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * returns true if player is xs or sm and needs to use compact controls\n   *\n   * @param {string} the size of the player: `xs`,`sm`,`md`,`lg`, or `xl`\n   * @returns {boolean} Should the player use compact controls?\n   */\n  _getCompactControls(responsiveSize) {\n    return (\n      this._testAttribute(responsiveSize, \"xs\") ||\n      this._testAttribute(responsiveSize, \"sm\")\n    );\n  }\n\n  /**\n   * Show custom CC (for audio and YouTube)?\n   *\n   * @param {boolean} Is the media from YouTube?\n   * @param {boolean} Is the media audio only?\n   * @param {boolean} Does the media have CC tracks?\n   * @param {boolean} Are the CC turned on?\n   * @returns {boolean} Should the player show custom CC?\n   */\n  _showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc) {\n    return this._hasCustomCaptions(isYoutube, audioOnly, hasCaptions) && cc;\n  }\n\n  /**\n   * Does the player have custom CC tracks?\n   *\n   * @param {boolean} Is the media from YouTube?\n   * @param {boolean} Is the media audio only?\n   * @param {boolean} Does the media have CC tracks?\n   * @returns {boolean} Does the player have custom CC?\n   */\n  _hasCustomCaptions(isYoutube, audioOnly, hasCaptions) {\n    return (isYoutube || audioOnly) && hasCaptions;\n  }\n\n  /**\n   * Determines if video and transcript are in a flex layout\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the transcript hidden?\n   * @param {boolean} Does the media no video or thumbnail image?\n   * @param {boolean} Is the layout stacked?\n   * @returns {boolean} Is the video in flex layout mode?\n   */\n  _isFlexLayout(standAlone, hideTranscript, noHeight, stackedLayout) {\n    return !standAlone && !hideTranscript && !noHeight && !stackedLayout;\n  }\n}\nwindow.customElements.define(\n  A11yMediaPlayerProperties.tag,\n  A11yMediaPlayerProperties\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerProperties } from \"./a11y-media-player-properties.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n\nexport { A11yMediaButton };\n/**\n * `a11y-media-button`\n * `A button used in a11y-media-controls.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends A11yMediaPlayerProperties\n * @customElement\n * @polymer\n */\nclass A11yMediaButton extends A11yMediaPlayerProperties {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it toggled on?\n       */\n      toggle: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-button\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerProperties];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          margin: 0;\n          padding: 0;\n        }\n        :host #button {\n          margin: 0;\n          padding: 8px;\n          line-height: 1;\n          border: none;\n          transition: color 0.25s;\n          color: var(--a11y-media-button-color);\n          background-color: var(--a11y-media-button-bg-color);\n        }\n        :host([toggle]) #button {\n          color: var(--a11y-media-button-toggle-color);\n          background-color: var(--a11y-media-button-toggle-bg-color);\n        }\n        :host([toggle]:active) #button,\n        :host([toggle]:focus) #button,\n        :host([toggle]:hover) #button,\n        :host(:active) #button,\n        :host(:focus) #button,\n        :host(:hover) #button {\n          cursor: pointer;\n          color: var(--a11y-media-button-hover-color);\n          background-color: var(--a11y-media-button-hover-bg-color);\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host paper-tooltip {\n          z-index: 100;\n        }\n        iron-icon {\n          display: inline-block;\n        }\n      </style>\n      <button\n        id=\"button\"\n        aria-label$=\"[[label]]\"\n        aria-pressed$=\"[[toggle]]\"\n        aria-role=\"button\"\n        controls=\"[[controls]]\"\n        disabled$=\"[[disabled]]\"\n        on-tap=\"_buttonTap\"\n        tabindex=\"0\"\n        toggle$=\"[[toggle]]\"\n      >\n        <iron-icon icon=\"[[icon]]\"></iron-icon>\n      </button>\n      <paper-tooltip for=\"button\">[[label]]</paper-tooltip>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    this.__target = this.$.button;\n  }\n\n  /**\n   * lets player know this button was clicked\n   */\n  _buttonTap() {\n    this.dispatchEvent(new CustomEvent(\"tap\", { detail: this }));\n  }\n}\nwindow.customElements.define(A11yMediaButton.tag, A11yMediaButton);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerProperties } from \"./a11y-media-player-properties.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@lrnwebcomponents/dropdown-select/dropdown-select.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./a11y-media-button.js\";\n\nexport { A11yMediaControls };\n/**\n * `a11y-media-controls`\n * `The controls bar for the a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-button \n  accent-color$=\"[[accentColor]]\"             // Optional accent color for controls, \n                                              // using the following materialize colors: \n                                              // red, pink, purple, deep-purple, indigo, blue, \n                                              // light blue, cyan, teal, green, light green, lime, \n                                              // yellow, amber, orange, deep-orange, and brown. \n                                              // Default is null. \n  allow-fullscreen$=\"[[allowFullscreen]]\"     // Allow fullscreen mode?\n  audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n  autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n  cc$=\"[[cc]]\"                                // Are closed captions toggled?\n  dark$=\"[[dark]]\"                            // Is the color scheme dark? Default is light.    \n  disableFullscreen$=\"[[disableFullscreen]]\"  // Is full screen mode disabled?\n  fullscreen$=\"[[fullscreen]]\"                // Is full screen mode toggled on?\n  hide-elapsed-time$=\"[[hideElapsedTime]]\"    // Is elapsed time hidden?\n  loop$=\"[[loop]]\"                            // Is video on a loop?\n  microcopy$=\"[[microcopy]]\"                  // Optional customization or text and icons\n  muted$=\"[[muted]]\"                          // Is video muted?\n  responsive-size$=\"[[responsiveSize]]\"       // The size of the player determines how controls are displayed\n  volume$=\"[[volume]]\">                       // The initial volume of the video\n</a11y-media-button>```\n *\n * @extends A11yMediaPlayerProperties\n * @customElement\n * @polymer\n */\nclass A11yMediaControls extends A11yMediaPlayerProperties {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * play/pause button\n       */\n      playPause: {\n        type: Object,\n        computed:\n          \"_getPlayPause(playing,pauseLabel,pauseIcon,playLabel,playIcon)\"\n      },\n      /**\n       * mute/unmute button\n       */\n      muteUnmute: {\n        type: Object,\n        computed:\n          \"_getMuteUnmute(muted,muteLabel,muteIcon,unmuteLabel,unmuteIcon)\"\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-controls\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerProperties];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          display: block;\n          width: 100%;\n          max-width: 100%;\n          position: relative;\n          height: 44px;\n          color: var(--a11y-media-color);\n          background-color: var(--a11y-media-bg-color);\n          --paper-listbox-background-color: var(--a11y-media-controls-bg-color);\n          --paper-listbox-color: var(--a11y-media-controls-color);\n          --paper-listbox: {\n            padding: 0;\n          };\n          --paper-menu-button-dropdown-background: var(--a11y-media-controls-bg-color);\n          --paper-menu-button: {\n            background-color: var(--a11y-media-controls-bg-color);\n            color: var(--a11y-media-controls-color);\n          };\n          --paper-menu-button-dropdown: {\n            background-color: var(--a11y-media-controls-bg-color);\n            color: var(--a11y-media-controls-color);\n            margin-top: 0 !important;\n            margin-bottom: 0 !important;\n          };\n          --paper-item-selected: {\n            color: var(--a11y-media-controls-hover-color);\n          };\n          --paper-item-focused: {\n            color: var(--a11y-media-controls-hover-color);\n          };\n          --primary-text-color: var(--a11y-media-controls-color);\n        }\n        :host > #controls-left {\n          position: absolute;\n          left: 0;\n          min-width: 200px;\n        }\n        :host > #controls-right {\n          position: absolute;\n          right: 0;\n          top: -2px;\n        }\n        :host paper-menu-button,\n        :host dropdown-select {\n          padding: 0;\n        }\n        :host paper-icon-button {\n          background-color: var(--a11y-media-controls-bg-color);\n          color: var(--a11y-media-controls-color);\n        }\n        :host paper-icon-button:active,\n        :host paper-icon-button:focus,\n        :host paper-icon-button:hover {\n          background-color: var(--a11y-media-controls-bg-color);\n          color: var(--a11y-media-controls-color);\n        }\n        :host paper-item {\n          min-height: 40;\n        }\n        :host paper-slider {\n          @apply --a11y-media-slider;\n        }\n        :host .play-status,\n        :host paper-icon-button {\n          border: none;\n          position: relative;\n        }\n        :host .play-status {\n          font-size: 85%;\n        }\n        :host .play-status.control-bar {\n          padding: 8px 13px 8px;\n        }\n        :host([hide-play-status]) .play-status {\n          display: none;\n        }\n        :host(:not([has-captions])) .captions {\n          display: none;\n        }\n        :host(:not([has-transcript])) .transcript,\n        :host(.stand-alone) .transcript {\n          display: none;\n        }\n        :host .setting {\n          display: flex;\n          justify-content: space-between;\n          width: 100%;\n        }\n        :host .setting-text {\n          min-width: 100px;\n        }\n        :host .setting-control {\n          max-width: 100px;\n        }\n        :host .setting-slider {\n          width: 130px;\n          margin-left: -15px;\n          margin-right: -15px;\n          @apply --a11y-media-slider;\n        }\n        :host #speed {\n          --paper-slider-knob-start-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-start-border-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n        }\n        :host #showvolume {\n          display: inline;\n          position: relative;\n        }\n        :host #volume {\n          z-index: 1;\n          position: absolute;\n          left: 30px;\n          top: -5px;\n          width: 0;\n          overflow: hidden;\n          transition: width 0.5s;\n          z-index: 3;\n          background-color: var(--a11y-media-bg-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n\n        }\n        :host #volume:active,\n        :host #volume:focus,\n        :host #volume:hover,\n        :host #volume.focus,\n        :host #showvolume:active #volume,\n        :host #showvolume:focus #volume,\n        :host #showvolume:hover #volume {\n          overflow: visible;\n          width: 100px;\n        }\n        :host([responsive-size=\"xs\"]) #volume:active,\n        :host([responsive-size=\"xs\"]) #volume:focus,\n        :host([responsive-size=\"xs\"]) #volume:hover,\n        :host([responsive-size=\"xs\"]) #volume.focus,\n        :host([responsive-size=\"xs\"]) #showvolume:active #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:focus #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:hover #volume {\n          top: -35px\n          border-radius: 4px;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n      </style>\n      <div id=\"controls-left\">\n        <a11y-media-button\n          icon=\"[[playPause.icon]]\"\n          label=\"[[playPause.label]]\"\n          on-tap=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          disabled$=\"[[compactControls]]\"\n          hidden$=\"[[compactControls]]\"\n          icon=\"[[rewindIcon]]\"\n          label=\"[[rewindLabel]]\"\n          on-tap=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          disabled$=\"[[compactControls]]\"\n          hidden$=\"[[compactControls]]\"\n          icon=\"[[forwardIcon]]\"\n          label=\"[[forwardLabel]]\"\n          on-tap=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          disabled$=\"[[compactControls]]\"\n          hidden$=\"[[compactControls]]\"\n          icon=\"[[restartIcon]]\"\n          label=\"[[restartLabel]]\"\n          on-tap=\"_onButtonTap\"\n        ></a11y-media-button>\n        <div id=\"showvolume\">\n          <a11y-media-button\n            id=\"mute\"\n            icon=\"[[muteUnmute.icon]]\"\n            label=\"[[muteUnmute.label]]\"\n            on-tap=\"_onButtonTap\"\n          ></a11y-media-button>\n          <span id=\"volume-slider-label\" class=\"sr-only\">[[volumeLabel]]</span>\n          <paper-slider\n            aria-labelledby=\"volume-slider-label\"\n            id=\"volume\"\n            min=\"0\"\n            max=\"100\"\n            on-change=\"_onSettingsChanged\"\n            pin=\"\"\n            step=\"10\"\n            value$=\"[[volume]]\"\n          ></paper-slider>\n        </div>\n        <span class=\"play-status control-bar\" hidden$=\"[[compactControls]]\">\n          <span id=\"statbar\"></span>\n        </span>\n      </div>\n      <div id=\"controls-right\">\n        <a11y-media-button\n          class=\"captions\"\n          hidden=\"[[!hasCaptions]]\"\n          icon=\"[[captionsIcon]]\"\n          label=\"[[captionsLabel]]\"\n          on-tap=\"_onButtonTap\"\n          toggle=\"[[cc]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          class=\"transcript\"\n          controls=\"transcript\"\n          hidden$=\"[[_showTranscriptButton(compactControls,standAlone)]]\"\n          disabled$=\"[[_showTranscriptButton(compactControls,standAlone)]]\"\n          icon=\"[[transcriptIcon]]\"\n          label=\"[[transcriptLabel]]\"\n          on-tap=\"_onButtonTap\"\n          toggle=\"[[!hideTranscript]]\"\n        >\n        </a11y-media-button>\n        <paper-menu-button\n          id=\"settings\"\n          allow-outside-scroll=\"\"\n          horizontal-align=\"right\"\n          ignore-select=\"\"\n          on-change=\"_onSettingsChanged\"\n          on-iron-activate=\"_handleSettingsActivate\"\n          on-iron-select=\"_handleSettingsSelect\"\n          vertical-align=\"bottom\"\n        >\n          <paper-icon-button\n            icon$=\"[[settingsIcon]]\"\n            slot=\"dropdown-trigger\"\n            alt=\"[[settingsLabel]]\"\n          ></paper-icon-button>\n          <paper-listbox id=\"settingslist\" slot=\"dropdown-content\">\n            <paper-item class=\"captions\">\n              <div class=\"setting\">\n                <div class=\"setting-text\">[[captionsMenuLabel]]</div>\n                <div class=\"setting-control\">\n                  <dropdown-select\n                    id=\"tracks\"\n                    no-label-float=\"\"\n                    on-change=\"_handleTrackChange\"\n                    value=\"\"\n                  >\n                    <paper-item value=\"\">[[captionsMenuOff]]</paper-item>\n                    <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"option\">\n                      <paper-item value$=\"{{option.value}}\"\n                        >{{option.text}}</paper-item\n                      >\n                    </template>\n                  </dropdown-select>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item hidden$=\"[[!compactControls]]\" class=\"transcript\">\n              <div class=\"setting\">\n                <div id=\"transcript-label\" class=\"setting-text\">\n                  [[transcriptMenuLabel]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"transcript-toggle\"\n                    aria-labelledby=\"transcript-label\"\n                    checked$=\"[[!hideTranscript]]\"\n                    controls=\"transcript\"\n                    disabled$=\"[[!compactControls]]\"\n                  >\n                  </paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"speed-label\" class=\"setting-text\">[[speedLabel]]</div>\n                <div class=\"setting-control\">\n                  <paper-slider\n                    id=\"speed\"\n                    aria-labelledby=\"speed-label\"\n                    class=\"setting-slider\"\n                    label=\"tracks\"\n                    min=\"0.5\"\n                    max=\"4\"\n                    pin=\"\"\n                    step=\"0.5\"\n                    tab-index=\"-1\"\n                    value$=\"[[playbackRate]]\"\n                  ></paper-slider>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"loop-label\" class=\"setting-text\">[[loopLabel]]</div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"loop\"\n                    aria-labelledby=\"loop-label\"\n                    checked$=\"[[loop]]\"\n                  ></paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item hidden$=\"[[!compactControls]]\">\n              <span class=\"play-status settings-menu\">\n                <span id=\"statmenu\"></span>\n              </span>\n            </paper-item>\n          </paper-listbox>\n        </paper-menu-button>\n        <paper-tooltip for=\"settings\">[[settingsLabel]]</paper-tooltip>\n        <template is=\"dom-if\" if=\"[[fullscreenButton]]\">\n          <template is=\"dom-if\" if=\"[[!noHeight]]\">\n            <a11y-media-button\n              icon=\"[[fullscreenIcon]]\"\n              label=\"[[fullscreenLabel]]\"\n              on-tap=\"_onButtonTap\"\n              toggle=\"[[fullscreen]]\"\n              step=\"1\"\n            >\n            </a11y-media-button>\n          </template>\n        </template>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root._addResponsiveUtility({\n      element: root,\n      attribute: \"responsive-size\",\n      relativeToParent: true,\n      sm: 300,\n      md: 600,\n      lg: 900,\n      xl: 1200\n    });\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    // when the mute button is in focus,\n    // add focus class to make the volume slider appear\n    root.$.mute.$.button.onfocus = function() {\n      root.$.volume.classList.add(\"focus\");\n    };\n    // when the mute button is blurred,\n    // remove focus class to make the volume slider disappear\n    root.$.mute.$.button.onblur = function() {\n      root.$.volume.classList.remove(\"focus\");\n    };\n  }\n\n  /**\n   * updates the play status of the media\n   *\n   * @param {string} the status, eg., `Loading...` or `00:02:01/00:11:43`\n   */\n  setStatus(status) {\n    this.$.statbar.innerText = status;\n    this.$.statmenu.innerText = status;\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {object} the tracks of the media\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", []);\n    this.set(\"tracks\", tracks.slice(0));\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media playing?\n   * @param {string} label if button pauses media\n   * @param {string} icon if button pauses media\n   * @param {string} label if button plays media\n   * @param {string} icon if button plays media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"Pause\", \"icon\": \"av:pause\"}`\n   */\n  _getPlayPause(playing, pauseLabel, pauseIcon, playLabel, playIcon) {\n    return playing\n      ? { label: pauseLabel, icon: pauseIcon }\n      : { label: playLabel, icon: playIcon };\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media muted?\n   * @param {string} label if button mutes media\n   * @param {string} icon if button mutes media\n   * @param {string} label if button unmutes media\n   * @param {string} icon if button unmutes media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"mute\", \"icon\": \"av:volume-off\"}`\n   */\n  _getMuteUnmute(muted, muteLabel, muteIcon, unmuteLabel, unmuteIcon) {\n    return muted\n      ? { label: unmuteLabel, icon: unmuteIcon }\n      : { label: muteLabel, icon: muteIcon };\n  }\n\n  /**\n   * handles when the tracks dropdown selection changes\n   * (when the tracks dropdown-select changes, update track and CC button)\n   */\n  _handleTrackChange(e) {\n    let root = this;\n    if (root.__selectedTrack !== null) {\n      if (e.detail.value !== \"\") {\n        root.dispatchEvent(\n          new CustomEvent(\"select-track\", {\n            detail: { control: root, value: e.detail.value }\n          })\n        );\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: true }\n          })\n        );\n      } else {\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: false }\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsSelect(e) {\n    //e.preventDefault();\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsActivate(e) {\n    //if (e.target == this.$.settingslist) e.preventDefault();\n  }\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onButtonTap(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.detail })\n    );\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onSettingsChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.target })\n    );\n  }\n  /**\n   * Determines if the transcript button should be shown.\n   *\n   * @param {boolean} Is the player too small to fit the extra controls?\n   * @param {boolean} Is the player in stand-alone mode?\n   * @returns {boolean} Show the transcript button?\n   */\n  _showTranscriptButton(compactControls, standAlone) {\n    return compactControls || standAlone;\n  }\n}\nwindow.customElements.define(A11yMediaControls.tag, A11yMediaControls);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerProperties } from \"./a11y-media-player-properties.js\";\n\nexport { A11yMediaLoader };\n/**\n * `a11y-media-loader`\n * `Loads HTML5 audio or video. `\n *\n * @microcopy - language worth noting:\n```<a11y-media-loader \n    autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n    cc$=\"[[cc]]\"                                // Are closed captions toggled? \n    height$=\"[[height]]\"                        // The height of player\n    lang$=\"[[lang]]\"                            // The language of the media\n    loop$=\"[[loop]]\"                            // Is video on a loop?\n    muted$=\"[[muted]]\"                          // Is video muted?\n    playback-rate$=\"[[playbackRate]]\"           // The playback rate of the video\n    volume$=\"[[volume]]\"                        // The initial volume of the video\n    width$=\"[[width]]\">                         // The width of player\n                                                // video source and tracks \n    <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n    <source src=\"/path/to/video.webm\" type=\"video/webm\">\n    <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n    <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n    <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n  </a11y-media-loader>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaLoader extends A11yMediaPlayerProperties {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it toggled on?\n       */\n      toggle: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-loader\";\n  }\n\n  //get player-specific behaviors\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          height: 100%;\n        }\n        #video {\n          width: 100%;\n          max-width: 100%;\n          max-height: 80vh;\n        }\n      </style>\n      <video\n        id=\"video\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[audioOnly]]\"\n        lang$=\"[[lang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        src$=\"[[manifest]]\"\n        preload=\"metadata\"\n      >\n        HTML5 video not supported\n      </video>\n      <audio\n        id=\"audio\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[!audioOnly]]\"\n        lang$=\"[[lang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        src$=\"[[manifest]]\"\n        preload=\"metadata\"\n      >\n        HTML5 audio not supported\n      </audio>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    root.media =\n      root.$.video !== undefined && !root.audioOnly\n        ? root.$.video\n        : root.$.audio;\n  }\n\n  /**\n   * handles the loaded metadata\n   */\n  _handleMetadata() {\n    let root = this;\n    root.duration = root.media.duration > 0 ? root.media.duration : 0;\n    root.tracks = [];\n    root.volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.seekable = root.media.seekable;\n    root.setVolume(root.volume);\n    root.setMute(root.muted);\n    root.setCC(root.cc);\n    root.setLoop(root.loop);\n    root.setPlaybackRate(root.playbackRate);\n\n    // adjusts aspect ratio\n    root.aspectRatio = root.media.videoWidth / root.media.videoHeight;\n    root.dispatchEvent(new CustomEvent(\"media-loaded\", { detail: root }));\n  }\n\n  /**\n   * gets the buffered time\n   */\n  getBufferedTime() {\n    return this.media.buffered.length > 0\n      ? this.media.buffered.end(0)\n      : this.getCurrentTime();\n  }\n\n  /**\n   * gets the current time\n   *\n   * @returns {float} the elapsed time, in seconds\n   */\n  getCurrentTime() {\n    return this.media.currentTime;\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    this.media.play();\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    this.media.pause();\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {float} the index of the track\n   */\n  selectTrack(index) {\n    this.selectedTrack = this.media.textTracks[index];\n    for (let i = 0; i < this.media.textTracks.length; i++) {\n      if (parseInt(index) === i) {\n        this.media.textTracks[i].mode = \"showing\";\n      } else if (this.media.textTracks[i] !== null) {\n        this.media.textTracks[i].mode = \"hidden\";\n      }\n    }\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks to a specific time\n   */\n  seek(time) {\n    this.media.currentTime = time;\n  }\n\n  /**\n   * sets captions\n   *\n   * @param {boolean} Turn CC on? `true` is on; `false` or `null` is off.\n   *\n   */\n  setCC(mode) {\n    this.media.cc = mode === true;\n    if (this.selectedTrack !== undefined && mode == true) {\n      this.selectedTrack.mode = \"showing\";\n      this.$.video.textTracks.value = this.selectedTrackId;\n    } else if (\n      this.selectedTrack !== undefined &&\n      this.selectedTrack !== null\n    ) {\n      this.selectedTrack.mode = \"hidden\";\n      this.$.video.textTracks.value = \"\";\n    }\n  }\n\n  /**\n   * sets volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.media.volume = value / 100;\n  }\n\n  /**\n   * sets speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    this.media.playbackRate = value !== null ? value : 1;\n  }\n\n  /**\n   * sets looping\n   *\n   * @param {boolean} Turn looping on? `true` is on; `false` or `null` is off.\n   */\n  setLoop(mode) {\n    this.media.loop = mode === true;\n  }\n\n  /**\n   * sets mute\n   *\n   * @param {boolean} Turn mute on? `true` is on; `false` or `null` is off.\n   */\n  setMute(mode) {\n    this.media.muted = mode;\n  }\n}\nwindow.customElements.define(A11yMediaLoader.tag, A11yMediaLoader);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerProperties } from \"./a11y-media-player-properties.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n\nexport { A11yMediaPlayButton };\n/**\n * `a11y-media-play-button`\n * `A giant play button that overlays the media in a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-play-button\n  playing$=\"[[__playing]]\"            // Is the media currently playing?\n  thumbnail-css$=\"[[thumbnailCSS]]\"   // Optional source for a thumbnail image\n</a11y-media-play-button>\n\nCustom styles:\n--a11y-play-button-bg-color: overlay background color, default is #000000\n--a11y-play-button-focus-bg-color: overlay background color, default is --a11y-play-button-bg-color```\n *\n * @extends A11yMediaPlayerProperties\n * @customElement\n * @polymer\n */\nclass A11yMediaPlayButton extends A11yMediaPlayerProperties {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * label for play button on player controls\n       */\n      label: {\n        type: String,\n        computed: \"_getPlaying(playing,pauseLabel,playLabel)\"\n      },\n      /**\n       * label when playing\n       */\n      pauseLabel: {\n        type: String,\n        value: \"play\"\n      },\n      /**\n       * label when paused\n       */\n      playLabel: {\n        type: String,\n        value: \"play\"\n      },\n      /**\n       * is button disabled\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * is media playing\n       */\n      playing: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-play-button\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerProperties];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          z-index: 2;\n          opacity: 1;\n          transition: opacity 0.5s;\n          position: absolute;\n          height: 100%;\n        }\n        :host([disabled]:not([audio-only])),\n        :host([playing]:not([audio-only])) {\n          opacity: 0;\n        }\n        :host,\n        :host #thumbnail,\n        :host #background,\n        :host #button {\n          width: 100%;\n          max-height: 80vh;\n          top: 0;\n          left: 0;\n          opacity: 1;\n          transition: opacity 0.5s;\n        }\n        :host #thumbnail,\n        :host #background,\n        :host #button {\n          position: absolute;\n          height: 100%;\n          padding: 0;\n          margin: 0;\n          border: none;\n        }\n        :host([audio-only][thumbnail-src][playing]) #button > *:not(#thumbnail),\n        :host([audio-only][thumbnail-src][disabled])\n          #button\n          > *:not(#thumbnail) {\n          opacity: 0;\n        }\n        :host #thumbnail {\n          height: auto;\n          overflow: hidden;\n        }\n        :host #button {\n          overflow: hidden;\n          background: transparent;\n        }\n        :host #button:hover {\n          cursor: pointer;\n        }\n        :host #background {\n          opacity: 0.3;\n          background: var(--a11y-play-button-bg-color);\n        }\n        :host #button:focus #background,\n        :host #button:hover #background {\n          background: var(--a11y-play-button-focus-bg-color);\n          opacity: 0.1;\n        }\n        :host #arrow {\n          stroke: #ffffff;\n          fill: #000000;\n        }\n        :host #text {\n          fill: #ffffff;\n        }\n        :host .sr-only {\n          font-size: 0;\n        }\n        @media print {\n          :host(:not([thumbnail-src])),\n          :host #background,\n          :host #svg {\n            display: none;\n          }\n        }\n      </style>\n      <button\n        id=\"button\"\n        aria-pressed$=\"[[playing]]\"\n        aria-hidden$=\"[[disabled]]\"\n        tabindex=\"0\"\n        disabled$=\"[[disabled]]\"\n        controls=\"video\"\n        on-tap=\"_buttonTap\"\n        title$=\"[[label]]\"\n      >\n        <div id=\"background\"></div>\n        <svg\n          id=\"svg\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 200 200\"\n          width=\"30%\"\n          height=\"30%\"\n          opacity=\"0.7\"\n        >\n          <g>\n            <polygon\n              id=\"arrow\"\n              points=\"30,20 30,180 170,100\"\n              fill=\"#000000\"\n              stroke=\"#ffffff\"\n              stroke-width=\"15px\"\n            ></polygon>\n            <text\n              id=\"text\"\n              class=\"sr-only\"\n              x=\"50\"\n              y=\"115\"\n              fill=\"#ffffff\"\n              font-size=\"30px\"\n            >\n              [[label]]\n            </text>\n          </g>\n        </svg>\n      </button>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.$.text.innerText = this.playLabel;\n    if (this.audioOnly) {\n      let root = this,\n        img = this.$.thumbnail,\n        check = setInterval(function() {\n          if (img !== null && img !== undefined && img.naturalWidth) {\n            clearInterval(check);\n            let aspect = (img.naturalHeight / img.naturalWidth) * 100;\n            root.style.height = aspect + \"%\";\n            root.dispatchEvent(\n              new CustomEvent(\"thumbnail-aspect\", { detail: aspect })\n            );\n          }\n        }, 10);\n    }\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    this.__target = this.$.button;\n  }\n\n  /**\n   * get label based on whether or not the video is playing\n   *\n   * @param {boolean} Is the media playing?\n   * @param {string} label if button pauses media\n   * @param {string} label if button plays media\n   */\n  _getPlaying(playing, pauseLabel, playLabel) {\n    return playing ? pauseLabel : playLabel;\n  }\n\n  /**\n   * handle button tap\n   */\n  _buttonTap() {\n    let root = this;\n    root.dispatchEvent(new CustomEvent(\"controls-change\", { detail: this }));\n  }\n}\nwindow.customElements.define(A11yMediaPlayButton.tag, A11yMediaPlayButton);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerProperties } from \"./a11y-media-player-properties.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@lrnwebcomponents/simple-search/lib/simple-search-content.js\";\n\nexport { A11yMediaTranscriptCue };\n/**\n * `a11y-media-transcript-cue`\n * `A single cue in a11y-media-transcriptas static text or as an button that controls media.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-cue \n  active-cues$=\"[[activeCues]]\"                   // An array of the currently active cues\n  cue$=\"[[cue]]\"                                  // An array of cue data\n  order$=\"[[cue.order]]\"                          // The index of the current cue\n  disable-interactive$=\"[[disableInteractive]]\"   // Is cue interactive? \n  controls$=\"[[mediaId]]\"                         // The id of the a11y-media-player element\n  hide-timestamps$=\"[[hideTimestamps]]\" >         // Hide cue timestamp?\n</a11y-media-transcript-cue>```\n * \n * Custom styles:\n```--a11y-media-transcript-bg-color: background color of the transcript, default is #ffffff\n--a11y-media-transcript-text-color: color of the transcript text, default is #000000```\n *   \n * Custom styles for focused cue:\n```--a11y-media-transcript-focused-cue-text: color of the focused cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-focused-cue-bg: background color of the focused cue, default is --a11y-media-transcript-bg-color\n--a11y-media-transcript-focused-cue-weight: font-weight of the focused cue, default is bold```\n *   \n * Custom styles for active cue:\n```--a11y-media-transcript-active-cue-text: color of the active cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-active-cue-bg: background color of the active cue, default is #ccfffd\n--a11y-media-transcript-active-cue-weight: font-weight of the active cue, default is normal```\n *\n * @extends A11yMediaPlayerProperties\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptCue extends A11yMediaPlayerProperties {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is cue active\n       */\n      active: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: \"_getActiveCue(cue,activeCues)\",\n        notify: true,\n        reflectToAttribute: true\n      },\n      /**\n       * array of currently active cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        notify: true\n      },\n      /**\n       * array of cue data\n       */\n      cue: {\n        type: Array,\n        value: null\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * parsed cue text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript-cue\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerProperties];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          cursor: default;\n          display: table-row;\n          width: 100%;\n          color: var(--a11y-media-transcript-color);\n          background-color: var(--a11y-media-transcript-bg-color);\n          transition: color 0.25s, background-color 0.25s;\n        }\n        :host([hide-timestamps]) {\n          display: inline;\n        }\n        :host(:not([active]):not([disabled]):active),\n        :host(:not([active]):not([disabled]):focus),\n        :host(:not([active]):not([disabled]):hover) {\n          cursor: pointer;\n          color: var(--a11y-media-transcript-focused-cue-color);\n          background-color: var(--a11y-media-transcript-focused-cue-bg-color);\n          outline: 1px dotted var(--a11y-media-transcript-focused-cue-color);\n          @apply --a11y-media-transcript-focused-cue;\n        }\n        :host([active]) {\n          color: var(--a11y-media-transcript-active-cue-color);\n          background-color: var(--a11y-media-transcript-active-cue-bg-color);\n          @apply --a11y-media-transcript-active-cue;\n        }\n        :host #text {\n          display: table-cell;\n          width: 100%;\n          line-height: 200%;\n        }\n        :host([hide-timestamps]) #text {\n          display: inline;\n        }\n        :host #time {\n          display: table-cell;\n          font-size: 80%;\n          padding: 0 16px 0 0;\n          white-space: nowrap;\n          font-family: monospace;\n        }\n        :host([hide-timestamps]) #time {\n          display: none;\n        }\n        :host simple-search-content {\n          --simple-search-match-text-color: var(\n            --a11y-media-transcript-match-color\n          );\n          --simple-search-match-bg-color: var(\n            --a11y-media-transcript-match-bg-color\n          );\n          --simple-search-match-border-color: var(\n            --a11y-media-transcript-match-border-color\n          );\n          --simple-search-match: {\n            border: none;\n            border-radius: 4px;\n            font-weight: normal;\n          }\n        }\n        @media print {\n          :host,\n          :host([active]),\n          :host(:not([active]):not([disabled]):active),\n          :host(:not([active]):not([disabled]):focus),\n          :host(:not([active]):not([disabled]):hover) {\n            color: #000000;\n            background-color: #ffffff;\n          }\n        }\n      </style>\n      <span id=\"time\">[[cue.start]] - [[cue.end]]</span>\n      <span id=\"text\">\n        <simple-search-content id=\"content\" content=\"[[cue.text]]\"\n          >[[cue.text]]</simple-search-content\n        >\n      </span>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      search = root.search;\n    if (!root.disabled) {\n      root.__target = this;\n      root.setAttribute(\"aria-role\", \"button\");\n      root.setAttribute(\"controls\", this.mediaId);\n    }\n    if (\n      !root.disableSearch &&\n      root.search !== undefined &&\n      root.search !== null\n    ) {\n      root.$.content.enableSearch(search);\n    }\n    root.addEventListener(\"click\", root._handleTap);\n  }\n\n  /**\n   * gets the active cue for styling\n   *\n   * @param {object} the current cue object\n   * @param {array} an array of all active cues\n   * @returns {boolean} Is the cue active?\n   */\n  _getActiveCue(cue, activeCues) {\n    return activeCues !== null && activeCues.includes(cue.order.toString())\n      ? true\n      : false;\n  }\n\n  /**\n   * handles tap\n   */\n  _handleTap(e) {\n    let root = this;\n    this.dispatchEvent(new CustomEvent(\"tap\", { detail: root.cue.seek }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptCue.tag,\n  A11yMediaTranscriptCue\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerProperties } from \"./a11y-media-player-properties.js\";\nimport \"./a11y-media-transcript-cue.js\";\n\nexport { A11yMediaTranscript };\n/**\n * `a11y-media-transcript`\n * `A transcript element to pair with a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-interactive$=\"[[disableInteractive]]\"   // Disable interactive transcript cues?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n  hide-timestamps$=\"[[hideTimestamps]]\"           // Hide cue timestamps?\n  media-id=\"\"                                     // The id of the player\n  selected-transcript$=\"[[selectedTranscript]]\">  // The index of the current track\n</a11y-media-transcript>```\n *\n * @extends A11yMediaPlayerProperties\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscript extends A11yMediaPlayerProperties {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * array of cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        reflectToAttribute: true,\n        notify: true\n      },\n      /**\n       * Language\n       */\n      lang: {\n        type: String,\n        value: \"en\",\n        reflectToAttribute: true\n      },\n      /**\n       * the id of media\n       */\n      mediaId: {\n        type: String,\n        value: null\n      },\n      /**\n       * tabindex of cues\n       */\n      tabIndex: {\n        type: Number,\n        computed: \"_getTabIndex(disableInteractive)\"\n      },\n      /**\n       * tabindex of cues\n       */\n      role: {\n        type: Number,\n        computed: \"_getRole(disableInteractive)\"\n      },\n      /**\n       * selected transcript track id\n       */\n      selectedTranscript: {\n        type: String,\n        value: \"0\"\n      },\n      /**\n       * array of cues\n       */\n      tracks: {\n        type: Array,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerProperties];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          display: block;\n          padding: 15px;\n          color: var(--a11y-media-transcript-color);\n          background-color: var(--a11y-media-transcript-bg-color);\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        :host #inner {\n          width: 100%;\n          display: none;\n        }\n        :host #inner[active] {\n          display: table;\n          width: 100%;\n        }\n        :host #inner[active][hideTimestamps] {\n          display: block;\n        }\n        :host .sr-only:not(:focus) {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        @media print {\n          :host {\n            padding: 0 15px 5px;\n            color: #000;\n            background-color: #ffffff;\n            border-top: 1px solid #aaa;\n          }\n        }\n      </style>\n      <a id=\"transcript-desc\" href=\"#bottom\" class=\"sr-only\"\n        >[[skipTranscriptLink]]</a\n      >\n      <template id=\"tracks\" is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n        <div\n          id=\"inner\"\n          class=\"transcript-from-track\"\n          lang=\"{{track.language}}\"\n          active$=\"[[track.active]]\"\n        >\n          <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n            <a11y-media-transcript-cue\n              accent-color$=\"[[accentColor]]\"\n              active-cues$=\"[[activeCues]]\"\n              controls$=\"[[mediaId]]\"\n              cue$=\"{{cue}}\"\n              disabled$=\"[[disableInteractive]]\"\n              disable-search$=\"[[disableSearch]]\"\n              hide-timestamps$=\"[[hideTimestamps]]\"\n              on-tap=\"_handleCueSeek\"\n              order$=\"{{cue.order}}\"\n              role=\"button\"\n              search=\"[[search]]\"\n              tabindex=\"0\"\n            >\n            </a11y-media-transcript-cue>\n          </template>\n        </div>\n      </template>\n      <div id=\"bottom\" class=\"sr-only\"></div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {object} the player\n   */\n  setMedia(player) {\n    this.media = player;\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {boolean} Hide transcript? `true` is hidden, `false` is visible, and `null` toggles based on current state.\n   */\n  toggleHidden(mode) {\n    let root = this,\n      inner = document.getElementById(\"inner\"),\n      active =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue[active]\")\n          : null,\n      first =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue\")\n          : null;\n    mode = mode !== undefined ? mode : this.hidden;\n    this.hidden = mode;\n  }\n\n  /**\n   * prints the active transcript\n   *\n   * @param {string} the title of the media\n   */\n  print(mediaTitle) {\n    let root = this,\n      track = root.shadowRoot.querySelector(\"#inner[active]\").cloneNode(true),\n      css = html`\n        <style>\n          a11y-media-transcript-cue {\n            display: table-row;\n            background-color: #fff;\n            color: #000;\n          }\n          a11y-media-transcript-cue[hide-timestamps],\n          a11y-media-transcript-cue[hide-timestamps] #text {\n            display: inline;\n          }\n          a11y-media-transcript-cue #text {\n            display: table-cell;\n            line-height: 200%;\n          }\n          a11y-media-transcript-cue #time {\n            display: table-cell;\n            font-size: 80%;\n            padding: 0 16px;\n            white-space: nowrap;\n            font-family: monospace;\n          }\n          a11y-media-transcript-cue[hide-timestamps] #time {\n            display: none;\n          }\n          a11y-media-transcript-cue [matched] {\n            background-color: #fff;\n            color: #eee;\n            padding: 3px 4px;\n            border-radius: 3px;\n          }\n        </style>\n      `,\n      h1 = html`\n        <h1>Transcript</h1>\n      `;\n    if (mediaTitle !== undefined) h1.innerHTML = mediaTitle;\n    if ((track !== null) & (track !== undefined)) {\n      //From https://stackoverflow.com/questions/1071962/how-do-i-print-part-of-a-rendered-html-page-in-javascript#answer-1072151\n      let print = window.open(\n        \"\",\n        \"\",\n        \"left=0,top=0,width=552,height=477,toolbar=0,scrollbars=0,status =0\"\n      );\n      print.document.body.appendChild(css);\n      print.document.body.appendChild(h1);\n      print.document.body.appendChild(track);\n      print.document.close();\n      print.focus();\n      print.print();\n      print.close();\n    }\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {array} an array of tracks\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", tracks.slice(0));\n    this.notifyPath(\"tracks\");\n    if (this.tracks !== undefined && this.tracks.length > 0)\n      this.$.tracks.render();\n  }\n\n  /**\n   * updates activeCues array and scrolls to position\n   *\n   * @param {array} an array of cues\n   */\n  setActiveCues(cues) {\n    let root = this,\n      offset =\n        root.shadowRoot.querySelector(\"#inner\") !== null &&\n        root.shadowRoot.querySelector(\"#inner\") !== undefined\n          ? root.shadowRoot.querySelector(\"#inner\").offsetTop\n          : 0,\n      cue = root.shadowRoot.querySelector(\n        \"#inner a11y-media-transcript-cue[active]\"\n      );\n    root.set(\"activeCues\", cues.slice(0));\n    if (!root.disableScroll && (cue !== null) & (cue !== undefined)) {\n      //javascript scrolling from:  https://stackoverflow.com/questions/8917921/cross-browser-javascript-not-jquery-scroll-to-top-animation#answer-8918062\n      let scrollingTo = function(element, to, duration) {\n        if (duration <= 0) return;\n        var difference = to - element.scrollTop;\n        var perTick = (difference / duration) * 10;\n\n        setTimeout(function() {\n          element.scrollTop = element.scrollTop + perTick;\n          if (element.scrollTop === to) return;\n          scrollingTo(element, to, duration - 10);\n        }, 10);\n      };\n      scrollingTo(root, cue.offsetTop - offset, 250);\n    }\n  }\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {integer} the tabindex of the cue\n   */\n  _getTabIndex(disableInteractive) {\n    return disableInteractive ? -1 : 0;\n  }\n\n  /**\n   * gets the role of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {string} the role of the cue, `button` or `null`\n   */\n  _getRole(disableInteractive) {\n    return disableInteractive ? null : \"button\";\n  }\n\n  /**\n   * forwards the listener for transcript cue click to seek accordingly\n   */\n  _handleCueSeek(e) {\n    if (!this.disableInteractive) {\n      this.dispatchEvent(new CustomEvent(\"cue-seek\", { detail: e.detail }));\n    }\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  setActiveTranscript(index) {\n    if (this.tracks !== undefined && this.tracks !== null) {\n      for (let i = 0; i < this.tracks.length; i++) {\n        if (parseInt(index) === i) {\n          this.selectedTranscript = parseInt(index);\n          this.set(\"tracks.\" + i + \".active\", true);\n        } else if (this.tracks[i] !== null) {\n          this.set(\"tracks.\" + i + \".active\", false);\n        }\n        this.notifyPath(\"tracks.\" + i + \".active\");\n      }\n    }\n    this.$.tracks.render();\n  }\n}\nwindow.customElements.define(A11yMediaTranscript.tag, A11yMediaTranscript);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerProperties } from \"./a11y-media-player-properties.js\";\nimport \"@lrnwebcomponents/simple-search/simple-search.js\";\nimport \"./a11y-media-button.js\";\n\nexport { A11yMediaTranscriptControls };\n/**\n * `a11y-media-transcript-controls`\n * `A controls for the transcript element.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-controls \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-print-button$=\"[[disablePrintButton]]\"  // Disable the print button?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n</a11y-media-transcript-controls>```\n *\n * @extends A11yMediaPlayerProperties\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptControls extends A11yMediaPlayerProperties {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Language\n       */\n      lang: {\n        type: String,\n        value: \"en\",\n        reflectToAttribute: true\n      },\n      /**\n       * target of the controls\n       */\n      target: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript-controls\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerProperties];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          background-color: var(--a11y-media-transcript-bg-color);\n          color: var(--a11y-media-transcript-text-color);\n          --a11y-media-button-color: var(--a11y-media-transcript-color);\n          --a11y-media-button-bg-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-toggle-color: var(\n            --a11y-media-transcript-accent-color\n          );\n          --a11y-media-button-hover-color: var(\n            --a11y-media-transcript-faded-accent-color\n          );\n          --a11y-media-button-hover-bg-color: var(\n            --a11y-media-transcript-bg-color\n          );\n          --simple-search-input-color: var(--a11y-media-transcript-color);\n          --simple-search-input-line-color: var(\n            --a11y-media-transcript-accent-color\n          );\n          --simple-search-input-placeholder-color: var(\n            --a11y-media-transcript-color\n          );\n          --simple-search-button-color: var(\n            --a11y-media-transcript-accent-color\n          );\n          --simple-search-button-hover-color: var(\n            --a11y-media-transcript-faded-accent-color\n          );\n          --simple-search-button-bg-color: var(\n            --a11y-media-transcript-bg-color\n          );\n          --simple-search-button-border-color: var(\n            --a11y-media-transcript-bg-color\n          );\n          --simple-search-button-hover-border-color: var(\n            --a11y-media-transcript-bg-color\n          );\n          --simple-search-button-disabled-color: var(\n            --simple-colors-default-theme-grey-5\n          );\n          --simple-search-button-disabled-bg-color: var(\n            --simple-colors-default-theme-grey-2\n          );\n          --simple-search-button-disabled-border-color: var(\n            --simple-colors-default-theme-grey-3\n          );\n          --simple-search-container: {\n            padding: 0 15px;\n          }\n        }\n        :host #searchbar {\n          display: flex;\n          align-items: stretch;\n          justify-content: space-between;\n          width: 100%;\n        }\n        :host #searching {\n          flex-grow: 2;\n        }\n        :host #autoscroll {\n          padding-right: 8px;\n        }\n        :host #scrolling,\n        :host #printing {\n          display: flex;\n          align-items: center;\n        }\n        @media print {\n          :host {\n            display: none;\n          }\n        }\n      </style>\n      <div id=\"searchbar\">\n        <div id=\"searching\">\n          <simple-search\n            id=\"simplesearch\"\n            disabled$=\"[[disableSearch]]\"\n            controls=\"transcript\"\n            hidden$=\"[[disableSearch]]\"\n            no-label-float=\"\"\n            next-button-icon$=\"[[searchNextIcon]]\"\n            next-button-label$=\"[[searchNextLabel]]\"\n            prev-button-icon$=\"[[searchPrevIcon]]\"\n            prev-button-label$=\"[[searchPrevLabel]]\"\n            search-input-icon$=\"[[searchIcon]]\"\n            search-input-label$=\"[[searchLabel]]\"\n            target=\"[[target]]\"\n          >\n          </simple-search>\n        </div>\n        <div id=\"scrolling\">\n          <a11y-media-button\n            id=\"scroll\"\n            controls=\"transcript\"\n            icon=\"[[autoScrollIcon]]\"\n            label=\"[[autoScrollLabel]]\"\n            on-click=\"_handleScrollClick\"\n            toggle$=\"[[!disableScroll]]\"\n          >\n          </a11y-media-button>\n        </div>\n        <div\n          id=\"printing\"\n          hidden$=\"[[disablePrintButton]]\"\n          disabled$=\"[[disablePrintButton]]\"\n        >\n          <a11y-media-button\n            controls=\"transcript\"\n            id=\"print\"\n            icon=\"[[printIcon]]\"\n            on-click=\"_handlePrintClick\"\n            label=\"[[printLabel]]\"\n          >\n          </a11y-media-button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.search = root.$.simplesearch;\n    root.dispatchEvent(\n      new CustomEvent(\"searchbar-added\", { detail: root.search })\n    );\n  }\n\n  /**\n   * handles the transcript scroll button toggle\n   */\n  _handleScrollClick(e) {\n    this.dispatchEvent(new CustomEvent(\"toggle-scroll\", { detail: this }));\n  }\n\n  /**\n   * handles the print transcript button\n   */\n  _handlePrintClick(e) {\n    this.dispatchEvent(new CustomEvent(\"print-transcript\", { detail: this }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptControls.tag,\n  A11yMediaTranscriptControls\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaUtility = window.A11yMediaUtility || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\nwindow.A11yMediaUtility.requestAvailability = () => {\n  if (!window.A11yMediaUtility.instance) {\n    window.A11yMediaUtility.instance = document.createElement(\n      \"a11y-media-utility\"\n    );\n    document.body.appendChild(window.A11yMediaUtility.instance);\n  }\n  return window.A11yMediaUtility.instance;\n};\n/**\n * `a11y-media-utility`\n * `A utility that manages multiple instances of a11y-media-player on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaUtility extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-utility\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Stores an array of all the players on the page.\n       */\n      players: {\n        type: Array,\n        value: []\n      },\n      /**\n       * Manages which player is sticky.\n       */\n      stickyPlayer: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  constructor() {\n    super();\n    let root = this;\n    root.__playerLoader = function(e) {\n      root.players.push(e.detail);\n    };\n\n    // sets the instance to the current instance\n    if (!window.A11yMediaUtility.instance) {\n      window.A11yMediaUtility.instance = this;\n\n      // listen for a players added to the page\n      window.addEventListener(\"a11y-player\", root.__playerLoader);\n    }\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    this.__stickyManager = function(e) {\n      root.setStickyPlayer(e.detail);\n    };\n    this.__scrollChecker = function(e) {\n      root._checkScroll();\n    };\n\n    // listen for a player that starts playing,\n    // make it the player that can be sticky,\n    // and check for concurrent players\n    window.addEventListener(\"a11y-player-playing\", root.__stickyManager);\n\n    // listen for scrolling and find out if a player is off-screen\n    window.addEventListener(\"scroll\", root.__scrollChecker);\n  }\n\n  /**\n   * if a player disallows concurrent players, pauses other players\n   */\n  checkConcurrentPlayers() {\n    let root = this,\n      player = root.stickyPlayer;\n    for (let i = 0; i < root.players.length; i++) {\n      let playeri = root.players[i];\n      if (\n        playeri !== player &&\n        (!player.allowConcurrent || !playeri.allowConcurrent)\n      ) {\n        playeri.pause();\n      }\n    }\n  }\n\n  /**\n   * stops all other players on the page\n   *\n   * @param {object} the player to set stickiness\n   */\n  setStickyPlayer(player) {\n    let root = this,\n      parent = root._getParentNode(player);\n    root.__playerTop = parent.offsetTop;\n    root.__playerUpperMiddle = root.__playerTop + parent.offsetHeight * 0.9;\n    root.__playerLowerMiddle = root.__playerTop + parent.offsetHeight * 0.1;\n    if (\n      player !== root.stickyPlayer &&\n      root.stickyPlayer !== undefined &&\n      root.stickyPlayer !== null\n    ) {\n      root.stickyPlayer.toggleSticky(false);\n      root.__parent.style.height = \"unset\";\n    }\n    parent.style.height = parent.offsetHeight + \"px\";\n    root.__parent = parent;\n    root.stickyPlayer = player;\n    if (!player.allowConcurrent) root.checkConcurrentPlayers();\n    root._checkScroll();\n  }\n\n  /**\n   * checks the wondow's scroll position and compares it to active player to set sticky attribute\n   */\n  _checkScroll() {\n    let root = this,\n      wintop = window.pageYOffset,\n      winbottom = wintop + window.innerHeight;\n    if (root.stickyPlayer !== undefined && root.stickyPlayer !== null) {\n      if (\n        root.stickyPlayer.__playing &&\n        (root.__playerLowerMiddle > winbottom ||\n          root.__playerUpperMiddle < wintop)\n      ) {\n        root.stickyPlayer.toggleSticky(true);\n      } else {\n        root.stickyPlayer.toggleSticky(false);\n      }\n    }\n  }\n\n  /**\n   * gets parent node in light DOM\n   *\n   * @param {object} the node\n   */\n  _getParentNode(node) {\n    let parent = node.parentNode;\n    if (\n      parent !== undefined &&\n      parent !== null &&\n      parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parent = parent.host;\n    }\n    return parent;\n  }\n\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    let root = this;\n    window.removeEventListener(\"a11y-player\", root.__playerLoader);\n    window.removeEventListener(\"a11y-player-playing\", root.__stickyManager);\n    window.removeEventListener(\"scroll\", root.__scrollChecker);\n  }\n}\nwindow.customElements.define(A11yMediaUtility.tag, A11yMediaUtility);\nexport { A11yMediaUtility };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaYoutubeUtility = window.A11yMediaYoutubeUtility || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\n\nwindow.A11yMediaYoutubeUtility.requestAvailability = () => {\n  if (!window.A11yMediaYoutubeUtility.instance) {\n    window.A11yMediaYoutubeUtility.instance = document.createElement(\n      \"a11y-media-youtube-utility\"\n    );\n    document.body.appendChild(window.A11yMediaYoutubeUtility.instance);\n  }\n  return window.A11yMediaYoutubeUtility.instance;\n};\n/**\n * `a11y-media-youtube-utility`\n * `A utility that manages multiple instances of a11y-media-player on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaYoutubeUtility extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-youtube-utility\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * whether or not the YouTube API is ready\n       */\n      apiReady: {\n        type: \"Boolean\",\n        value: window.YT !== undefined\n      },\n      /**\n       * a counter for creating unique ideas for each YouTube player container\n       */\n      counter: {\n        type: \"Number\",\n        value: 0\n      }\n    };\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this,\n      api = document.createElement(\"script\");\n    api.setAttribute(\"src\", \"https://www.youtube.com/iframe_api\");\n    api.setAttribute(\"type\", \"text/javascript\");\n    document.body.appendChild(api);\n    window.onYouTubeIframeAPIReady = function() {\n      var event = new CustomEvent(\"youtube-api-ready\");\n      root.apiReady = true;\n      document.dispatchEvent(event);\n    };\n  }\n\n  /**\n   * initializes the youtube player for a given element\n   *\n   * @param {options} the YouTube options object, eg. `{ \"width\": \"100%\", \"height\": \"100%\", \"videoId\": \"NP0mQeLWCCo\" }`\n   * @returns {options} the YouTube player object\n   */\n  initYoutubePlayer(options) {\n    //get unique id for each youtube iframe\n    // function to create and init iframe\n    let temp = \"a11y-media-yt-\",\n      div = document.createElement(\"div\");\n    this.counter++;\n    temp += this.counter;\n    document.body.appendChild(div);\n    div.setAttribute(\"id\", temp);\n\n    let iframe = new YT.Player(temp, {\n      width: options.width,\n      height: options.height,\n      videoId: options.videoId,\n      playerVars: {\n        color: \"white\",\n        controls: 0,\n        autoplay: options.autoplay,\n        disablekb: 1,\n        enablejsapi: 1,\n        iv_load_policy: 3,\n        modestbranding: 1,\n        showinfo: 0,\n        rel: 0\n      }\n    });\n\n    // add methods and properties to api so that it matches HTML5 video\n    iframe.tracks = [];\n    iframe.duration = 0;\n    iframe.play = function() {\n      iframe.playVideo();\n    };\n    iframe.pause = function() {\n      iframe.pauseVideo();\n    };\n    iframe.seek = function(time) {\n      iframe.seekTo(time);\n      iframe.pauseVideo();\n    };\n    iframe.setMute = function(mode) {\n      mode ? iframe.mute() : iframe.unMute();\n    };\n    iframe.seekable = {\n      length: 1,\n      start: function(index) {\n        return 0;\n      },\n      end: function(index) {\n        return iframe.duration;\n      }\n    };\n    // return the iframe so that a11y-media-player can control it\n    return iframe;\n  }\n}\nwindow.customElements.define(\n  A11yMediaYoutubeUtility.tag,\n  A11yMediaYoutubeUtility\n);\nexport { A11yMediaYoutubeUtility };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerProperties } from \"./lib/a11y-media-player-properties.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"./lib/screenfull-lib.js\";\nimport \"./lib/a11y-media-controls.js\";\nimport \"./lib/a11y-media-loader.js\";\nimport \"./lib/a11y-media-play-button.js\";\nimport \"./lib/a11y-media-transcript.js\";\nimport \"./lib/a11y-media-transcript-controls.js\";\nimport \"./lib/a11y-media-utility.js\";\nimport \"./lib/a11y-media-youtube-utility.js\";\n\nexport { A11yMediaPlayer };\n/**\n * `a11y-media-player`\n * An accessible video player\n *\n * @microcopy - the mental model for this element\n * ```\n<a11y-media-player\n  accent-color$=\"[[accentColor]]\"              // Optional accent color for controls,\n                                               // using the following materialize colors:\n                                               // red, pink, purple, deep-purple, indigo, blue,\n                                               // light blue, cyan, teal, green, light green, lime,\n                                              // yellow, amber, orange, deep-orange, and brown.\n                                              // Default is null.\n  audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n  autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n  cc$=\"[[cc]]\"                                // Are closed captions toggled?\n  custom-microcopy$=\"[[customMicrocopy]]\"  // Optional customization or text and icons\n  dark$=\"[[dark]]\"  // Is the color scheme dark? Default is light.\n  dark-transcript$=\"[[darkTranscript]]\"  // Use dark theme on transcript? Default is false, even when player is dark.\n  disable-fullscreen$=\"[[disableFullscreen]]\" // Is full screen mode disabled?\n  disable-interactive$=\"[[disableInteractive]]\" // Disable interactive cues?\n  fullscreen$=\"[[fullscreen]]\"  // Is full screen mode toggled on?\n  height$=\"[[height]]\"  // The height of player\n  hide-elapsed-time$=\"[[hideElapsedTime]]\"    // Is elapsed time hidden?\n  hide-timestamps$=\"[[hideTimestamps]]\"  // Hide cue timestamps?\n  lang$=\"[[lang]]\"  // The language of the media\n  loop$=\"[[loop]]\"  // Is video on a loop?\n  muted$=\"[[muted]]\"  // Is video muted?\n  media-title$=\"[[mediaTitle]]\"  // The title of the media\n  playback-rate$=\"[[playbackRate]]\"  // The speed that video plays, default is 1 (for 100%)\n  sticky-corner$=\"[[stickyCorner]]\"  // When user scrolls a playing video off-screen,\n  which corner will it stick to? Values are:\n  top-right (default), top-left, bottom-left, bottom-right,\n  and none (to turn sticky off)\n  thumbnail-src$=\"[[thumbnailSrc]]\"  // Optional thumbanil/cover image url\n  volume$=\"[[volume]]\">  // The initial volume of the video\n\n  <!--video sources and tracks-->\n  <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n  <source src=\"/path/to/video.webm\" type=\"video/webm\">\n  <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n  <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n  <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n\n</a11y-media-player>```\n *\n * Intermediate customization of player:\n * ```\n--a11y-media-text-color: text color, default is --simple-colors-default-theme-grey-11\n--a11y-media-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-hover-color: text color on hover, default is --simple-colors-default-theme-grey-12\n--a11y-media-hover-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-accent-color: an accent color, default is --simple-colors-default-theme-accent-9\n--a11y-media-faded-accent-color: a subtler version of accent color, default is --simple-colors-default-theme-accent-8\n--a11y-media-outline-color: border-color of group, default is --a11y-media-bg-color```\n *\n * Intermediate customization of transcript:\n * ```\n --a11y-media-transcript-color: transcript color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-bg-color: transcript background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-active-cue-color: transcript active cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-active-cue-bg-color: transcript active cue background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-focused-cue-color: transcript focused cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-focused-cue-br-color: transcript focused cue background color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-color: transcript match color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-bg-color: transcript match background color, default is --simple-colors-default-theme-grey-12```\n *\n * Advanced styles for settings menu:\n * ```\n--a11y-media-settings-menu-color: settings menu text color, default is --a11y-media-text-color\n--a11y-media-settings-menu-bg-color: settings menu background color, default is --a11y-media-bg-color\n--a11y-media-settings-menu-hover-color: settings menu text color on hover, default is --a11y-media-hover-color\n--a11y-media-settings-menu-hover-bg-color: settings menu background color on hover, default is --a11y-media-hover-bg-color```\n *\n * Advanced styles for buttons:\n * ```\n--a11y-media-button-color: button text color, default is --a11y-media-text-color\n--a11y-media-button-bg-color: button background color, default is --a11y-media-bg-color\n--a11y-media-button-hover-color: button text color when focused/hovered, default is --a11y-media-hover-color\n--a11y-media-button-hover-bg-color: button background color when focused/hovered, default is --a11y-media-bg-color\n--a11y-media-button-toggle-color: button text color when tggled on, default is --a11y-media-faded-accent-color```\n *\n * Advanced styles for toggles:\n * ```\n--paper-toggle-button-unchecked-bar-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-unchecked-button-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-checked-bar-color: color of toggle button when on, default is --a11y-media-accent-color\n--paper-toggle-button-checked-button-color: color of toggle button when on, default is --a11y-media-accent-color```\n *\n * Advanced styles for sliders:\n * ```\n--a11y-media-slider-primary-color: primary slider color, default is --a11y-media-accent-color\n--a11y-media-slider-secondary-color: slider buffer color, default is --a11y-media-faded-accent-color\n--a11y-media-slider-pin-color: color of the pin that shows slider value, default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-start-color: color of the pin at start default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-end-color: color of the pin at end, default is --a11y-media-faded-bg-color\n--a11y-media-slider-knob-color: slider knob color, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-color: slider knob color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-color: slider knob color at end, default is --a11y-media-accent-color\n--a11y-media-slider-knob-border-color: slider knob bordercolor, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-border-color: slider knob border color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-border-color: slider knob border color at end, default is --a11y-media-accent-color```\n *\n * @extends A11yMediaPlayerProperties\n * @polymer\n * @customElement\n * @demo demo/index.html video demo\n * @demo demo/audio.html audio demo\n * @demo demo/youtube.html YouTube demo\n *\n */\nclass A11yMediaPlayer extends A11yMediaPlayerProperties {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-player\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * The default media caption if none is given.\n       */\n      mediaCaption: {\n        type: String,\n        computed: \"_getMediaCaption(audioOnly,audioLabel,mediaTitle)\"\n      },\n      /**\n       * The media caption that displays when the page is printed.\n       */\n      printCaption: {\n        type: String,\n        computed: \"_getPrintCaption(audioOnly,audioLabel,videoLabel,mediaTitle)\"\n      },\n      /**\n       * Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n       */\n      sticky: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * When playing but scrolled off screen, to which corner does it stick:\n       * top-left, top-right, bottom-left, bottom-right, or none?\n       * Default is \"top-right\". \"None\" disables stickiness.\n       */\n      stickyCorner: {\n        type: String,\n        value: \"top-right\",\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  //get player-specific behaviors\n  static get behaviors() {\n    return [A11yMediaPlayerProperties];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          width: 100%;\n          display: block;\n          color: var(--simple-colors-default-theme-grey-12);\n          background-color: var(--simple-colors-default-theme-grey-2);\n          outline: 1px solid var(--simple-colors-default-theme-grey-3);\n        }\n        :host([dark]) {\n          outline: 1px solid var(--simple-colors-default-theme-grey-1);\n        }\n        :host #outerplayer,\n        :host #outerplayer * {\n          --a11y-media-color: var(--simple-colors-default-theme-grey-11);\n          --a11y-media-bg-color: var(--simple-colors-default-theme-grey-2);\n          --a11y-media-hover-color: var(--simple-colors-default-theme-grey-12);\n          --a11y-media-hover-bg-color: var(\n            --simple-colors-default-theme-grey-2\n          );\n          --a11y-media-accent-color: var(\n            --simple-colors-default-theme-accent-9\n          );\n          --a11y-media-faded-accent-color: var(\n            --simple-colors-default-theme-accent-8\n          );\n\n          /* settings */\n          --a11y-media-settings-menu-color: var(--a11y-media-color);\n          --a11y-media-settings-menu-bg-color: var(--a11y-media-bg-color);\n          --a11y-media-settings-menu-hover-color: var(--a11y-media-hover-color);\n          --a11y-media-settings-menu-hover-bg-color: var(\n            --a11y-media-hover-bg-color\n          );\n\n          /* buttons */\n          --a11y-media-button-color: var(--a11y-media-color);\n          --a11y-media-button-bg-color: var(--a11y-media-bg-color);\n          --a11y-media-button-hover-color: var(--a11y-media-accent-color);\n          --a11y-media-button-hover-bg-color: var(--a11y-media-hover-bg-color);\n          --a11y-media-button-toggle-color: var(\n            --a11y-media-faded-accent-color\n          );\n\n          /* toggle button */\n          --paper-toggle-button-unchecked-bar-color: var(--a11y-media-color);\n          --paper-toggle-button-unchecked-button-color: var(--a11y-media-color);\n          --paper-toggle-button-checked-bar-color: var(\n            --a11y-media-accent-color\n          );\n          --paper-toggle-button-checked-button-color: var(\n            --a11y-media-accent-color\n          );\n\n          /* slider */\n          --paper-slider-active-color: var(--a11y-media-accent-color);\n          --paper-slider-secondary-color: var(--a11y-media-faded-accent-color);\n          --paper-slider-pin-color: var(--a11y-media-faded-bg-color);\n          --paper-slider-pin-start-color: var(--a11y-media-faded-bg-color);\n          --paper-slider-pin-end-color: var(--a11y-media-faded-bg-color);\n          --paper-slider-knob-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-start-color: var(--a11y-media-bg-color);\n          --paper-slider-knob-end-color: var(--a11y-media-bg-color);\n          --paper-slider-knob-border-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-start-border-color: var(--a11y-media-bg-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-bg-color);\n        }\n        :host #outertranscript,\n        :host #outertranscript *,\n        :host #transcript {\n          --a11y-media-transcript-color: var(\n            --simple-colors-default-theme-grey-12\n          );\n          --a11y-media-transcript-bg-color: var(\n            --simple-colors-default-theme-grey-1\n          );\n          --a11y-media-transcript-accent-color: var(\n            --simple-colors-default-theme-accent-8\n          );\n          --a11y-media-transcript-faded-accent-color: var(\n            --simple-colors-default-theme-accent-10\n          );\n          --a11y-media-transcript-active-cue-color: var(\n            --simple-colors-default-theme-grey-12\n          );\n          --a11y-media-transcript-active-cue-bg-color: var(\n            --simple-colors-default-theme-accent-1\n          );\n          --a11y-media-transcript-focused-cue-color: var(\n            --simple-colors-default-theme-grey-12\n          );\n          --a11y-media-transcript-focused-cue-bg-color: var(\n            --simple-colors-default-theme-grey-2\n          );\n          --a11y-media-transcript-match-color: var(\n            --simple-colors-default-theme-grey-1\n          );\n          --a11y-media-transcript-match-bg-color: var(\n            --simple-colors-default-theme-accent-10\n          );\n          --a11y-media-transcript-match-border-color: var(\n            --simple-colors-default-theme-accent-12\n          );\n          --a11y-media-hover-color: var(--simple-colors-default-theme-grey-12);\n          --a11y-media-hover-bg-color: var(\n            --simple-colors-default-theme-grey-2\n          );\n        }\n        :host([dark-transcript]) #outertranscript,\n        :host([dark-transcript]) #outertranscript *,\n        :host([dark-transcript]) #transcript {\n          --a11y-media-transcript-active-cue-color: var(\n            --simple-colors-default-theme-accent-10\n          );\n          --a11y-media-transcript-active-cue-bg-color: var(\n            --simple-colors-default-theme-grey-1\n          );\n        }\n        :host #player {\n          display: block;\n          max-width: 100%;\n          transition: position 0.5s ease, max-width 1s ease;\n          background-color: var(--simple-colors-default-theme-grey-2);\n        }\n        :host #innerplayer {\n          z-index: 1;\n        }\n        :host #outeraudiocc:not([hidden]) {\n          display: flex;\n          align-items: center;\n          padding: 5px 16px;\n          min-height: 4em;\n          transition: all 0.5s;\n        }\n        :host #sources {\n          display: flex;\n          align-items: stretch;\n          position: relative;\n        }\n        :host([no-height]) #sources {\n          display: none;\n        }\n        :host #controls,\n        :host #slider,\n        :host #sources,\n        :host #sources > * {\n          width: 100%;\n        }\n        :host #loader,\n        :host #youtube,\n        :host #customcc,\n        :host #customcctxt {\n          position: absolute;\n          top: 0;\n          left: 0;\n        }\n        :host #youtube {\n          height: 100%;\n        }\n        :host #customcc {\n          font-size: 20px;\n          width: 100%;\n          height: 100%;\n          transition: font-size 0.25s;\n        }\n        :host([responsive-size*=\"lg\"]) #customcc {\n          font-size: 14px;\n        }\n        :host([responsive-size*=\"md\"]) #customcc {\n          font-size: 14px;\n        }\n        :host([responsive-size*=\"sm\"]) #customcc {\n          font-size: 12px;\n        }\n        :host([responsive-size*=\"xs\"]) #customcc {\n          font-size: 10px;\n        }\n        :host([sticky]:not([sticky-corner=\"none\"])) #customcc {\n          display: none;\n        }\n        :host #customcctxt:not(:empty) {\n          top: unset;\n          bottom: 8px;\n          display: inline-block;\n          margin: 0 10px;\n          color: white;\n          background-color: black;\n          background-color: rgba(0, 0, 0, 0.8);\n          padding: 0.15em 4px;\n        }\n        :host #innerplayer,\n        :host #sources > * {\n          max-height: 80vh;\n        }\n        :host #controls,\n        :host #slider {\n          z-index: 2 !important;\n        }\n        :host #audio-only {\n          text-align: center;\n          font-style: italic;\n          width: 100%;\n          line-height: 160%;\n        }\n        :host .media-caption:not(:empty) {\n          padding: 5px 15px;\n        }\n        :host #printthumb {\n          width: 100%;\n          margin: 0;\n          display: block;\n          border-top: 1px solid #aaaaaa;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        @media screen {\n          :host #printthumb {\n            display: none;\n          }\n          :host([flex-layout]:not([responsive-size*=\"s\"])) {\n            display: inline-flex;\n            align-items: stretch;\n            outline: 1px solid;\n            color: var(--simple-colors-default-theme-grey-12);\n            background-color: var(--simple-colors-default-theme-grey-2);\n            outline-color: var(--simple-colors-default-theme-grey-3);\n            padding: 0;\n          }\n          :host([dark][flex-layout]:not([responsive-size*=\"s\"])) {\n            outline-color: var(--simple-colors-default-theme-grey-1);\n          }\n          :host > div {\n            transition: all 0.5s;\n          }\n          :host([sticky]:not([sticky-corner=\"none\"])) #player {\n            position: fixed;\n            top: 5px;\n            right: 5px;\n            width: 200px;\n            max-width: 200px;\n            z-index: 999999;\n            border: 1px solid;\n            box-shadow: 1px 1px 20px 1px rgba(125, 125, 125);\n            border-radius: 3.2px;\n            border-color: var(--a11y-media-bg-color);\n          }\n          :host([dark][sticky]:not([sticky-corner=\"none\"])) #player {\n            border-color: var(--a11y-media-bg-color);\n          }\n          :host([sticky][sticky-corner=\"top-left\"]) #player {\n            right: unset;\n            left: 5px;\n          }\n          :host([flex-layout]:not([responsive-size*=\"s\"])) > div {\n            width: 50%;\n            flex-grow: 1;\n            flex-shrink: 1;\n          }\n          :host #innertranscript {\n            position: relative;\n            height: 100%;\n          }\n          :host([hide-transcript]) #outerplayer {\n            min-width: 50%;\n            max-width: 100%;\n          }\n          :host([hide-transcript]) #outertranscript {\n            display: none;\n          }\n          :host #transcript {\n            padding-top: 48px;\n          }\n          :host(:not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"]))\n            #transcript {\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            overflow-y: scroll;\n          }\n          :host(:not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"]))\n            #player.totop {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 200px !important;\n            z-index: 9999;\n          }\n          :host #tcontrols {\n            z-index: 1000;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            display: flex;\n          }\n          :host([sticky][sticky-corner=\"bottom-left\"]) #player {\n            top: unset;\n            right: unset;\n            bottom: 5px;\n          }\n          :host([sticky][sticky-corner=\"bottom-right\"]) #player {\n            top: unset;\n            bottom: 5px;\n          }\n          :host([sticky]:not([sticky-corner=\"none\"]):not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"]))\n            #controls {\n            display: none;\n          }\n          :host .print-only {\n            display: none;\n          }\n          :host .media-caption {\n            color: var(--simple-colors-default-theme-grey-1);\n            background-color: var(--simple-colors-default-theme-accent-10);\n          }\n        }\n\n        @media print {\n          :host,\n          :host([dark]) {\n            outline: 1px solid #aaaaaa;\n            background-color: #ffffff;\n          }\n          :host([sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n            height: unset !important;\n          }\n          :host .screen-only,\n          :host #player,\n          :host #outeraudiocc,\n          :host #printthumb:not([src]) {\n            display: none;\n          }\n          :host(:not([thumbnail-src])) #sources,\n          :host #slider,\n          :host #loader,\n          :host #youtube,\n          :host #controls {\n            display: none;\n          }\n          :host .media-type {\n            font-style: italic;\n          }\n          :host #searchbar {\n            display: none;\n          }\n          :host .media-caption {\n            background-color: #cccccc;\n            color: #000000;\n            font-size: 120%;\n            padding: 5px 15px;\n          }\n        }\n      </style>\n      <div class=\"sr-only\">[[mediaCaption]]</div>\n      <div id=\"outerplayer\" lang$=\"[[uiLanguage]]\">\n        <div id=\"outeraudiocc\" hidden$=\"[[!showCustomCaptions]]\">\n          <div id=\"audiocc\" hidden$=\"[[!noHeight]]\"></div>\n        </div>\n        <div id=\"player\">\n          <div id=\"innerplayer\">\n            <div id=\"sources\" hidden$=\"[[noHeight]]\">\n              <a11y-media-play-button\n                id=\"playbutton\"\n                audio-only$=\"[[audioOnly]]\"\n                disabled=\"true\"\n                hidden$=\"[[noPlayButton]]\"\n                disabled$=\"[[noPlayButton]]\"\n                on-controls-change=\"_onControlsChanged\"\n                pause-label$=\"[[pauseLabel]]\"\n                playing$=\"[[__playing]]\"\n                play-label$=\"[[playLabel]]\"\n              >\n              </a11y-media-play-button>\n              <a11y-media-loader\n                id=\"loader\"\n                audio-only$=\"[[audioOnly]]\"\n                autoplay$=\"[[autoplay]]\"\n                cc$=\"[[cc]]\"\n                crossorigin$=\"[[crossorigin]]\"\n                hidden$=\"[[isYoutube]]\"\n                lang$=\"[[lang]]\"\n                loop$=\"[[loop]]\"\n                muted$=\"[[muted]]\"\n                manifest$=\"[[manifest]]\"\n                on-media-loaded=\"_handleMediaLoaded\"\n                playback-rate$=\"[[playbackRate]]\"\n                style$=\"[[_getThumbnailCSS(thumbnailSrc)]]\"\n                preload$=\"[[preload]]\"\n                volume$=\"[[volume]]\"\n              >\n                <slot></slot>\n              </a11y-media-loader>\n              <div\n                id=\"youtube\"\n                hidden$=\"[[!isYoutube]]\"\n                video-id$=\"[[videoId]]\"\n              ></div>\n              <div id=\"customcc\" hidden$=\"[[!showCustomCaptions]]\">\n                <span id=\"customcctxt\" hidden$=\"[[noHeight]]\"></span>\n              </div>\n            </div>\n          </div>\n          <paper-slider\n            id=\"slider\"\n            max$=\"[[__duration]]\"\n            on-dragging-changed=\"_handleSliderDragging\"\n            on-focused-changed=\"_handleSliderKeyboard\"\n            pin=\"\"\n            secondary-progress$=\"[[__buffered]]\"\n            value$=\"[[__elapsed]]\"\n          >\n          </paper-slider>\n        </div>\n        <a11y-media-controls\n          id=\"controls\"\n          audio-only$=\"[[audioOnly]]\"\n          audio-label$=\"[[audioLabel]]\"\n          captions-icon$=\"[[captionsIcon]]\"\n          captions-label$=\"[[captionsLabel]]\"\n          captions-menu-label$=\"[[captionsMenuLabel]]\"\n          captions-menu-off$=\"[[captionsMenuOff]]\"\n          cc$=\"[[cc]]\"\n          forward-icon$=\"[[forwardIcon]]\"\n          forward-label$=\"[[forwardLabel]]\"\n          fullscreen-icon$=\"[[fullscreenIcon]]\"\n          fullscreen-label$=\"[[fullscreenLabel]]\"\n          has-captions$=\"[[hasCaptions]]\"\n          has-transcript$=\"[[hasTranscript]]\"\n          lang$=\"[[uiLanguage]]\"\n          loop-icon$=\"[[loopIcon]]\"\n          loop-label$=\"[[loopLabel]]\"\n          mute-icon$=\"[[muteIcon]]\"\n          mute-label$=\"[[muteLabel]]\"\n          muted$=\"[[muted]]\"\n          on-controls-change=\"_onControlsChanged\"\n          pause-icon$=\"[[pauseIcon]]\"\n          pause-label$=\"[[pauseLabel]]\"\n          play-icon$=\"[[playIcon]]\"\n          play-label$=\"[[playLabel]]\"\n          playing$=\"[[__playing]]\"\n          restart-icon$=\"[[restartIcon]]\"\n          restart-label$=\"[[restartLabel]]\"\n          rewind-icon$=\"[[rewindIcon]]\"\n          rewind-label$=\"[[rewindLabel]]\"\n          search-transcript$=\"[[searchTranscript]]\"\n          settings-icon$=\"[[settingsIcon]]\"\n          settings-label$=\"[[settingsLabel]]\"\n          speed-label$=\"[[speedLabel]]\"\n          stand-alone$=\"[[standAlone]]\"\n          transcript-icon$=\"[[transcriptIcon]]\"\n          transcript-label$=\"[[transcriptLabel]]\"\n          transcript-menu-label$=\"[[transcriptMenuLabel]]\"\n          unmute-icon$=\"[[unmuteIcon]]\"\n          unmute-label$=\"[[unmuteLabel]]\"\n          video-label$=\"[[videoLabel]]\"\n          volume=\"[[__volume]]\"\n          volume-icon$=\"[[volumeIcon]]\"\n          volume-label$=\"[[volumeLabel]]\"\n        >\n        </a11y-media-controls>\n        <div\n          class=\"screen-only media-caption\"\n          aria-hidden=\"true\"\n          hidden$=\"[[!_hasAttribute(mediaCaption)]]\"\n        >\n          [[mediaCaption]]\n        </div>\n        <div class=\"print-only media-caption\">[[printCaption]]</div>\n      </div>\n      <img id=\"printthumb\" aria-hidden=\"true\" src$=\"[[thumbnailSrc]]\" />\n      <div id=\"outertranscript\" hidden$=\"[[standAlone]]\" lang$=\"[[uiLanguage]]\">\n        <div id=\"innertranscript\">\n          <a11y-media-transcript-controls\n            id=\"tcontrols\"\n            accent-color$=\"[[accentColor]]\"\n            auto-scroll-icon$=\"[[autoScrollIcon]]\"\n            auto-scroll-label$=\"[[autoScrollLabel]]\"\n            dark$=\"[[darkTranscript]]\"\n            disable-print-button$=\"[[disablePrintButton]]\"\n            disable-scroll$=\"[[disableScroll]]\"\n            disable-search$=\"[[disableSearch]]\"\n            lang$=\"[[uiLanguage]]\"\n            on-searchbar-added=\"_handleSearchAdded\"\n            on-toggle-scroll=\"_handleTranscriptScrollToggle\"\n            on-print-transcript=\"_handlePrinting\"\n            print-icon$=\"[[printIcon]]\"\n            print-label$=\"[[printLabel]]\"\n            stand-alone$=\"[[standAlone]]\"\n            search-label$=\"[[searchLabel]]\"\n            search-prev-label$=\"[[searchPrevLabel]]\"\n            search-prev-icon$=\"[[searchPrevIcon]]\"\n            search-next-label$=\"[[searchNextLabel]]\"\n            search-next-icon$=\"[[searchNextIcon]]\"\n            skip-transcript-link$=\"[[skipTranscriptLink]]\"\n          >\n          </a11y-media-transcript-controls>\n          <a11y-media-transcript\n            id=\"transcript\"\n            accent-color$=\"[[accentColor]]\"\n            dark$=\"[[darkTranscript]]\"\n            disable-scroll$=\"[[disableScroll]]\"\n            disable-search$=\"[[disableSearch]]\"\n            disable-interactive$=\"[[disableInteractive]]\"\n            hide-timestamps$=\"[[hideTimestamps]]\"\n            on-cue-seek=\"_handleCueSeek\"\n            search=\"[[search]]\"\n          >\n          </a11y-media-transcript>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.__playerAttached = true;\n    window.A11yMediaUtility.requestAvailability();\n    root._addResponsiveUtility();\n    window.dispatchEvent(new CustomEvent(\"a11y-player\", { detail: root }));\n    if (root.isYoutube) {\n      window.A11yMediaYoutubeUtility.requestAvailability();\n      root._youTubeRequest();\n    }\n  }\n\n  /**\n   * sets initial values and loads video or youtube iframe\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      aspect = 16 / 9,\n      tracks = new Array();\n    root.__playerReady = true;\n    root.__interactive = !root.disableInteractive;\n    root.target = root.shadowRoot.querySelector(\"#transcript\");\n    root.__status = root.loadingLabel;\n    root.__slider = root.$.slider;\n    root.__volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.__resumePlaying = false;\n    root.__showFullscreen = !this.disableFullscreen && screenfull.enabled;\n    root.__duration = 0;\n    root.$.controls.setStatus(root.__status);\n    root.width = root.width !== null ? root.width : \"100%\";\n    root.style.maxWidth = root.width !== null ? root.width : \"100%\";\n    root.$.sources.style.paddingTop = 100 / aspect + \"%\";\n    root.querySelectorAll(\"source,track\").forEach(function(node) {\n      root.$.loader.media.appendChild(node);\n    });\n    if (this.isYoutube) {\n      root.disableInteractive = true;\n      this._youTubeRequest();\n    } else {\n      root.media = root.$.loader;\n    }\n    root.$.transcript.setMedia(root.$.player);\n\n    // handles fullscreen\n    if (root.__showFullscreen) {\n      screenfull.on(\"change\", () => {\n        this.fullscreen = screenfull.isFullscreen;\n      });\n    }\n  }\n\n  /**\n   * plays the media\n   */\n  play(e) {\n    let root = this;\n    root.__playing = true;\n    if (e === undefined || e.detail === root.$.playbutton) {\n      // while playing, update the slider and length\n      root.__playProgress = setInterval(() => {\n        root.__elapsed =\n          root.media.getCurrentTime() > 0 ? root.media.getCurrentTime() : 0;\n        root.__duration = root.media.duration > 0 ? root.media.duration : 0;\n        root._updateCustomTracks();\n        root.__status =\n          root._getHHMMSS(root.media.getCurrentTime(), root.__duration) +\n          \"/\" +\n          root._getHHMMSS(root.__duration);\n        root.$.controls.setStatus(root.__status);\n        // if the video reaches the end and is not set to loop, stop\n        if (root.__elapsed === root.__duration && !root.loop) {\n          root.__playing = false;\n          clearInterval(root.__playProgress);\n        }\n\n        //updated buffered section of the slider\n        root.__buffered = root.media.getBufferedTime;\n      }, 1);\n      window.dispatchEvent(\n        new CustomEvent(\"a11y-player-playing\", { detail: root })\n      );\n      root.media.play();\n    }\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    let root = this;\n    root.__playing = false;\n    root.media.pause();\n\n    //stop updating the slider and length\n    clearInterval(root.__playProgress);\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks media backward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  rewind(amt) {\n    amt = amt !== undefined ? amt : 1;\n    this.seek(Math.max(this.media.getCurrentTime() - amt, 0));\n  }\n\n  /**\n   * seeks media forward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  forward(amt) {\n    amt = amt !== undefined ? amt : 1;\n    this.seek(Math.min(this.media.getCurrentTime() + amt, this.__duration));\n  }\n\n  /**\n   * seeks to a specific time\n   *\n   * @param {float} the time, in seconds, to seek\n   */\n  seek(time) {\n    let seekable =\n      this.media !== undefined && this.media !== null\n        ? this.media.seekable\n        : [];\n    if (\n      seekable.length > 0 &&\n      time >= seekable.start(0) &&\n      time <= seekable.end(0)\n    ) {\n      this.media.seek(time);\n      this.__elapsed = time;\n      this.__status =\n        this._getHHMMSS(this.media.getCurrentTime(), this.__duration) +\n        \"/\" +\n        this._getHHMMSS(this.__duration);\n      this.$.controls.setStatus(this.__status);\n      this._updateCustomTracks();\n      if (this.__resumePlaying) this.play();\n    }\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {integer} the index of the track\n   */\n  selectTrack(index) {\n    this.$.loader.selectTrack(index);\n    this.$.transcript.setActiveTranscript(index);\n  }\n\n  /**\n   * set volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.volume = value !== null ? value : 70;\n    this.media.setVolume(this.volume);\n    this.muted = this.volume === 0;\n  }\n\n  /**\n   * set speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    value = value !== null ? value : 1;\n    this.media.setPlaybackRate(value);\n  }\n\n  /**\n   * toggles captions\n   *\n   * @param {boolean} Toggle CC on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleCC(mode) {\n    this.cc = mode === undefined ? !this.cc : mode;\n    this.$.loader.setCC(this.cc);\n  }\n\n  /**\n   * toggles looping\n   *\n   * @param {boolean} Toggle looping on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleLoop(mode) {\n    if (this.isYoutube) {\n    } else {\n      this.loop = mode === undefined ? !this.loop : mode;\n      this.media.setLoop(this.loop);\n    }\n  }\n\n  /**\n   * toggles mute\n   *\n   * @param {boolean} Toggle mute on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleMute(mode) {\n    this.muted = mode === undefined ? !this.muted : mode;\n    this.__volume = this.muted ? 0 : Math.max(this.volume, 10);\n    this.media.setMute(this.muted);\n  }\n\n  /**\n   * toggles sticky attribute\n   *\n   * @param {boolean} Toggle sticky mode on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleSticky(mode) {\n    mode = mode === undefined ? !this.sticky : mode;\n    this.sticky = mode;\n    this.dispatchEvent(new CustomEvent(\"player-sticky\", { detail: this }));\n  }\n\n  /**\n   * toggles transcript\n   *\n   * @param {boolean} Toggle transcript on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleTranscript(mode) {\n    mode = mode === undefined ? this.hideTranscript : mode;\n    this.hideTranscript = !mode;\n    if (this.$.transcript !== undefined && this.$.transcript !== null) {\n      this.dispatchEvent(\n        new CustomEvent(\"transcript-toggle\", { detail: this })\n      );\n      this.$.transcript.toggleHidden(this.hideTranscript);\n    }\n  }\n\n  /**\n   * gets media caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the title of the media\n   * @returns {string} the media caption\n   */\n  _getMediaCaption(audioOnly, audioLabel, mediaTitle) {\n    let hasMediaTitle =\n      mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * gets print caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the text that indicates this player is for video\n   * @param {string} the title of the media\n   * @returns {string} the media caption when the page is printed\n   */\n  _getPrintCaption(audioOnly, audioLabel, videoLabel, mediaTitle) {\n    let hasMediaTitle =\n      mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle + \" (\" + videoLabel + \")\";\n    } else {\n      return videoLabel;\n    }\n  }\n\n  /**\n   * get label based on whether or not the video is playing\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _getThumbnailCSS(thumbnailSrc) {\n    return thumbnailSrc != null\n      ? \"background-image: url(\" + thumbnailSrc + \"); background-size: cover;\"\n      : null;\n  }\n\n  /**\n   * loads track metadata\n   */\n  _getTrackData() {\n    // gets cues from tracks\n    let root = this,\n      media = root.$.loader.media,\n      tdata = new Array(),\n      selected = 0;\n    root.hasTranscript = !root.standAlone;\n    // hides the video subtitles and captions and adds them to the tracks dropdown-select\n    //gets and updates track metadata\n    for (let i = 0; i < media.textTracks.length; i++) {\n      if (media.textTracks[i] !== null) {\n        let track = media.textTracks[i],\n          tidata = {},\n          loaded = track.cues !== undefined,\n          complete = 0,\n          label = track.label,\n          lang = track.language,\n          text =\n            label !== undefined\n              ? label\n              : lang !== undefined\n              ? lang\n              : \"Track \" + i,\n          cues,\n          loadCueData = setInterval(() => {\n            track.mode = \"showing\";\n            if (track.cues !== undefined && track.cues.length > 0) {\n              track.mode = \"hidden\";\n              getCueData();\n              clearInterval(loadCueData);\n            }\n          }, 1),\n          getCueData = function() {\n            track.mode = \"hidden\";\n\n            let cues = Object.keys(track.cues).map(function(key) {\n              return {\n                order: track.cues[key].id !== \"\" ? track.cues[key].id : key,\n                seek: track.cues[key].startTime,\n                seekEnd: track.cues[key].endTime,\n                start: root._getHHMMSS(\n                  track.cues[key].startTime,\n                  root.media.duration\n                ),\n                end: root._getHHMMSS(\n                  track.cues[key].endTime,\n                  root.media.duration\n                ),\n                text: track.cues[key].text\n              };\n            });\n            tidata = {\n              text: text,\n              language: lang,\n              value: i,\n              cues: cues\n            };\n            tdata.push(tidata);\n            root.set(\"tracks\", tdata);\n            root.$.controls.setTracks(tdata);\n            root.$.transcript.setTracks(tdata);\n            root.selectTrack(track.default ? i : 0);\n\n            track.oncuechange = function(e) {\n              root.$.transcript.setActiveCues(\n                Object.keys(e.currentTarget.activeCues).map(function(key) {\n                  return e.currentTarget.activeCues[key].id;\n                })\n              );\n            };\n          };\n      }\n    }\n    if (media.textTracks.length > 0) {\n      root.hasCaptions = true;\n    } else {\n      root.standAlone = true;\n    }\n  }\n\n  /**\n   * handles the seek function when a transcript cue is activated\n   */\n  _handleCueSeek(e) {\n    let root = this;\n    if (\n      !root.standAlone &&\n      root.$.transcript !== undefined &&\n      root.$.transcript !== null\n    ) {\n      root.__resumePlaying = root.__playing;\n      root.seek(e.detail);\n    }\n  }\n\n  /**\n   * handles media metadata when media is loaded\n   */\n  _handleMediaLoaded(e) {\n    let root = this,\n      aspect = root.media.aspectRatio;\n    root.$.sources.style.paddingTop = 100 / aspect + \"%\";\n    root.$.playbutton.removeAttribute(\"disabled\");\n\n    // gets and converts video duration\n    root.__duration = root.media.duration > 0 ? root.media.duration : 0;\n    root.__status =\n      root._getHHMMSS(0, root.media.duration) +\n      \"/\" +\n      root._getHHMMSS(root.media.duration);\n    root.$.controls.setStatus(root.__status);\n    root._getTrackData(root.$.loader.media);\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.$.transcript.print(root.mediaTitle);\n  }\n\n  /**\n   * sets search the simple-search element\n   */\n  _handleSearchAdded(e) {\n    this.search = e.detail;\n  }\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderDragging(e) {\n    let root = this;\n    root._toggleSliderSeek(\n      root.$.slider.dragging,\n      root.$.slider.immediateValue\n    );\n  }\n\n  /**\n   * handles duration slider dragging with a keyboard\n   */\n  _handleSliderKeyboard(e) {\n    let root = this;\n    root._toggleSliderSeek(root.$.slider.focused, root.$.slider.value);\n  }\n\n  /**\n   * handles transcript scroll toggle\n   */\n  _handleTranscriptScrollToggle(e) {\n    this.disableScroll = !this.disableScroll;\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onControlsChanged(e) {\n    let root = this,\n      action = e.detail.label !== undefined ? e.detail.label : e.detail.id;\n    if (action === \"backward\" || action === root.rewindLabel) {\n      root.rewind(root.__duration / 20);\n    } else if (\n      action === \"closed captions\" ||\n      action === \"captions\" ||\n      action === root.captionsLabel ||\n      action === root.captionsMenuLabel\n    ) {\n      root.toggleCC();\n    } else if (\n      action === \"transcript\" ||\n      action === \"transcript-toggle\" ||\n      action === root.transcriptLabel ||\n      action === root.transcriptMenuLabel\n    ) {\n      root.toggleTranscript();\n    } else if (e.detail.id === \"tracks\") {\n      if (e.detail.value === \"\") {\n        root.toggleCC(false);\n      } else {\n        root.toggleCC(true);\n        root.selectTrack(e.detail.value);\n      }\n    } else if (action === \"forward\" || action === root.forwardLabel) {\n      root.forward(root.__duration / 20);\n    } else if (action === \"full screen\" || action === root.fullscreenLabel) {\n      this.toggleTranscript(this.fullscreen);\n      screenfull.toggle(root.$.outerplayer);\n    } else if (action === \"loop\" || action === root.loopLabel) {\n      root.toggleLoop();\n    } else if (\n      action === \"mute\" ||\n      action === \"unmute\" ||\n      action === root.muteLabel ||\n      action === root.unmuteLabel\n    ) {\n      root.toggleMute();\n    } else if (action === \"pause\" || action === root.pauseLabel) {\n      root.pause();\n    } else if (action === \"play\" || action === root.playLabel) {\n      root.play();\n    } else if (action === \"restart\" || action === root.restartLabel) {\n      root.seek(0);\n      root.play();\n    } else if (action === \"speed\" || action === root.speedLabel) {\n      root.setPlaybackRate(e.detail.value);\n    } else if (action === \"volume\" || action === root.volumeLabel) {\n      root.setVolume(e.detail.value);\n    }\n  }\n\n  /**\n   * handles slider seeking via mouse or keyboard\n   *\n   * @param {boolean} Is the slider currently being used to seek?\n   * @param {number} the value of the slider\n   */\n  _toggleSliderSeek(seeking, value) {\n    if (seeking) {\n      if (this.__playing) this.__resumePlaying = true;\n      this.pause();\n    } else {\n      this.seek(value);\n      this.__resumePlaying = false;\n    }\n  }\n\n  /**\n   * gets YouTube iframe\n   */\n  _youTubeRequest() {\n    let root = this,\n      ytUtil = window.A11yMediaYoutubeUtility.instance;\n    if (root.__playerAttached && root.__playerReady) {\n      let ytInit = function() {\n          // initialize the YouTube player\n          root.media = ytUtil.initYoutubePlayer({\n            width: \"100%\",\n            height: \"100%\",\n            videoId: root.youtubeId\n          });\n          // move the YouTube iframe to the media player's YouTube container\n          root.$.youtube.appendChild(root.media.a);\n          root._getTrackData(root.$.loader.media);\n          root._updateCustomTracks();\n          // youtube API doesn't immediately give length of a video\n          let int = setInterval(() => {\n            if (root.media.getDuration !== undefined) {\n              clearInterval(int);\n              root.__duration = root.media.duration = root.media.getDuration();\n              root.__status =\n                root._getHHMMSS(0, root.media.duration) +\n                \"/\" +\n                root._getHHMMSS(root.media.duration);\n              root.$.controls.setStatus(root.__status);\n              root.disableInteractive = !root.__interactive;\n            }\n          }, 100);\n        },\n        checkApi = function(e) {\n          if (ytUtil.apiReady) {\n            document.removeEventListener(\"youtube-api-ready\", checkApi);\n            ytInit();\n          }\n        };\n      if (ytUtil.apiReady) {\n        ytInit();\n      } else {\n        document.addEventListener(\"youtube-api-ready\", checkApi);\n      }\n    }\n  }\n\n  /**\n   * updates custom tracks for youTube\n   */\n  _updateCustomTracks() {\n    if (this._hasCustomCaptions(this.isYoutube, this.audioOnly, this.tracks)) {\n      let root = this,\n        track = root.tracks[this.$.transcript.selectedTranscript],\n        active = [],\n        caption = \"\";\n      if (\n        track !== undefined &&\n        track !== null &&\n        track.cues !== undefined &&\n        track.cues !== null\n      ) {\n        for (let i = 0; i < track.cues.length; i++) {\n          if (\n            track.cues[i].seek < root.__elapsed &&\n            track.cues[i].seekEnd > root.__elapsed\n          ) {\n            active.push(track.cues[i].order);\n            caption = caption === \"\" ? track.cues[i].text : caption;\n          }\n        }\n        root.$.customcctxt.innerText = caption;\n        root.$.audiocc.innerText = caption;\n        root.$.transcript.setActiveCues(active);\n      }\n    }\n  }\n}\nwindow.customElements.define(A11yMediaPlayer.tag, A11yMediaPlayer);\n"],"names":["A11yMediaBehaviors","SimpleColors","attr","val","options","window","ResponsiveUtility","requestAvailability","dispatchEvent","CustomEvent","detail","undefined","element","this","attribute","relativeToParent","max","a","b","i","none","Math","floor","round","autoplay","type","Boolean","value","cc","height","Number","isYoutube","computed","lang","String","loop","manifest","muted","preload","playbackRate","status","selectedTrack","Object","selectedTrackID","tracks","Array","volume","youtubeId","youTube","customElements","define","tag","A11yMediaPlayerProperties","audioOnly","thumbnailSrc","noHeight","disableFullscreen","test","navigator","userAgent","responsiveSize","_testAttribute","hasCaptions","_hasCustomCaptions","standAlone","hideTranscript","stackedLayout","allowConcurrent","reflectToAttribute","audioLabel","autoScrollLabel","autoScrollIcon","captionsIcon","captionsLabel","captionsMenuLabel","captionsMenuOff","compactControls","crossorigin","darkTranscript","disableInteractive","disableSearch","disableScroll","disablePrintButton","flexLayout","forwardIcon","forwardLabel","fullscreen","fullscreenButton","notify","fullscreenIcon","fullscreenLabel","hasTranscript","hideElapsedTime","hideTimestamps","loadingLabel","loopLabel","media","mediaTitle","muteIcon","muteLabel","noPlayButton","pauseIcon","pauseLabel","playIcon","playing","playLabel","printLabel","printIcon","restartIcon","restartLabel","rewindIcon","rewindLabel","search","searchIcon","searchLabel","searchNextButtonIcon","searchNextButtonLabel","searchNextIcon","searchNextLabel","searchPrevButtonIcon","searchPrevButtonLabel","searchPrevIcon","searchPrevLabel","settingsIcon","settingsLabel","showCustomCaptions","skipTranscriptLink","speedLabel","target","transcriptIcon","transcriptLabel","transcriptMenuLabel","uiLanguage","unmuteIcon","unmuteLabel","videoLabel","volumeLabel","width","A11yMediaButton","__target","$","button","controls","icon","label","toggle","disabled","html","A11yMediaControls","_addResponsiveUtility","sm","md","lg","xl","root","mute","onfocus","classList","add","onblur","remove","statbar","innerText","statmenu","set","slice","e","__selectedTrack","control","playPause","muteUnmute","A11yMediaLoader","video","audio","duration","seekable","setVolume","setMute","setCC","setLoop","setPlaybackRate","aspectRatio","videoWidth","videoHeight","buffered","length","end","getCurrentTime","currentTime","play","pause","index","textTracks","parseInt","mode","seek","time","selectedTrackId","A11yMediaPlayButton","text","img","thumbnail","check","setInterval","naturalWidth","clearInterval","aspect","naturalHeight","style","A11yMediaTranscriptCue","setAttribute","mediaId","content","enableSearch","addEventListener","_handleTap","cue","activeCues","includes","order","toString","active","A11yMediaTranscript","player","inner","document","getElementById","querySelector","hidden","track","shadowRoot","cloneNode","css","h1","innerHTML","print","open","body","appendChild","close","focus","notifyPath","render","cues","offset","offsetTop","scrollingTo","to","perTick","scrollTop","setTimeout","selectedTranscript","tabIndex","role","A11yMediaTranscriptControls","simplesearch","A11yMediaUtility","instance","createElement","__playerLoader","players","push","PolymerElement","stickyPlayer","__stickyManager","setStickyPlayer","__scrollChecker","_checkScroll","playeri","parent","_getParentNode","__playerTop","__playerUpperMiddle","offsetHeight","__playerLowerMiddle","toggleSticky","__parent","checkConcurrentPlayers","wintop","pageYOffset","winbottom","innerHeight","__playing","node","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","removeEventListener","A11yMediaYoutubeUtility","api","onYouTubeIframeAPIReady","event","apiReady","temp","div","counter","iframe","YT","Player","videoId","playerVars","color","disablekb","enablejsapi","iv_load_policy","modestbranding","showinfo","rel","playVideo","pauseVideo","seekTo","unMute","start","A11yMediaPlayer","__playerAttached","_youTubeRequest","__playerReady","__interactive","__status","__slider","slider","__volume","__resumePlaying","__showFullscreen","screenfull","enabled","__duration","setStatus","maxWidth","sources","paddingTop","querySelectorAll","forEach","loader","transcript","setMedia","on","_this","isFullscreen","playbutton","__playProgress","__elapsed","_updateCustomTracks","_getHHMMSS","__buffered","getBufferedTime","amt","min","selectTrack","setActiveTranscript","sticky","toggleHidden","hasMediaTitle","tdata","tidata","complete","language","getCueData","loadCueData","keys","map","key","id","startTime","seekEnd","endTime","setTracks","default","oncuechange","setActiveCues","currentTarget","removeAttribute","_getTrackData","_toggleSliderSeek","dragging","immediateValue","focused","action","rewind","toggleCC","toggleTranscript","forward","outerplayer","toggleLoop","toggleMute","seeking","ytUtil","ytInit","initYoutubePlayer","youtube","int","getDuration","checkApi","caption","customcctxt","audiocc","mediaCaption","printCaption","stickyCorner"],"mappings":"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"}