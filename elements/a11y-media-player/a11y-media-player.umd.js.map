{"version":3,"file":"a11y-media-player.umd.js","sources":["lib/a11y-media-behaviors.js","lib/a11y-media-video-loader.js","lib/a11y-media-play-button.js","lib/a11y-media-button.js","lib/a11y-media-controls.js","lib/a11y-media-transcript-cue.js","lib/a11y-media-transcript.js","lib/a11y-media-transcript-controls.js","lib/a11y-media-utility.js","lib/a11y-media-youtube-utility.js","a11y-media-player.umd.js"],"sourcesContent":["import \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\n/**\n`a11y-media-behaviors`\nA set of behaviors for a11y-media components.\n@microcopy - the mental model for this element\n - \n - \n*/\nwindow.a11yMediaBehaviors = window.a11yMediaBehaviors || {};\nwindow.a11yMediaBehaviors.MediaProps = {\n  properties: {\n    /**\n     * autoplay is an option,\n     * but generally not recommended for a11y\n     */\n\n    autoplay: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * show closed captions\n     */\n    cc: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The height of the media player.\n     */\n    height: {\n      type: Number,\n      value: null\n    },\n    /**\n     * is YouTube?\n     */\n    isYoutube: {\n      type: Boolean,\n      computed: \"_hasAttribute(youtubeId)\"\n    },\n    /**\n     * Language\n     */\n    lang: {\n      type: String,\n      value: \"en\"\n    },\n    /**\n     * Loop the video?\n     */\n    loop: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Dash.js manifest source?\n     */\n    manifest: {\n      type: String,\n      value: null\n    },\n    /**\n     * Is audio muted?\n     */\n    muted: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Preload the sources: auto, metadata (default), or none.\n     */\n    preload: {\n      type: String,\n      value: \"metadata\"\n    },\n    /**\n     * Playback rate where 1 is normal speed, 0.5 is half-speed, and 2 is double speed\n     */\n    playbackRate: {\n      type: Number,\n      value: 1\n    },\n    /**\n     * status\n     */\n    status: {\n      type: String,\n      value: \"loading...\"\n    },\n    /**\n     * the selected track\n     */\n    selectedTrack: {\n      type: Object,\n      value: null\n    },\n    /**\n     * id of the selected track\n     */\n    selectedTrackID: {\n      type: Number,\n      value: null\n    },\n    /**\n     * array of tracks and cues\n     */\n    tracks: {\n      type: Array,\n      value: null\n    },\n    /**\n     * Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n     */\n    volume: {\n      type: Number,\n      value: 70\n    },\n    /**\n     * the id for the video\n     */\n    youtubeId: {\n      type: String,\n      value: null\n    },\n    /**\n     * the YouTube player object\n     */\n    youTube: {\n      type: Object,\n      value: {}\n    }\n  },\n  /**\n   * returns true if an attribute is not null\n   */\n\n  _hasAttribute: function(attr) {\n    return attr !== undefined && attr !== null;\n  },\n  /**\n   * returns true if an attribute is set to a value\n   */\n\n  _testAttribute: function(attr, val) {\n    return attr === val;\n  }\n};\nwindow.a11yMediaBehaviors.GeneralFunctions = {\n  /**\n   * calls responsive-utility to get parent's responsive size\n   */\n\n  _addResponsiveUtility: function(data) {\n    let root = this,\n      data2 =\n        data !== undefined\n          ? data\n          : {\n              element: root,\n              attribute: \"responsive-size\",\n              relativeToParent: true\n            };\n    window.ResponsiveUtility.requestAvailability();\n    root.fire(\"responsive-element\", data2);\n  },\n  /**\n   * converts time in millesconds to HH:MM:SS\n   */\n  _getHHMMSS: function(val, max) {\n    max = max === undefined ? val : max;\n    let a = val => {\n        return val < 10 ? \"0\" + val : val;\n      },\n      b = (val, i, none) => {\n        return max >= i ? a(Math.floor(val / i)) + \":\" : none;\n      },\n      c = val => {\n        return val < 100 ? val + \"0\" : val;\n      };\n    return (\n      b(val, 3600, \"\") + b(val % 3600, 60, \"00:\") + a(Math.round(val % 60))\n    );\n  }\n  /** TODO - I may not need this\n    * converts time in millesconds to HH:MM:SS\n  _getSeconds: function(val){\n    let total = 0, units = val.split(':').reverse();\n    total = units[0] !== undefined && units[0] !== null ? units[0]/1000 : 0; //ms\n    total += units[1] !== undefined && units[1] !== null ? units[1] : 0; //ss\n    total += units[2] !== undefined && units[2] !== null ? units[2]*60 : 0; //mm\n    total += units[3] !== undefined && units[3] !== null ? units[3]*3600 : 0; //hh\n    console.log(units,total);\n    return total;\n  }\n    */\n};\nwindow.a11yMediaBehaviors.PlayerBehaviors = {\n  properties: {\n    /**\n     * Optional accent color for controls,\n     * using the following materialize colors:\n     * red, pink, purple, deep-purple, indigo, blue,\n     * light blue, cyan, teal, green, light green, lime,\n     * yellow, amber, orange, deep-orange, and brown.\n     * Default is null.\n     */\n    accentColor: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Allow this media to play concurrently with other a11y-media-players?\n     * Default is to pause this a11y-media-player when other a11y-media-player starts playing.\n     */\n\n    allowConcurrent: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Is this an audio file?\n     */\n\n    audioOnly: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Use compact controls?\n     */\n    compactControls: {\n      type: Boolean,\n      computed: \"_getCompactControls(responsiveSize)\",\n      reflectToAttribute: true\n    },\n    /**\n     * crossorigin attribute for <video> and <audio> tags\n     */\n    crossorigin: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Enables darker player.\n     */\n    dark: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * disable fullscreen option\n     */\n    disableFullscreen: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Determines if video and transcript are in a flex layout\n     */\n    flexLayout: {\n      type: Boolean,\n      computed:\n        \"_isFlexLayout(standAlone,hideTranscript,noHeight,stackedLayout)\",\n      reflectToAttribute: true\n    },\n    /**\n     * Is fullscreen mode?\n     */\n    fullscreen: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * show the FullscreenButton?\n     */\n    fullscreenButton: {\n      type: Boolean,\n      computed: \"_getFullscreenButton(disableFullscreen)\",\n      notify: true\n    },\n    /**\n     * Does the player have tracks?\n     */\n    hasCaptions: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Does the player have an interactive transcript?\n     */\n    hasTranscript: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Hide elapsed time?\n     */\n    hideElapsedTime: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Hide the transcript?\n     */\n    hideTranscript: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * optional title of media (shows when printed)\n     */\n    mediaTitle: {\n      type: String,\n      value: \"\",\n      reflectToAttribute: true\n    },\n    /**\n     * Is it an audio player with no thumbnail?\n     */\n    noHeight: {\n      type: Boolean,\n      computed: \"_getNoHeight(audioOnly,thumbnailSrc)\",\n      reflectToAttribute: true\n    },\n    /**\n     * Hide the giant play button?\n     */\n    noPlayButton: {\n      type: Boolean,\n      computed: \"_noPlayButton(noHeight,isYoutube)\"\n    },\n    /**\n     * Is media playing?\n     */\n    playing: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Size of the a11y media element for responsive styling\n     */\n    responsiveSize: {\n      type: String,\n      notify: true,\n      reflectToAttribute: true\n    },\n    /**\n     * is YouTube?\n     */\n    showCustomCaptions: {\n      type: Boolean,\n      computed: \"_showCustomCaptions(isYoutube,audioOnly,cc)\"\n    },\n    /**\n     * Is stand-alone player (without transcript)?\n     */\n    standAlone: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n     */\n    sticky: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * When playing but scrolled off screen, to which corner does it stick:\n     * top-left, top-right, bottom-left, bottom-right, or none?\n     * Default is \"top-right\". \"None\" disables stickiness.\n     */\n    stickyCorner: {\n      type: String,\n      value: \"top-right\",\n      reflectToAttribute: true\n    },\n    /**\n     * Source of optional thumbnail image\n     */\n    thumbnailSrc: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * The width of the media player.\n     */\n    width: {\n      type: String,\n      value: null\n    },\n    /**\n     * label/microcopy for audio\n     */\n    audioLabel: {\n      type: String,\n      value: \"audio\"\n    },\n    /**\n     * icon for closed captions button on player controls\n     */\n    captionsIcon: {\n      type: String,\n      value: \"av:closed-caption\"\n    },\n    /**\n     * label for closed captions button on player controls\n     */\n    captionsLabel: {\n      type: String,\n      value: \"closed captions\"\n    },\n    /**\n     * label for captions drop-down menu on settings menu of player controls\n     */\n    captionsMenuLabel: {\n      type: String,\n      value: \"Captions\"\n    },\n    /**\n     * label for captions off drop-down menu item on settings menu of player controls\n     */\n    captionsMenuOff: {\n      type: String,\n      value: \"Off\"\n    },\n    /**\n     * the interface UI language\n     */\n    uiLanguage: {\n      type: String,\n      value: \"en\"\n    },\n    /**\n     * icon for forward button on player controls\n     */\n    forwardIcon: {\n      type: String,\n      value: \"av:fast-forward\"\n    },\n    /**\n     * label for rewind button on player controls\n     */\n    forwardLabel: {\n      type: String,\n      value: \"forward\"\n    },\n    /**\n     * icon for fullscreen button on transcript\n     */\n    fullscreenIcon: {\n      type: String,\n      value: \"fullscreen\"\n    },\n    /**\n     * label for fullscreen button on transcript\n     */\n    fullscreenLabel: {\n      type: String,\n      value: \"fullscreen\"\n    },\n    /**\n     * label for loading status\n     */\n    loadingLabel: {\n      type: String,\n      value: \"Loading...\"\n    },\n    /**\n     * label for loop menu item on settings menu of player controls\n     */\n    loopLabel: {\n      type: String,\n      value: \"Loop Playback\"\n    },\n    /**\n     * icon for mute button on player controls\n     */\n    muteIcon: {\n      type: String,\n      value: \"av:volume-up\"\n    },\n    /**\n     * label for fullscreen button on player controls\n     */\n    muteLabel: {\n      type: String,\n      value: \"mute\"\n    },\n    /**\n     * icon for pause button on player controls\n     */\n    pauseIcon: {\n      type: String,\n      value: \"av:pause\"\n    },\n    /**\n     * label for pause button on player controls\n     */\n    pauseLabel: {\n      type: String,\n      value: \"pause\"\n    },\n    /**\n     * icon for play button on player controls\n     */\n    playIcon: {\n      type: String,\n      value: \"av:play-arrow\"\n    },\n    /**\n     * label for play button on player controls\n     */\n    playLabel: {\n      type: String,\n      value: \"play\"\n    },\n    /**\n     * icon for restart button on player controls\n     */\n    restartIcon: {\n      type: String,\n      value: \"av:replay\"\n    },\n    /**\n     * label for restart button on player controls\n     */\n    restartLabel: {\n      type: String,\n      value: \"restart\"\n    },\n    /**\n     * icon for rewind button on player controls\n     */\n    rewindIcon: {\n      type: String,\n      value: \"av:fast-rewind\"\n    },\n    /**\n     * label for rewind button on player controls\n     */\n    rewindLabel: {\n      type: String,\n      value: \"backward\"\n    },\n    /**\n     * icon for settings menu on player controls\n     */\n    settingsIcon: {\n      type: String,\n      value: \"settings\"\n    },\n    /**\n     * label for settings menu on player controls\n     */\n    settingsLabel: {\n      type: String,\n      value: \"settings\"\n    },\n    /**\n     * label for speed menu item on settings menu of player controls\n     */\n    speedLabel: {\n      type: String,\n      value: \"Speed %\"\n    },\n    /**\n     * icon for transcript button on player controls\n     */\n    transcriptIcon: {\n      type: String,\n      value: \"description\"\n    },\n    /**\n     * label for transcript button on player controls\n     */\n    transcriptLabel: {\n      type: String,\n      value: \"transcript\"\n    },\n    /**\n     * label for transcript menu item on settings menu of player controls\n     */\n    transcriptMenuLabel: {\n      type: String,\n      value: \"Transcript\"\n    },\n    /**\n     * icon for unmute button on player controls\n     */\n    unmuteIcon: {\n      type: String,\n      value: \"av:volume-off\"\n    },\n    /**\n     * label for unmute button on player controls\n     */\n    unmuteLabel: {\n      type: String,\n      value: \"unmute\"\n    },\n    /**\n     * label/microcopy for audio\n     */\n    videoLabel: {\n      type: String,\n      value: \"video\"\n    },\n    /**\n     * label for volume slider on player controls\n     */\n    volumeLabel: {\n      type: String,\n      value: \"volume\"\n    }\n  },\n  /**\n   * returns true if an attribute is set to a value\n   */\n\n  _getNoHeight: function(audioOnly, thumbnailSrc) {\n    return audioOnly && (thumbnailSrc === null || thumbnailSrc === undefined);\n  },\n  /**\n   * returns true if the player has no giant play button\n   */\n\n  _noPlayButton: function(noHeight, isYoutube) {\n    return noHeight || isYoutube;\n  },\n  /**\n   * returns true if an attribute is set to a value\n   */\n\n  _getFullscreenButton: function(disableFullscreen) {\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) ||\n      disableFullscreen\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n  /**\n   * returns true if player is xs or sm and needs to use compact controls\n   */\n\n  _getCompactControls: function(responsiveSize) {\n    return (\n      this._testAttribute(responsiveSize, \"xs\") ||\n      this._testAttribute(responsiveSize, \"sm\")\n    );\n  },\n  /**\n   * returns true if an attribute is set to a value\n   */\n\n  _testAttribute: function(attr, val) {\n    return attr === val;\n  },\n  /**\n   * show youtube closed captions layer?\n   */\n\n  _showCustomCaptions: function(isYoutube, audioOnly, cc) {\n    return (isYoutube || audioOnly) && cc;\n  },\n  /**\n   * Determines if video and transcript are in a flex layout\n   */\n  _isFlexLayout: function(standAlone, hideTranscript, noHeight, stackedLayout) {\n    return !standAlone && !hideTranscript && !noHeight && !stackedLayout;\n  }\n};\nwindow.a11yMediaBehaviors.TranscriptBehaviors = {\n  properties: {\n    /**\n     * Accent color on controls. Default is blue.\n     */\n\n    accentColor: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Use dark theme on transcript? Default is false, even when player is dark.\n     */\n    darkTranscript: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * disable interactive mode that makes the transcript clickable\n     */\n    disableInteractive: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * disable transcript search feature\n     */\n    disableSearch: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * disable autoscrolling as transcript plays\n     */\n    disableScroll: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * disable transcript print button\n     */\n    disablePrintButton: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * show cue's start and end time\n     */\n    hideTimestamps: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * show cue's start and end time\n     */\n    media: {\n      type: Object,\n      value: {}\n    },\n    /**\n     * the search tool for the transcript\n     */\n    search: {\n      type: Object,\n      value: null\n    },\n    /**\n     * label for search input  on transcript\n     */\n    searchLabel: {\n      type: String,\n      value: \"search transcript\"\n    },\n    /**\n     * icon for search input on transcript\n     */\n    searchIcon: {\n      type: String,\n      value: \"search\"\n    },\n    /**\n     * label for the next button on transcript search\n     */\n    searchNextButtonLabel: {\n      type: String,\n      value: \"next result\"\n    },\n    /**\n     * icon for the next button on transcript search\n     */\n    searchNextButtonIcon: {\n      type: String,\n      value: \"arrow-forward\"\n    },\n    /**\n     * label for the previous button on transcript search\n     */\n    searchPrevButtonLabel: {\n      type: String,\n      value: \"previous result\"\n    },\n    /**\n     * icon for the previous button on transcript search\n     */\n    searchPrevButtonIcon: {\n      type: String,\n      value: \"arrow-back\"\n    },\n    /**\n     * stacked layout instead of side-by-side?\n     */\n    stackedLayout: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * target of the controls\n     */\n    target: {\n      type: Object,\n      value: null\n    },\n    /**\n     * label for autoscroll button on transcript controls\n     */\n    autoScrollLabel: {\n      type: String,\n      value: \"auto-scrolling\"\n    },\n    /**\n     * icon for autoscroll button on transcript controls\n     */\n    autoScrollIcon: {\n      type: String,\n      value: \"swap-vert\"\n    },\n    /**\n     * label for print button on player controls\n     */\n    printLabel: {\n      type: String,\n      value: \"print transcript\"\n    },\n    /**\n     * icon for print button on player controls\n     */\n    printIcon: {\n      type: String,\n      value: \"print\"\n    },\n    /**\n     * label for print button on player controls\n     */\n    searchLabel: {\n      type: String,\n      value: \"search transcript\"\n    },\n    /**\n     * label for print button on player controls\n     */\n    searchIcon: {\n      type: String,\n      value: \"search\"\n    },\n    /**\n     * label for print button on player controls\n     */\n    searchNextLabel: {\n      type: String,\n      value: \"next result\"\n    },\n    /**\n     * label for print button on player controls\n     */\n    searchNextIcon: {\n      type: String,\n      value: \"arrow-forward\"\n    },\n    /**\n     * label for print button on player controls\n     */\n    searchPrevLabel: {\n      type: String,\n      value: \"previous result\"\n    },\n    /**\n     * label for print button on player controls\n     */\n    searchPrevIcon: {\n      type: String,\n      value: \"arrow-back\"\n    },\n    /**\n     * label for skip the transcript link before the transcript\n     */\n    skipTranscriptLink: {\n      type: String,\n      value: \"Skip the transcript.\"\n    }\n  }\n};\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"./a11y-media-behaviors.js\";\n/*link rel=\"import\" href=\"dashjs-lib.html\"*/\n/**\n`a11y-media-video-loader`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n\n  <a11y-media-video-loader \n    autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n    cc$=\"[[cc]]\"                                // Are closed captions toggled? \n    height$=\"[[height]]\"                        // The height of player\n    lang$=\"[[lang]]\"                            // The language of the media\n    loop$=\"[[loop]]\"                            // Is video on a loop?\n    muted$=\"[[muted]]\"                          // Is video muted?\n    playback-rate$=\"[[playbackRate]]\"           // The playback rate of the video\n    volume$=\"[[volume]]\"                        // The initial volume of the video\n    width$=\"[[width]]\">                         // The width of player\n                                                // video source and tracks \n    <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n    <source src=\"/path/to/video.webm\" type=\"video/webm\">\n    <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n    <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n    <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n  </a11y-media-video-loader>\n*/\nPolymer({\n  _template: html`\n    <style>\n      #video {\n        width: 100%;\n        max-width: 100%;\n        max-height: 80vh;\n      }\n    </style>\n    <video id=\"video\" autoplay\\$=\"[[autoplay]]\" crossorigin\\$=\"[[crossorigin]]\" hidden\\$=\"[[audioOnly]]\" lang\\$=\"[[lang]]\" src\\$=\"[[manifest]]\" preload=\"metadata\">\n      <slot></slot>\n      HTML5 video not supported \n    </video>\n    <audio id=\"audio\" autoplay\\$=\"[[autoplay]]\" crossorigin\\$=\"[[crossorigin]]\" hidden\\$=\"[[!audioOnly]]\" lang\\$=\"[[lang]]\" src\\$=\"[[manifest]]\" preload=\"metadata\">\n      <slot></slot>\n      HTML5 audio not supported \n    </audio>\n`,\n\n  is: \"a11y-media-video-loader\",\n\n  behaviors: [\n    a11yMediaBehaviors.MediaProps,\n    a11yMediaBehaviors.GeneralFunctions\n  ],\n\n  ready: function() {\n    let root = this;\n    root.media = root.$.video !== undefined ? root.$.video : root.$.audio;\n    /*\n    //handles multibitrate manifests\n    console.log('manifest null?',this.manifest);\n    if(this.manifest !== null){\n      var dash = dashjs.MediaPlayer().create();\n      \n      console.log('manifest',this.manifest);\n      dash.initialize(root.$.video, this.manifest, true);\n    }*/\n\n    // handles loaded metadata\n    root.media.addEventListener(\"loadedmetadata\", function() {\n      root.duration = root.media.duration > 0 ? root.media.duration : 0;\n      root.tracks = [];\n      root.volume = root.muted ? 0 : Math.max(this.volume, 10);\n      root.seekable = root.media.seekable;\n      root.setVolume(root.volume);\n      root.setMute(root.muted, root.volume);\n      root.setCC(root.cc);\n      root.setLoop(root.loop);\n      root.setPlaybackRate(root.playbackRate);\n\n      // adjusts aspect ratio\n      root.aspectRatio = root.media.videoWidth / root.media.videoHeight;\n      root.fire(\"media-loaded\", this);\n    });\n  },\n\n  /**\n   * gets the buffered time\n   */\n  getBufferedTime: function() {\n    return this.media.buffered.length > 0\n      ? this.media.buffered.end(0)\n      : this.getCurrentTime();\n  },\n\n  /**\n   * gets the current time\n   */\n  getCurrentTime: function() {\n    return this.media.currentTime;\n  },\n\n  /**\n   * selects a specific track by index\n   */\n  selectTrack: function(index) {\n    this.selectedTrack = this.media.textTracks[index];\n    for (let i = 0; i < this.media.textTracks.length; i++) {\n      if (parseInt(index) === i) {\n        this.media.textTracks[i].mode = \"showing\";\n      } else if (this.media.textTracks[i] !== null) {\n        this.media.textTracks[i].mode = \"hidden\";\n      }\n    }\n  },\n\n  /**\n   * plays the media\n   */\n  play: function() {\n    this.media.play();\n  },\n\n  /**\n   * pauses the media\n   */\n  pause: function() {\n    this.media.pause();\n  },\n\n  /**\n   * stops the media\n   */\n  stop: function() {\n    this.pause();\n    this.seek(0);\n  },\n\n  /**\n   * restarts the media\n   */\n  restart: function() {\n    this.seek(0);\n    this.play();\n  },\n\n  /**\n   * seeks to a specific time\n   */\n  seek: function(time) {\n    this.media.currentTime = time;\n  },\n\n  /**\n   * sets captions\n   */\n  setCC: function(mode) {\n    this.media.cc = mode;\n    if (this.selectedTrack !== undefined && mode == true) {\n      this.selectedTrack.mode = \"showing\";\n      this.$.video.textTracks.value = this.selectedTrackId;\n    } else if (\n      this.selectedTrack !== undefined &&\n      this.selectedTrack !== null\n    ) {\n      this.selectedTrack.mode = \"hidden\";\n      this.$.video.textTracks.value = \"\";\n    }\n  },\n\n  /**\n   * sets volume of media\n   */\n  setVolume: function(value) {\n    this.media.volume = value / 100;\n  },\n\n  /**\n   * sets speed/playback rate of media\n   */\n  setPlaybackRate: function(value) {\n    this.media.playbackRate = value !== null ? value : 1;\n  },\n\n  /**\n   * sets autoplay\n   */\n  setAutoplay: function(mode) {\n    this.media.autoplay = mode;\n  },\n\n  /**\n   * sets looping\n   */\n  setLoop: function(mode) {\n    this.media.loop = mode;\n  },\n\n  /**\n   * sets mute\n   */\n  setMute: function(mode, value) {\n    this.media.muted = mode;\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"./a11y-media-behaviors.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n/**\n`a11y-media-play-button`\nA giant play button that overlays the media in a11y-media-player\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  <a11y-media-play-button\n    playing$=\"[[__playing]]\"            // Is the media currently playing?\n    thumbnail-css$=\"[[thumbnailCSS]]\"   // Optional source for a thumbnail image\n  </a11y-media-play-button>\n\nCustom styles:\n--a11y-play-button-bg-color: overlay background color, default is #000000\n--a11y-play-button-focus-bg-color: overlay background color, default is --a11y-play-button-bg-color\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        z-index: 2;\n        opacity: 1;\n        transition: opacity 0.5s; \n        position: absolute;\n        height: 100%;\n      }\n      :host([disabled]:not([audio-only])),\n      :host([playing]:not([audio-only])) {\n        opacity: 0;\n      }\n      :host, \n      :host #thumbnail, \n      :host #background, \n      :host #button {\n        width: 100%;\n        max-height: 80vh;\n        top: 0;\n        left: 0;\n        opacity: 1;\n        transition: opacity 0.5s; \n      } \n      :host #thumbnail, \n      :host #background, \n      :host #button {\n        position: absolute;\n        height: 100%;\n        padding:0;\n        margin: 0;\n        border: none;\n      }\n      :host([audio-only][thumbnail-src][playing]) #button > *:not(#thumbnail), \n      :host([audio-only][thumbnail-src][disabled]) #button > *:not(#thumbnail) {\n        opacity: 0;\n      }\n      :host #thumbnail {\n        height: auto;\n        overflow: hidden;\n      }\n      :host #button {\n        overflow: hidden;\n        background: transparent; \n      }\n      :host #button:hover {\n        cursor: pointer;\n      }\n      :host #background {\n        opacity: 0.3;\n        background: var(--a11y-play-button-bg-color);\n      }\n      :host #button:focus #background,\n      :host #button:hover #background {\n        background: var(--a11y-play-button-focus-bg-color);\n        opacity: 0.1;\n      }\n      :host #arrow {\n        stroke: #ffffff;\n        fill: #000000;\n      }\n      :host #text {\n        fill: #ffffff;\n      }\n      :host .sr-only {\n        font-size: 0;\n      }\n      @media print {\n        :host(:not([thumbnail-src])),\n        :host #background, \n        :host #svg {\n          display: none;\n        }\n      }\n    </style>\n    <button id=\"button\" aria-pressed\\$=\"[[playing]]\" aria-hidden\\$=\"[[disabled]]\" tabindex=\"0\" disabled\\$=\"[[disabled]]\" controls=\"video\" title\\$=\"[[label]]\">\n      <div id=\"background\"></div>\n      <svg id=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" width=\"30%\" height=\"30%\" opacity=\"0.7\">\n        <g>\n          <polygon id=\"arrow\" points=\"30,20 30,180 170,100\" fill=\"#000000\" stroke=\"#ffffff\" stroke-width=\"15px\"></polygon>\n          <text id=\"text\" class=\"sr-only\" x=\"50\" y=\"115\" fill=\"#ffffff\" font-size=\"30px\">[[label]]</text>\n        </g>\n      </svg>\n    </button>\n`,\n\n  is: \"a11y-media-play-button\",\n\n  behaviors: [a11yMediaBehaviors.PlayerBehaviors],\n\n  listeners: {\n    tap: \"_buttonTap\"\n  },\n\n  properties: {\n    /**\n     * label for play button on player controls\n     */\n    label: {\n      type: String,\n      computed: \"_getPlaying(playing,pauseLabel,playLabel)\"\n    },\n    /**\n     * label when playing\n     */\n    pauseLabel: {\n      type: String,\n      value: \"play\"\n    },\n    /**\n     * label when paused\n     */\n    playLabel: {\n      type: String,\n      value: \"play\"\n    },\n    /**\n     * is button disabled\n     */\n    disabled: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * is media playing\n     */\n    playing: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * get label based on whether or not the video is playing\n   */\n  attached: function() {\n    this.$.text.innerText = this.playLabel;\n    if (this.audioOnly) {\n      let root = this,\n        img = this.$.thumbnail,\n        check = setInterval(function() {\n          if (img.naturalWidth) {\n            clearInterval(check);\n            let aspect = (img.naturalHeight / img.naturalWidth) * 100;\n            root.style.height = aspect + \"%\";\n            root.fire(\"thumbnail-aspect\", aspect);\n          }\n        }, 10);\n    }\n  },\n\n  /**\n   * get label based on whether or not the video is playing\n   */\n  _getPlaying: function(playing, pauseLabel, playLabel) {\n    return playing ? pauseLabel : playLabel;\n  },\n\n  /**\n   * handle button tap\n   */\n  _buttonTap: function() {\n    this.fire(\"controls-change\", this);\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./a11y-media-behaviors.js\";\n/**\n`a11y-media-button`\nA button used in a11y-media-controls\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n -\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        margin: 0;\n        padding: 0;\n      }\n      :host #button {\n        margin: 0;\n        padding: 8px;\n        line-height: 1;\n        border: none;\n        transition: color 0.25s;\n        color: var(--a11y-media-button-color);\n        background-color: var(--a11y-media-button-bg-color);\n      }\n      :host([toggle]) #button {\n        color: var(--a11y-media-button-toggle-color);\n        background-color: var(--a11y-media-button-toggle-bg-color);\n      }\n      :host([toggle]:active) #button,\n      :host([toggle]:focus) #button,\n      :host([toggle]:hover) #button,\n      :host(:active) #button,\n      :host(:focus) #button,\n      :host(:hover) #button {\n        cursor: pointer;\n        color: var(--a11y-media-button-hover-color);\n        background-color: var(--a11y-media-button-hover-bg-color);\n      }\n      :host .sr-only {\n        position: absolute;\n        left: -99999;\n        top: 0;\n        height: 0;\n        width: 0;\n        overflow: hidden;\n      }\n      :host paper-tooltip {\n        z-index: 100;\n      }\n      iron-icon {\n        display: inline-block;\n      }\n    </style>\n    <button id=\"button\" aria-role=\"button\" aria-pressed$=\"[[toggle]]\" tabindex=\"0\" aria-label$=\"[[label]]\" controls=\"[[controls]]\" disabled$=\"[[disabled]]\" toggle$=\"[[toggle]]\">\n      <iron-icon icon=\"[[icon]]\"></iron-icon>\n    </button>\n    <paper-tooltip for=\"button\">[[label]]</paper-tooltip>\n`,\n\n  is: \"a11y-media-button\",\n\n  behaviors: [a11yMediaBehaviors.PlayerBehaviors],\n\n  listeners: {\n    tap: \"_buttonTap\"\n  },\n\n  properties: {\n    /*\n     * id of element button controls\n     */\n    controls: {\n      type: String,\n      value: \"video\"\n    },\n    /*\n     * iron-icon type\n     */\n    icon: {\n      type: String,\n      value: null\n    },\n    /*\n     * button label\n     */\n    label: {\n      type: String,\n      value: null\n    },\n    /*\n     * Is it toggled on?\n     */\n    toggle: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /*\n     * Is it disabled?\n     */\n    disabled: {\n      type: Boolean,\n      value: null\n    }\n  },\n\n  // sets target for a11y keys\n  ready: function() {\n    this.__target = this.$.button;\n  },\n\n  // lets player know this button was clicked\n  _buttonTap: function() {\n    this.fire(\"button-clicked\", this);\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@lrnwebcomponents/dropdown-select/dropdown-select.js\";\nimport \"./a11y-media-behaviors.js\";\nimport \"./a11y-media-button.js\";\n/**\n`a11y-media-controls`\nThe controls bar for the a11y-media-player.\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n - the control bar for the media player\n\n  <a11y-media-controls \n    accent-color$=\"[[accentColor]]\"             // Optional accent color for controls, \n                                                // using the following materialize colors: \n                                                // red, pink, purple, deep-purple, indigo, blue, \n                                                // light blue, cyan, teal, green, light green, lime, \n                                                // yellow, amber, orange, deep-orange, and brown. \n                                                // Default is null. \n    allow-fullscreen$=\"[[allowFullscreen]]\"         // Allow fullscreen mode?\n    audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n    autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n    cc$=\"[[cc]]\"                                // Are closed captions toggled?\n    dark$=\"[[dark]]\"                            // Is the color scheme dark? Default is light.    \n    disableFullscreen$=\"[[disableFullscreen]]\"  // Is full screen mode disabled?\n    fullscreen$=\"[[fullscreen]]\"                // Is full screen mode toggled on?\n    hide-elapsed-time$=\"[[hideElapsedTime]]\"    // Is elapsed time hidden?\n    loop$=\"[[loop]]\"                            // Is video on a loop?\n    microcopy$=\"[[microcopy]]\"                      // Optional customization or text and icons\n    muted$=\"[[muted]]\"                          // Is video muted?\n    responsive-size$=\"[[responsiveSize]]\"       // The size of the player determines how controls are displayed\n    volume$=\"[[volume]]\">                       // The initial volume of the video\n  </a11y-media-controls>\n -\n -\n\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n      :host {\n        display: block;\n        width: 100%;\n        max-width: 100%;\n        position: relative;\n        height: 44px;\n        color: var(--a11y-media-color);\n        background-color: var(--a11y-media-bg-color);\n        --paper-listbox-background-color: var(--a11y-media-button-bg-color);\n        --paper-listbox-color: var(--a11y-media-button-color);\n        --paper-listbox: {\n          padding: 0;\n        };\n        --paper-menu-button-dropdown-background: var(--a11y-media-button-bg-color);\n        --paper-menu-button: {\n          background-color: var(--a11y-media-button-bg-color);\n          color: var(--a11y-media-button-color);\n        };\n        --paper-menu-button-dropdown: {\n          background-color: var(--a11y-media-button-bg-color);\n          color: var(--a11y-media-button-color);\n          margin-top: 0 !important;\n          margin-bottom: 0 !important;\n        };\n        --paper-item-selected: {\n          color: var(--a11y-media-button-hover-color);\n        };\n        --paper-item-focused: {\n          color: var(--a11y-media-button-hover-color);\n        };\n        --primary-text-color: var(--a11y-media-button-color);\n      }\n      :host > #controls-left {\n        position: absolute;\n        left: 0;\n        min-width: 200px;\n      }\n      :host > #controls-right {\n        position: absolute;\n        right: 0;\n        top: -2px;\n      }\n      :host paper-menu-button,\n      :host dropdown-select {\n        padding: 0;\n      }\n      :host paper-icon-button {\n        background-color: var(--a11y-media-button-bg-color);\n        color: var(--a11y-media-button-color);\n      }\n      :host paper-icon-button:active,\n      :host paper-icon-button:focus,\n      :host paper-icon-button:hover {\n        background-color: var(--a11y-media-button-bg-color);\n        color: var(--a11y-media-button-color);\n      }\n      :host paper-item {\n        min-height: 40;\n      } \n      :host paper-slider {\n        @apply --a11y-media-slider;\n      }\n      :host .play-status, \n      :host paper-icon-button {\n        border: none;\n        position: relative;\n      }\n      :host .play-status {\n        font-size: 85%;\n      }\n      :host .play-status.control-bar {\n        padding: 8px 13px 8px;\n      }\n      :host([hide-play-status]) .play-status {\n        display: none;\n      }\n      :host(:not([has-captions])) .captions {\n        display: none;\n      }\n      :host(:not([has-transcript])) .transcript,\n      :host(.stand-alone) .transcript {\n        display: none;\n      }\n      :host .setting {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n      }\n      :host .setting-text {\n        min-width: 100px;\n      }\n      :host .setting-control {\n        max-width: 100px;\n      }\n      :host .setting-slider {\n        width: 130px;\n        margin-left: -15px;\n        margin-right: -15px;\n        @apply --a11y-media-slider;\n      }\n      :host #speed {\n        --paper-slider-knob-start-color: var(--a11y-media-accent-color);\n        --paper-slider-knob-start-border-color: var(--a11y-media-accent-color);\n        --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n        --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n      }\n      :host #showvolume {\n        display: inline;\n        position: relative;\n      }\n      :host #volume {\n        z-index: 1;\n        position: absolute;\n        left: 0px;\n        top: -8px;\n        width: 0;\n        overflow: hidden;\n        transition: width 0.5s;\n        z-index: 3;\n        background-color: var(--a11y-media-button-bg-color);\n        --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n        --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n      }\n      :host #volume:active,\n      :host #volume:focus,\n      :host #volume:hover,\n      :host #volume.focus,\n      :host #showvolume:active #volume,\n      :host #showvolume:focus #volume,\n      :host #showvolume:hover #volume {\n        overflow: visible;\n        width: 100px;\n      }\n      :host([responsive-size=\"xs\"]) #volume:active,\n      :host([responsive-size=\"xs\"]) #volume:focus,\n      :host([responsive-size=\"xs\"]) #volume:hover,\n      :host([responsive-size=\"xs\"]) #volume.focus,\n      :host([responsive-size=\"xs\"]) #showvolume:active #volume,\n      :host([responsive-size=\"xs\"]) #showvolume:focus #volume,\n      :host([responsive-size=\"xs\"]) #showvolume:hover #volume {\n        top: -35px\n        border-radius: 4px;\n      }\n      :host .sr-only {\n        position: absolute;\n        left: -99999;\n        top: 0;\n        height: 0;\n        width: 0;\n        overflow: hidden;\n      }\n    </style>\n    <div id=\"controls-left\">\n      <a11y-media-button icon=\"[[playPause.icon]]\" label=\"[[playPause.label]]\"></a11y-media-button>\n      <a11y-media-button disabled\\$=\"[[compactControls]]\" hidden\\$=\"[[compactControls]]\" icon=\"[[rewindIcon]]\" label=\"[[rewindLabel]]\"></a11y-media-button>\n      <a11y-media-button disabled\\$=\"[[compactControls]]\" hidden\\$=\"[[compactControls]]\" icon=\"[[forwardIcon]]\" label=\"[[forwardLabel]]\"></a11y-media-button>\n      <a11y-media-button disabled\\$=\"[[compactControls]]\" hidden\\$=\"[[compactControls]]\" icon=\"[[restartIcon]]\" label=\"[[restartLabel]]\"></a11y-media-button>\n      <div id=\"showvolume\">\n        <a11y-media-button id=\"mute\" icon=\"[[muteUnmute.icon]]\" label=\"[[muteUnmute.label]]\"></a11y-media-button>\n        <span id=\"volume-slider-label\" class=\"sr-only\">[[volumeLabel]]</span>\n        <paper-slider aria-labelledby=\"volume-slider-label\" id=\"volume\" min=\"0\" max=\"100\" pin=\"\" step=\"10\" value\\$=\"[[volume]]\"></paper-slider>\n      </div>\n      <span class=\"play-status control-bar\" hidden\\$=\"[[compactControls]]\">\n        <span id=\"statbar\"></span>\n      </span>\n    </div>\n    <div id=\"controls-right\">\n      <a11y-media-button class=\"captions\" hidden=\"[[audioOnly]]\" icon=\"[[captionsIcon]]\" label=\"[[captionsLabel]]\" toggle=\"[[cc]]\">\n      </a11y-media-button>\n      <a11y-media-button class=\"transcript\" controls=\"transcript\" hidden\\$=\"[[compactControls]]\" disabled\\$=\"[[compactControls]]\" icon=\"[[transcriptIcon]]\" label=\"[[transcriptLabel]]\" toggle=\"[[!hideTranscript]]\">\n      </a11y-media-button>\n      <paper-menu-button id=\"settings\" allow-outside-scroll=\"\" vertical-align=\"bottom\" horizontal-align=\"right\" ignore-select=\"\">\n        <paper-icon-button icon\\$=\"[[settingsIcon]]\" slot=\"dropdown-trigger\" alt=\"[[settingsLabel]]\"></paper-icon-button>\n        <paper-listbox id=\"settingslist\" slot=\"dropdown-content\">\n          <paper-item class=\"captions\">\n            <div class=\"setting\">\n              <div class=\"setting-text\">[[captionsMenuLabel]]</div>\n              <div class=\"setting-control\">\n                <dropdown-select id=\"tracks\" no-label-float=\"\" value=\"\">\n                  <paper-item value=\"\">[[captionsMenuOff]]</paper-item>\n                  <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"option\">\n                    <paper-item value\\$=\"{{option.value}}\">{{option.text}}</paper-item>\n                  </template>\n                </dropdown-select>\n              </div>\n            </div>\n          </paper-item>\n          <paper-item hidden\\$=\"[[!compactControls]]\" class=\"transcript\">\n            <div class=\"setting\">\n              <div id=\"transcript-label\" class=\"setting-text\">\n                [[transcriptMenuLabel]]\n              </div>\n              <div class=\"setting-control\">\n                <paper-toggle-button id=\"transcript-toggle\" aria-labelledby=\"transcript-label\" checked\\$=\"[[!hideTranscript]]\" controls=\"transcript\" disabled\\$=\"[[!compactControls]]\">\n                </paper-toggle-button>\n              </div>\n            </div>\n          </paper-item>\n          <paper-item>\n            <div class=\"setting\">\n              <div id=\"speed-label\" class=\"setting-text\">[[speedLabel]]</div>\n              <div class=\"setting-control\">\n                <paper-slider id=\"speed\" aria-labelledby=\"speed-label\" class=\"setting-slider\" label=\"tracks\" min=\"0.5\" max=\"4\" pin=\"\" step=\"0.5\" tab-index=\"-1\" value\\$=\"[[playbackRate]]\"></paper-slider>\n              </div>\n            </div>\n          </paper-item>\n          <paper-item>\n            <div class=\"setting\">\n              <div id=\"loop-label\" class=\"setting-text\">[[loopLabel]]</div>\n              <div class=\"setting-control\">\n                <paper-toggle-button id=\"loop\" aria-labelledby=\"loop-label\" checked\\$=\"[[loop]]\"></paper-toggle-button>\n              </div>\n            </div>\n          </paper-item>\n          <paper-item hidden\\$=\"[[!compactControls]]\">\n            <span class=\"play-status settings-menu\">\n              <span id=\"statmenu\"></span>\n            </span>\n          </paper-item>\n        </paper-listbox>\n      </paper-menu-button>\n      <paper-tooltip for=\"settings\">[[settingsLabel]]</paper-tooltip>\n      <template is=\"dom-if\" if=\"[[fullscreenButton]]\">\n        <template is=\"dom-if\" if=\"[[!noHeight]]\">\n          <a11y-media-button icon=\"[[fullscreenIcon]]\" label=\"[[fullscreenLabel]]\" toggle=\"[[fullscreen]]\" step=\"1\">\n          </a11y-media-button>\n        </template>\n      </template>\n    </div>\n`,\n\n  is: \"a11y-media-controls\",\n\n  behaviors: [\n    a11yMediaBehaviors.MediaProps,\n    a11yMediaBehaviors.GeneralFunctions,\n    a11yMediaBehaviors.PlayerBehaviors\n  ],\n\n  listeners: {\n    \"button-clicked\": \"_onButtonClick\",\n    change: \"_onSettingsChanged\"\n  },\n\n  properties: {\n    /**\n     * play/pause button\n     */\n    playPause: {\n      type: Object,\n      computed: \"_getPlayPause(playing,pauseLabel,pauseIcon,playLabel,playIcon)\"\n    },\n    /**\n     * mute/unmute button\n     */\n    muteUnmute: {\n      type: Object,\n      computed:\n        \"_getMuteUnmute(muted,muteLabel,muteIcon,unmuteLabel,unmuteIcon)\"\n    }\n  },\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   */\n  attached: function() {\n    let root = this;\n    root._addResponsiveUtility({\n      element: root,\n      attribute: \"responsive-size\",\n      relativeToParent: true,\n      sm: 300,\n      md: 600,\n      lg: 900,\n      xl: 1200\n    });\n  },\n\n  ready: function() {\n    let root = this;\n    // when the tracks dropdown-select changes, update track and CC button\n    root.$.tracks.addEventListener(\"change\", function(e) {\n      if (root.__selectedTrack !== null) {\n        if (e.detail.value !== \"\") {\n          root.fire(\"select-track\", { control: this, value: e.detail.value });\n          root.fire(\"toggle-cc\", { control: this, value: true });\n        } else {\n          root.fire(\"toggle-cc\", { control: this, value: false });\n        }\n      }\n    });\n    // prevent menu from being closed before action is taken\n    root.$.settings.addEventListener(\"iron-activate\", e => {\n      if (e.target == root.$.settingslist) e.preventDefault();\n    });\n    // prevent menu from being closed before action is taken\n    root.$.settings.addEventListener(\"iron-select\", e => {\n      e.preventDefault();\n    });\n    // when the mute button is in focus,\n    // add focus class to make the volume slider appear\n    root.$.mute.$.button.onfocus = function() {\n      root.$.volume.classList.add(\"focus\");\n    };\n    // when the mute button is blurred,\n    // remove focus class to make the volume slider disappear\n    root.$.mute.$.button.onblur = function() {\n      root.$.volume.classList.remove(\"focus\");\n    };\n  },\n\n  /**\n   * updates the time/length\n   */\n  setStatus: function(time) {\n    this.$.statbar.innerText = time;\n    this.$.statmenu.innerText = time;\n  },\n\n  /**\n   * loads tracks from array\n   */\n  setTracks: function(tracks) {\n    this.set(\"tracks\", tracks.slice(0));\n    this.notifyPaths(\"tracks\");\n  },\n\n  /**\n   * set play/pause button\n   */\n  _getPlayPause: function(playing, pauseLabel, pauseIcon, playLabel, playIcon) {\n    return playing\n      ? { label: pauseLabel, icon: pauseIcon }\n      : { label: playLabel, icon: playIcon };\n  },\n\n  /**\n   * set play/pause button\n   */\n  _getMuteUnmute: function(\n    muted,\n    muteLabel,\n    muteIcon,\n    unmuteLabel,\n    unmuteIcon\n  ) {\n    return muted\n      ? { label: unmuteLabel, icon: unmuteIcon }\n      : { label: muteLabel, icon: muteIcon };\n  },\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onButtonClick: function(e) {\n    this.fire(\"controls-change\", e.detail);\n  },\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onSettingsChanged: function(e) {\n    this.fire(\"controls-change\", e.target);\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@lrnwebcomponents/simple-search/lib/simple-search-content.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n/**\n`a11y-media-transcript-cue`\nA single cue in a11y-media-transcriptas static text or as an button that controls media\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  <a11y-media-transcript-cue \n    active-cues$=\"[[activeCues]]\"                   // An array of the currently active cues\n    cue$=\"[[cue]]\"                                  // An array of cue data\n    order$=\"[[cue.order]]\"                          // The index of the current cue\n    disable-interactive$=\"[[disableInteractive]]\"   // Is cue interactive? \n    controls$=\"[[mediaId]]\"                         // The id of the a11y-media-player element\n    hide-timestamps$=\"[[hideTimestamps]]\" >         // Hide cue timestamp?\n  </a11y-media-transcript-cue>\n\n  Custom styles:\n  --a11y-media-transcript-bg-color: background color of the transcript, default is #ffffff\n  --a11y-media-transcript-text-color: color of the transcript text, default is #000000\n  \n  Custom styles for focused cue:\n  --a11y-media-transcript-focused-cue-text: color of the focused cue text, default is --a11y-media-transcript-text-color\n  --a11y-media-transcript-focused-cue-bg: background color of the focused cue, default is --a11y-media-transcript-bg-color\n  --a11y-media-transcript-focused-cue-weight: font-weight of the focused cue, default is bold\n  \n  Custom styles for active cue:\n  --a11y-media-transcript-active-cue-text: color of the active cue text, default is --a11y-media-transcript-text-color\n  --a11y-media-transcript-active-cue-bg: background color of the active cue, default is #ccfffd\n  --a11y-media-transcript-active-cue-weight: font-weight of the active cue, default is normal\n\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n      :host {\n        cursor: default;\n        display: table-row;\n        width: 100%;\n        color: var(--a11y-media-transcript-color);\n        background-color: var(--a11y-media-transcript-bg-color);\n        transition: color 0.25s, background-color 0.25s;\n      }\n      :host([hide-timestamps]) {\n        display: inline;\n      }\n      :host(:not([active]):not([disabled]):active),\n      :host(:not([active]):not([disabled]):focus),\n      :host(:not([active]):not([disabled]):hover) {\n        cursor: pointer;\n        color: var(--a11y-media-transcript-focused-cue-color);\n        background-color: var(--a11y-media-transcript-focused-cue-bg-color);\n        outline: 1px dotted var(--a11y-media-transcript-focused-cue-color);\n        @apply --a11y-media-transcript-focused-cue;\n      }\n      :host([active]) {\n        color: var(--a11y-media-transcript-active-cue-color);\n        background-color: var(--a11y-media-transcript-active-cue-bg-color);\n        @apply --a11y-media-transcript-active-cue;\n      }\n      :host #text {\n        display: table-cell;\n        width: 100%;\n        line-height: 200%;\n      }\n      :host([hide-timestamps]) #text {\n        display: inline;\n      }\n      :host #time {\n        display: table-cell;\n        font-size: 80%;\n        padding: 0 16px 0 0;\n        white-space: nowrap;\n        font-family: monospace;\n      }\n      :host([hide-timestamps]) #time {\n        display: none;\n      }\n      :host simple-search-content {\n        --simple-search-match-text-color: var(--a11y-media-transcript-match-color);\n        --simple-search-match-bg-color: var(--a11y-media-transcript-match-bg-color);\n        --simple-search-match-border-color:  var(--a11y-media-transcript-match-border-color);\n        --simple-search-match: {\n          border: none;\n          border-radius: 4px;\n          font-weight: normal;\n        };\n      }\n      @media print {\n        :host, :host([active]),\n        :host(:not([active]):not([disabled]):active),\n        :host(:not([active]):not([disabled]):focus),\n        :host(:not([active]):not([disabled]):hover) {\n          color: #000000;\n          background-color: #ffffff;\n        }\n      }\n    </style>\n    <span id=\"time\">[[cue.start]] - [[cue.end]]</span>\n    <span id=\"text\">\n      <simple-search-content id=\"content\" content=\"[[cue.text]]\"></simple-search-content>\n    </span>\n    <iron-a11y-keys id=\"a11y\" keys=\"enter\" target\\$=\"[[__target]]\" on-keys-pressed=\"_onClick\">\n    </iron-a11y-keys>\n`,\n\n  is: \"a11y-media-transcript-cue\",\n\n  listeners: {\n    tap: \"_onClick\"\n  },\n\n  behaviors: [simpleColorsBehaviors, a11yMediaBehaviors.TranscriptBehaviors],\n\n  properties: {\n    /**\n     * is cue active\n     */\n    active: {\n      type: Boolean,\n      reflectToAttribute: true,\n      computed: \"_getActiveCue(cue,activeCues)\",\n      notify: true,\n      reflectToAttribute: true\n    },\n    /**\n     * array of currently active cues\n     */\n    activeCues: {\n      type: Array,\n      value: null,\n      notify: true\n    },\n    /**\n     * array of cue data\n     */\n    cue: {\n      type: Array,\n      value: null\n    },\n    /**\n     * disable interactive mode that makes the transcript clickable\n     */\n    disabled: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * parsed cue text\n     */\n    text: {\n      type: String,\n      value: \"\"\n    }\n  },\n\n  ready: function() {\n    let root = this,\n      search = root.search;\n    if (!root.disabled) {\n      root.__target = this;\n      root.setAttribute(\"aria-role\", \"button\");\n      root.setAttribute(\"controls\", this.mediaId);\n    }\n    if (\n      !root.disableSearch &&\n      root.search !== undefined &&\n      root.search !== null\n    ) {\n      root.$.content.enableSearch(search);\n    }\n  },\n\n  /**\n   * prints the active cue\n   */\n  print: function() {\n    //console.log(this,this.getComputedStyle());\n  },\n\n  /**\n   * gets the active cue for styling\n   */\n  _getActiveCue: function(cue, activeCues) {\n    return activeCues !== null && activeCues.includes(cue.order.toString())\n      ? true\n      : false;\n  },\n\n  /**\n   * fires click event\n   */\n  _onClick: function(e) {\n    if (!this.disabled) {\n      this.fire(\"cue-seek\", this);\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"./a11y-media-behaviors.js\";\nimport \"./a11y-media-transcript-cue.js\";\n/**\n`a11y-media-transcript`\nA transcript element to pair with a11y-media-player\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  <a11y-media-transcript \n    accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                    // using the following materialize colors: \n                                                    // red, pink, purple, deep-purple, indigo, blue, \n                                                    // light blue, cyan, teal, green, light green, lime, \n                                                    // yellow, amber, orange, deep-orange, and brown. \n                                                    // Default is null. \n    custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n    disable-interactive$=\"[[disableInteractive]]\"   // Disable interactive transcript cues?\n    disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n    disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n    hide-timestamps$=\"[[hideTimestamps]]\"           // Hide cue timestamps?\n    media-id=\"\"                                     // The id of the player\n    selected-transcript$=\"[[selectedTranscript]]\">  // The index of the current track\n  </a11y-media-transcript>\n\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n      :host {\n        display: block;\n        padding: 15px;\n        color: var(--a11y-media-transcript-color);\n        background-color: var(--a11y-media-transcript-bg-color);\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n      :host #inner {\n        width: 100%;\n        display: none;\n      }\n      :host #inner[active] {\n        display: table;\n        width: 100%;\n      }\n      :host #inner[active][hideTimestamps] {\n        display: block;\n      }\n      :host .sr-only:not(:focus) {\n        position: absolute;\n        left: -99999;\n        top: 0;\n        height: 0;\n        width: 0;\n        overflow: hidden;\n      }\n      @media print {\n        :host {\n          padding: 0 15px 5px;\n          color: #000;\n          background-color: #ffffff;\n          border-top: 1px solid #aaa;\n        }\n      }\n    </style>\n    <a id=\"transcript-desc\" href=\"#bottom\" class=\"sr-only\">[[skipTranscriptLink]]</a>\n    <template id=\"tracks\" is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n      <div id=\"inner\" class=\"transcript-from-track\" lang=\"{{track.language}}\" active\\$=\"[[track.active]]\">\n        <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n          <a11y-media-transcript-cue accent-color\\$=\"[[accentColor]]\" active-cues\\$=\"[[activeCues]]\" controls\\$=\"[[mediaId]]\" cue\\$=\"{{cue}}\" disabled\\$=\"[[disableInteractive]]\" disable-search\\$=\"[[disableSearch]]\" hide-timestamps\\$=\"[[hideTimestamps]]\" order\\$=\"{{cue.order}}\" role=\"button\" search=\"[[search]]\" tabindex=\"0\">\n          </a11y-media-transcript-cue>\n        </template>\n      </div>\n    </template>\n    <div id=\"bottom\" class=\"sr-only\"></div>\n`,\n\n  is: \"a11y-media-transcript\",\n\n  listeners: {\n    \"cue-seek\": \"_onCueSeek\"\n  },\n\n  behaviors: [\n    simpleColorsBehaviors,\n    a11yMediaBehaviors.GeneralFunctions,\n    a11yMediaBehaviors.TranscriptBehaviors\n  ],\n\n  properties: {\n    /**\n     * array of cues\n     */\n    activeCues: {\n      type: Array,\n      value: null,\n      reflectToAttribute: true,\n      notify: true\n    },\n    /**\n     * Language\n     */\n    lang: {\n      type: String,\n      value: \"en\",\n      reflectToAttribute: true\n    },\n    /**\n     * the id of media\n     */\n    mediaId: {\n      type: String,\n      value: null\n    },\n    /**\n     * tabindex of cues\n     */\n    tabIndex: {\n      type: Number,\n      computed: \"_getTabIndex(disableInteractive)\"\n    },\n    /**\n     * tabindex of cues\n     */\n    role: {\n      type: Number,\n      computed: \"_getRole(disableInteractive)\"\n    },\n    /**\n     * selected transcript track id\n     */\n    selectedTranscript: {\n      type: String,\n      value: \"0\"\n    },\n    /**\n     * array of cues\n     */\n    tracks: {\n      type: Array,\n      value: null\n    }\n  },\n\n  /**\n   * fires an event to let the page know there is a transcript container\n   */\n  attached: function() {\n    window.SimpleColorsUtility.requestAvailability();\n    this.fire(\"transcript-ready\", this);\n  },\n\n  /**\n   * fires an event when media is associated with the player\n   */\n  setMedia: function(player) {\n    this.media = player;\n    this.fire(\"transcript-ready\", this);\n  },\n\n  /**\n   * fires an event when media is associated with the player\n   */\n  toggleHidden: function(mode) {\n    let root = this,\n      inner = document.getElementById(\"inner\"),\n      active =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue[active]\")\n          : null,\n      first =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue\")\n          : null;\n    mode = mode !== undefined ? mode : this.hidden;\n    this.hidden = mode;\n  },\n\n  /**\n   * prints the active transcript\n   */\n  print: function(mediaTitle) {\n    let root = this,\n      track = root.shadowRoot.querySelector(\"#inner[active]\"),\n      css =\n        \"a11y-media-transcript-cue{display:table-row;background-color:#fff;color:#000}a11y-media-transcript-cue[hide-timestamps],a11y-media-transcript-cue[hide-timestamps] #text{display:inline}a11y-media-transcript-cue #text{display:table-cell;line-height:200%}a11y-media-transcript-cue #time{display:table-cell;font-size:80%;padding:0 16px;white-space:nowrap;font-family:monospace}a11y-media-transcript-cue[hide-timestamps] #time{display:none}a11y-media-transcript-cue [matched]{background-color:#fff;color:#eee;padding:.16px 4px;border-radius:.16px}\";\n    mediaTitle = mediaTitle !== undefined ? mediaTitle : \"Transcript\";\n    if ((track !== null) & (track !== undefined)) {\n      //From https://stackoverflow.com/questions/1071962/how-do-i-print-part-of-a-rendered-html-page-in-javascript#answer-1072151\n      let print = window.open(\n          \"\",\n          \"\",\n          \"left=0,top=0,width=552,height=477,toolbar=0,scrollbars=0,status =0\"\n        ),\n        node = dom(root).node;\n      print.document.write(\n        \"<style>\" +\n          css +\n          \"</style><h1>\" +\n          mediaTitle +\n          \"</h1>\" +\n          track.innerHTML\n      );\n      print.document.close();\n      print.focus();\n      print.print();\n      print.close();\n    }\n  },\n\n  /**\n   * loads tracks from array\n   */\n  setTracks: function(tracks) {\n    this.set(\"tracks\", tracks.slice(0));\n    this.notifyPath(\"tracks\");\n    if (this.tracks !== undefined && this.tracks.length > 0)\n      this.$.tracks.render();\n  },\n\n  /**\n   * updates activeCues array and scrolls to position\n   */\n  setActiveCues: function(cues) {\n    //console.log('setActiveCues',cues);\n    let root = this,\n      offset =\n        root.shadowRoot.querySelector(\"#inner\") !== null &&\n        root.shadowRoot.querySelector(\"#inner\") !== undefined\n          ? root.shadowRoot.querySelector(\"#inner\").offsetTop\n          : 0,\n      cue = root.shadowRoot.querySelector(\n        \"#inner a11y-media-transcript-cue[active]\"\n      );\n    root.set(\"activeCues\", cues.slice(0));\n    if (!root.disableScroll && (cue !== null) & (cue !== undefined)) {\n      //javascript scrolling from:  https://stackoverflow.com/questions/8917921/cross-browser-javascript-not-jquery-scroll-to-top-animation#answer-8918062\n      let scrollingTo = function(element, to, duration) {\n        if (duration <= 0) return;\n        var difference = to - element.scrollTop;\n        var perTick = (difference / duration) * 10;\n\n        setTimeout(function() {\n          element.scrollTop = element.scrollTop + perTick;\n          if (element.scrollTop === to) return;\n          scrollingTo(element, to, duration - 10);\n        }, 10);\n      };\n      scrollingTo(root, cue.offsetTop - offset, 250);\n    }\n  },\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   */\n  _getTabIndex: function(disableInteractive) {\n    return disableInteractive ? -1 : 0;\n  },\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   */\n  _getRole: function(disableInteractive) {\n    return disableInteractive ? null : \"button\";\n  },\n\n  /**\n   * forwards the listener for transcript cue click to seek accordingly\n   */\n  _onCueSeek: function(e) {\n    this.fire(\"transcript-seek\", e.detail);\n  },\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   */\n  setActiveTranscript: function(index) {\n    if (this.tracks !== undefined && this.tracks !== null) {\n      for (let i = 0; i < this.tracks.length; i++) {\n        if (parseInt(index) === i) {\n          this.selectedTranscript = parseInt(index);\n          this.set(\"tracks.\" + i + \".active\", true);\n        } else if (this.tracks[i] !== null) {\n          this.set(\"tracks.\" + i + \".active\", false);\n        }\n        this.notifyPath(\"tracks.\" + i + \".active\");\n      }\n    }\n    this.$.tracks.render();\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/simple-search/simple-search.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"./a11y-media-behaviors.js\";\nimport \"./a11y-media-button.js\";\n/**\n`a11y-media-transcript-controls`\nA controls for the transcript element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  <a11y-media-transcript-controls \n    accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                    // using the following materialize colors: \n                                                    // red, pink, purple, deep-purple, indigo, blue, \n                                                    // light blue, cyan, teal, green, light green, lime, \n                                                    // yellow, amber, orange, deep-orange, and brown. \n                                                    // Default is null. \n    custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n    disable-print-button$=\"[[disablePrintButton]]\"  // Disable the print button?\n    disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n    disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n  </a11y-media-transcript-controls>\n\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n        :host { \n          background-color: var(--a11y-media-transcript-bg-color);\n          color: var(--a11y-media-transcript-text-color);\n          --a11y-media-button-color: var(--a11y-media-transcript-color);\n          --a11y-media-button-bg-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-toggle-color: var(--a11y-media-transcript-accent-color);\n          --a11y-media-button-hover-color: var(--a11y-media-transcript-faded-accent-color);\n          --a11y-media-button-hover-bg-color:  var(--a11y-media-transcript-bg-color);\n          --simple-search-input-color: var(--a11y-media-transcript-color);\n          --simple-search-input-line-color: var(--a11y-media-transcript-accent-color);\n          --simple-search-input-placeholder-color: var(--a11y-media-transcript-color);\n          --simple-search-button-color: var(--a11y-media-transcript-accent-color);\n          --simple-search-button-hover-color: var(--a11y-media-transcript-faded-accent-color);\n          --simple-search-button-bg-color: var(--a11y-media-transcript-bg-color);\n          --simple-search-button-border-color: var(--a11y-media-transcript-bg-color);\n          --simple-search-button-hover-border-color: var(--a11y-media-transcript-bg-color);\n          --simple-search-button-disabled-color: var(--simple-colors-background5);\n          --simple-search-button-disabled-bg-color: var(--simple-colors-background2);\n          --simple-search-button-disabled-border-color: var(--simple-colors-background3);\n          --simple-search-container: {\n            padding: 0 15px;\n          };\n        }\n        :host #searchbar {\n          display: flex;\n          align-items: stretch;\n          justify-content: space-between;\n          width: 100%;\n        }\n        :host #searching {\n          flex-grow: 2;\n        }\n        :host #autoscroll {\n          padding-right: 8px;\n        }\n        :host #scrolling,\n        :host #printing {\n          display: flex;\n          align-items: center;\n        }\n        @media print {\n          :host {\n            display: none;\n          }\n        }\n    </style>\n    <div id=\"searchbar\">\n      <div id=\"searching\">\n        <simple-search id=\"search\" disabled\\$=\"[[disableSearch]]\" controls=\"transcript\" hidden\\$=\"[[disableSearch]]\" no-label-float=\"\" next-button-icon\\$=\"[[searchNextIcon]]\" next-button-label\\$=\"[[searchNextLabel]]\" prev-button-icon\\$=\"[[searchPrevIcon]]\" prev-button-label\\$=\"[[searchPrevLabel]]\" search-input-icon\\$=\"[[searchIcon]]\" search-input-label\\$=\"[[searchLabel]]\" target=\"[[target]]\">\n        </simple-search>\n      </div>\n      <div id=\"scrolling\">\n        <a11y-media-button id=\"scroll\" controls=\"transcript\" icon=\"[[autoScrollIcon]]\" label=\"[[autoScrollLabel]]\" toggle\\$=\"[[!disableScroll]]\">\n        </a11y-media-button>\n      </div>\n      <div id=\"printing\" hidden\\$=\"[[disablePrintButton]]\" disabled\\$=\"[[disablePrintButton]]\">\n        <a11y-media-button controls=\"transcript\" id=\"print\" icon=\"[[printIcon]]\" label=\"[[printLabel]]\">\n        </a11y-media-button>\n      </div>\n    </div>\n`,\n\n  is: \"a11y-media-transcript-controls\",\n\n  behaviors: [\n    simpleColorsBehaviors,\n    a11yMediaBehaviors.GeneralFunctions,\n    a11yMediaBehaviors.TranscriptBehaviors\n  ],\n\n  properties: {\n    /**\n     * Language\n     */\n    lang: {\n      type: String,\n      value: \"en\",\n      reflectToAttribute: true\n    },\n    /**\n     * target of the controls\n     */\n    target: {\n      type: Object,\n      value: null\n    }\n  },\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   */\n  attached: function() {\n    let root = this;\n    window.SimpleColorsUtility.requestAvailability();\n    root.search = root.$.search;\n    root.fire(\"searchbar-added\", root.$.search);\n    root.$.scroll.addEventListener(\"button-clicked\", function(e) {\n      this.fire(\"toggle-scroll\", this);\n    });\n    root.$.print.addEventListener(\"button-clicked\", function(e) {\n      this.fire(\"print-transcript\", this);\n    });\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\nwindow.A11yMediaUtility = {};\nPolymer({\n  is: \"a11y-media-utility\",\n\n  properties: {\n    /**\n     * Stores an array of all the players on the page.\n     */\n    players: {\n      type: Array,\n      value: []\n    },\n    /**\n     * Manages which player is sticky.\n     */\n    stickyPlayer: {\n      type: Object,\n      value: null\n    }\n  },\n\n  /**\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  created: function() {\n    let root = this;\n    this.__playerLoader = function(e) {\n      root.players.push(e.detail);\n    };\n\n    // sets the instance to the current instance\n    if (!window.A11yMediaUtility.instance) {\n      window.A11yMediaUtility.instance = this;\n\n      // listen for a players added to the page\n      document.body.addEventListener(\"a11y-player\", root.__playerLoader);\n    }\n  },\n\n  /**\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  attached: function() {\n    let root = this;\n    this.__stickyManager = function(e) {\n      root.setStickyPlayer(e.detail);\n    };\n    this.__scrollChecker = function(e) {\n      root._checkScroll();\n    };\n\n    // listen for a player that starts playing,\n    // make it the player that can be sticky,\n    // and check for concurrent players\n    document.body.addEventListener(\"a11y-player-playing\", root.__stickyManager);\n\n    // listen for scrolling and find out if a player is off-screen\n    window.addEventListener(\"scroll\", root.__scrollChecker);\n  },\n\n  /**\n   * Clean up.\n   */\n  detached: function() {\n    let root = this;\n    document.body.removeEventListener(\"a11y-player\", root.__playerLoader);\n    document.body.removeEventListener(\n      \"a11y-player-playing\",\n      root.__stickyManager\n    );\n    window.removeEventListener(\"scroll\", root.__scrollChecker);\n  },\n  /**\n   * if a player disallows concurrent players, pauses other players\n   */\n\n  checkConcurrentPlayers: function() {\n    let root = this,\n      player = root.stickyPlayer;\n    for (let i = 0; i < root.players.length; i++) {\n      let playeri = root.players[i];\n      if (\n        playeri !== player &&\n        (!player.allowConcurrent || !playeri.allowConcurrent)\n      ) {\n        playeri.pause();\n      }\n    }\n  },\n  /**\n   * if a player disallows concurrent players, pauses other players\n   */\n\n  checkConcurrentPlayers: function() {\n    let root = this,\n      player = root.stickyPlayer;\n    for (let i = 0; i < root.players.length; i++) {\n      let playeri = root.players[i];\n      if (\n        playeri !== player &&\n        (!player.allowConcurrent || !playeri.allowConcurrent)\n      ) {\n        playeri.pause();\n      }\n    }\n  },\n  /**\n   * stops all other players on the page\n   */\n\n  setStickyPlayer: function(player) {\n    let root = this,\n      parent = root._getParentNode(player);\n    root.__playerTop = parent.offsetTop;\n    root.__playerUpperMiddle = root.__playerTop + parent.offsetHeight * 0.9;\n    root.__playerLowerMiddle = root.__playerTop + parent.offsetHeight * 0.1;\n    if (\n      player !== root.stickyPlayer &&\n      root.stickyPlayer !== undefined &&\n      root.stickyPlayer !== null\n    ) {\n      root.stickyPlayer.toggleSticky(false);\n      root.__parent.style.height = \"unset\";\n    }\n    parent.style.height = parent.offsetHeight + \"px\";\n    root.__parent = parent;\n    root.stickyPlayer = player;\n    if (!player.allowConcurrent) root.checkConcurrentPlayers();\n    root._checkScroll();\n  },\n  /**\n   * checks the wondow's scroll position and compares it to active player to set sticky attribute\n   */\n\n  _checkScroll: function() {\n    let root = this,\n      wintop = window.pageYOffset,\n      winbottom = wintop + window.innerHeight;\n    if (root.stickyPlayer !== undefined && root.stickyPlayer !== null) {\n      if (\n        root.stickyPlayer.__playing &&\n        (root.__playerLowerMiddle > winbottom ||\n          root.__playerUpperMiddle < wintop)\n      ) {\n        root.stickyPlayer.toggleSticky(true);\n      } else {\n        root.stickyPlayer.toggleSticky(false);\n      }\n    }\n  },\n  /**\n   * gets parent node in light DOM\n   */\n\n  _getParentNode: function(node) {\n    let parent = node.parentNode;\n    if (\n      parent !== undefined &&\n      parent !== null &&\n      parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parent = parent.host;\n    }\n    return parent;\n  }\n});\n\nwindow.A11yMediaUtility.instance = null;\n\n/**\n * Checks to see if there is an instance available, and if not appends one\n */\nwindow.A11yMediaUtility.requestAvailability = function() {\n  //only create an instance if there isn't one\n  if (!window.A11yMediaUtility.instance) {\n    window.A11yMediaUtility.instance = document.createElement(\n      \"a11y-media-utility\"\n    );\n  }\n\n  document.body.appendChild(window.A11yMediaUtility.instance);\n};\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\n\nwindow.A11yMediaYoutubeUtility = {};\n\nPolymer({\n  is: \"a11y-media-youtube-utility\"\n});\n\nwindow.A11yMediaYoutubeUtility.instance = null;\n\nwindow.A11yMediaYoutubeUtility.counter = 0;\n\nwindow.A11yMediaYoutubeUtility.apiReady = window.YT !== undefined;\n\nwindow.A11yMediaYoutubeUtility.players = [];\n\n/**\n * Checks to see if there is an instance available, and if not appends one\n */\nwindow.A11yMediaYoutubeUtility.requestAvailability = function() {\n  if (!window.A11yMediaYoutubeUtility.instance) {\n    window.A11yMediaYoutubeUtility.instance = document.createElement(\n      \"a11y-media-youtube-utility\"\n    );\n    document.body.appendChild(window.A11yMediaYoutubeUtility.instance);\n    let api = document.createElement(\"script\");\n    api.setAttribute(\"src\", \"https://www.youtube.com/iframe_api\");\n    api.setAttribute(\"type\", \"text/javascript\");\n    document.body.appendChild(api);\n    window.onYouTubeIframeAPIReady = function() {\n      window.A11yMediaYoutubeUtility.apiReady = true;\n      var event = new CustomEvent(\"youtube-api-ready\");\n      document.dispatchEvent(event);\n    };\n  }\n};\n\nwindow.A11yMediaYoutubeUtility.initYoutubePlayer = function(\n  elem,\n  options,\n  attached\n) {\n  this.counter++;\n  //get unique id for each youtube iframe\n  let root = this,\n    div = document.createElement(\"div\"),\n    id = \"a11y-media-yt-\" + this.counter;\n  div.setAttribute(\"id\", id);\n  elem.innerHTML = \"\";\n  elem.appendChild(div);\n  // function to create and init iframe\n  let iframe = new YT.Player(id, {\n    width: options.width,\n    height: options.height,\n    videoId: options.videoId,\n    playerVars: {\n      color: \"white\",\n      controls: 0,\n      autoplay: options.autoplay,\n      disablekb: 1,\n      enablejsapi: 1,\n      iv_load_policy: 3,\n      modestbranding: 1,\n      showinfo: 0,\n      rel: 0\n    }\n  });\n\n  // add methods and properties to api so that it matches HTML5 video\n  iframe.tracks = [];\n  iframe.duration = 0;\n  iframe.play = function() {\n    iframe.playVideo();\n  };\n  iframe.pause = function() {\n    iframe.pauseVideo();\n  };\n  iframe.seek = function(time) {\n    iframe.seekTo(time);\n    iframe.pauseVideo();\n  };\n  iframe.setMute = function(mode) {\n    mode ? iframe.mute() : iframe.unMute();\n  };\n  iframe.seekable = {\n    length: 1,\n    start: function(index) {\n      return 0;\n    },\n    end: function(index) {\n      return iframe.duration;\n    }\n  };\n  // return the iframe so that a11y-media-player can control it\n  return iframe;\n};\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"./lib/screenfull-lib.js\";\nimport \"./lib/a11y-media-behaviors.js\";\nimport \"./lib/a11y-media-video-loader.js\";\nimport \"./lib/a11y-media-play-button.js\";\nimport \"./lib/a11y-media-controls.js\";\nimport \"./lib/a11y-media-transcript.js\";\nimport \"./lib/a11y-media-transcript-controls.js\";\nimport \"./lib/a11y-media-utility.js\";\nimport \"./lib/a11y-media-youtube-utility.js\";\n/**\n`a11y-media-player`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n\n  <a11y-media-player \n    accent-color$=\"[[accentColor]]\"             // Optional accent color for controls, \n                                                // using the following materialize colors: \n                                                // red, pink, purple, deep-purple, indigo, blue, \n                                                // light blue, cyan, teal, green, light green, lime, \n                                                // yellow, amber, orange, deep-orange, and brown. \n                                                // Default is null. \n    audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n    autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n    cc$=\"[[cc]]\"                                // Are closed captions toggled?\n    custom-microcopy$=\"[[customMicrocopy]]\"     // Optional customization or text and icons\n    dark$=\"[[dark]]\"                            // Is the color scheme dark? Default is light. \n    dark-transcript$=\"[[darkTranscript]]\"       // Use dark theme on transcript? Default is false, even when player is dark.   \n    disable-fullscreen$=\"[[disableFullscreen]]\" // Is full screen mode disabled?\n    disable-interactive$=\"[[disableInteractive]]\" // Disable interactive cues?\n    fullscreen$=\"[[fullscreen]]\"                // Is full screen mode toggled on?\n    height$=\"[[height]]\"                        // The height of player\n    hide-elapsed-time$=\"[[hideElapsedTime]]\"    // Is elapsed time hidden?\n    hide-timestamps$=\"[[hideTimestamps]]\"       // Hide cue timestamps?\n    lang$=\"[[lang]]\"                            // The language of the media\n    loop$=\"[[loop]]\"                            // Is video on a loop?\n    muted$=\"[[muted]]\"                          // Is video muted?\n    media-title$=\"[[mediaTitle]]\"               // The title of the media\n    playback-rate$=\"[[playbackRate]]\"           // The speed that video plays, default is 1 (for 100%)\n    sticky-corner$=\"[[stickyCorner]]\"           // When user scrolls a playing video off-screen, \n                                                   which corner will it stick to? Values are: \n                                                   top-right (default), top-left, bottom-left, bottom-right, \n                                                   and none (to turn sticky off)\n    thumbnail-src$=\"[[thumbnailSrc]]\"           // Optional thumbanil/cover image url\n    volume$=\"[[volume]]\">                       // The initial volume of the video\n                                                // video source and tracks \n    <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n    <source src=\"/path/to/video.webm\" type=\"video/webm\">\n    <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n    <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n    <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n  </a11y-media-player>\n\nIntermediate customization of player:\n--a11y-media-text-color: text color, default is --simple-colors-foreground2\n--a11y-media-bg-color: background color, default is --simple-colors-background2\n--a11y-media-hover-color: text color on hover, default is --simple-colors-foreground1\n--a11y-media-hover-bg-color: background color, default is --simple-colors-background2\n--a11y-media-accent-color: an accent color, default is --simple-colors-accent-foreground4\n--a11y-media-faded-accent-color: a subtler version of accent color, default is --simple-colors-accent-foreground5\n--a11y-media-outline-color: border-color of group, default is --a11y-media-bg-color \n\nIntermediate customization of transcript:\n--a11y-media-transcript-color: transcript color, default is --simple-colors-foreground1\n--a11y-media-transcript-bg-color: transcript background color, default is --simple-colors-background1\n--a11y-media-transcript-active-cue-color: transcript active cue color, default is --simple-colors-foreground1\n--a11y-media-transcript-active-cue-bg-color: transcript active cue background color, default is --simple-colors-background1\n--a11y-media-transcript-focused-cue-color: transcript focused cue color, default is --simple-colors-foreground1\n--a11y-media-transcript-focused-cue-br-color: transcript focused cue background color, default is --simple-colors-accent-background1\n--a11y-media-transcript-match-color: transcript match color, default is --simple-colors-accent-background1\n--a11y-media-transcript-match-bg-color: transcript match background color, default is --simple-colors-foreground1\n \nAdvanced styles for settings menu:\n--a11y-media-settings-menu-color: settings menu text color, default is --a11y-media-text-color\n--a11y-media-settings-menu-bg-color: settings menu background color, default is --a11y-media-bg-color\n--a11y-media-settings-menu-hover-color: settings menu text color on hover, default is --a11y-media-hover-color\n--a11y-media-settings-menu-hover-bg-color: settings menu background color on hover, default is --a11y-media-hover-bg-color\n \nAdvanced styles for buttons:\n--a11y-media-button-color: button text color, default is --a11y-media-text-color\n--a11y-media-button-bg-color: button background color, default is --a11y-media-bg-color\n--a11y-media-button-hover-color: button text color when focused/hovered, default is --a11y-media-hover-color\n--a11y-media-button-hover-bg-color: button background color when focused/hovered, default is --a11y-media-bg-color\n--a11y-media-button-toggle-color: button text color when tggled on, default is --a11y-media-faded-accent-color\n \nAdvanced styles for toggles:\n--paper-toggle-button-unchecked-bar-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-unchecked-button-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-checked-bar-color: color of toggle button when on, default is --a11y-media-accent-color\n--paper-toggle-button-checked-button-color: color of toggle button when on, default is --a11y-media-accent-color\n \nAdvanced styles for sliders:\n--a11y-media-slider-primary-color: primary slider color, default is --a11y-media-accent-color\n--a11y-media-slider-secondary-color: slider buffer color, default is --a11y-media-faded-accent-color\n--a11y-media-slider-pin-color: color of the pin that shows slider value, default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-start-color: color of the pin at start default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-end-color: color of the pin at end, default is --a11y-media-faded-bg-color\n--a11y-media-slider-knob-color: slider knob color, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-color: slider knob color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-color: slider knob color at end, default is --a11y-media-accent-color\n--a11y-media-slider-knob-border-color: slider knob bordercolor, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-border-color: slider knob border color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-border-color: slider knob border color at end, default is --a11y-media-accent-color\n*/\nlet A11yMediaPlayer = Polymer({\n  _template: html`\n  <custom-style>\n    <style is=\"custom-style\">\n      :host {  \n        width: 100%;\n        display: block;\n        color: var(--simple-colors-foreground1);\n        background-color: var(--simple-colors-background2);\n        outline: 1px solid var(--simple-colors-background3);\n      }\n      :host([dark]) {  \n        outline: 1px solid var(--simple-colors-background1);\n      }\n      :host #outerplayer, :host #outerplayer * {\n        --a11y-media-color: var(--simple-colors-foreground2);\n        --a11y-media-bg-color: var(--simple-colors-background2);\n        --a11y-media-hover-color: var(--simple-colors-foreground1);\n        --a11y-media-hover-bg-color: var(--simple-colors-background2);\n        --a11y-media-accent-color: var(--simple-colors-accent-foreground4);\n        --a11y-media-faded-accent-color: var(--simple-colors-accent-foreground5);\n\n        /* settings */\n        --a11y-media-settings-menu-color: var(--a11y-media-color);\n        --a11y-media-settings-menu-bg-color: var(--a11y-media-bg-color);\n        --a11y-media-settings-menu-hover-color: var(--a11y-media-hover-color);\n        --a11y-media-settings-menu-hover-bg-color: var(--a11y-media-hover-bg-color);\n        \n        /* buttons */\n        --a11y-media-button-color: var(--a11y-media-color);\n        --a11y-media-button-bg-color: var(--a11y-media-bg-color);\n        --a11y-media-button-hover-color: var(--a11y-media-accent-color);\n        --a11y-media-button-hover-bg-color: var(--a11y-media-hover-bg-color);\n        --a11y-media-button-toggle-color: var(--a11y-media-faded-accent-color);\n\n        /* toggle button */\n        --paper-toggle-button-unchecked-bar-color: var(--a11y-media-color);\n        --paper-toggle-button-unchecked-button-color: var(--a11y-media-color);\n        --paper-toggle-button-checked-bar-color: var(--a11y-media-accent-color);\n        --paper-toggle-button-checked-button-color: var(--a11y-media-accent-color);\n        \n        /* slider */\n        --paper-slider-active-color: var(--a11y-media-accent-color);\n        --paper-slider-secondary-color:  var(--a11y-media-faded-accent-color);\n        --paper-slider-pin-color: var(--a11y-media-faded-bg-color);\n        --paper-slider-pin-start-color: var(--a11y-media-faded-bg-color);\n        --paper-slider-pin-end-color: var(--a11y-media-faded-bg-color);\n        --paper-slider-knob-color: var(--a11y-media-accent-color);\n        --paper-slider-knob-start-color: var(--a11y-media-bg-color);\n        --paper-slider-knob-end-color: var(--a11y-media-bg-color);\n        --paper-slider-knob-border-color: var(--a11y-media-accent-color);\n        --paper-slider-knob-start-border-color: var(--a11y-media-bg-color);\n        --paper-slider-knob-end-border-color: var(--a11y-media-bg-color);\n      }\n      :host #outertranscript, :host #outertranscript *, :host #transcript {\n        --a11y-media-transcript-color: var(--simple-colors-foreground1);\n        --a11y-media-transcript-bg-color: var(--simple-colors-background1);\n        --a11y-media-transcript-accent-color: var(--simple-colors-accent-foreground5);\n        --a11y-media-transcript-faded-accent-color: var(--simple-colors-accent-foreground3);\n        --a11y-media-transcript-active-cue-color: var(--simple-colors-foreground1);\n        --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-accent-background1);\n        --a11y-media-transcript-focused-cue-color: var(--simple-colors-foreground1);\n        --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-background2);\n        --a11y-media-transcript-match-color: var(--simple-colors-background1);\n        --a11y-media-transcript-match-bg-color: var(--simple-colors-accent-foreground3);\n        --a11y-media-transcript-match-border-color: var(--simple-colors-accent-foreground1);\n        --a11y-media-hover-color: var(--simple-colors-foreground1);\n        --a11y-media-hover-bg-color: var(--simple-colors-background2);\n      }\n      :host #player {\n        display: block;\n        max-width: 100%;\n        transition: position 0.5s ease, max-width 1s ease;\n        background-color: var(--simple-colors-background2);\n      }\n      :host #innerplayer {\n        z-index: 1;\n      }\n      :host #sources {\n        display: flex;\n        align-items: stretch;\n        position: relative;\n      }\n      :host([no-height]) #sources {\n        display: none;\n      }\n      :host #controls,\n      :host #slider, \n      :host #sources,\n      :host #sources > * {\n        width: 100%;\n      }\n      :host #loader, \n      :host #youtube,\n      :host #customcc,\n      :host #customcctxt {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      :host #youtube {\n        height: 100%;\n      }\n      :host #customcc {\n        font-size: 20px;\n        width: 100%;\n        height: 100%;\n        transition: font-size 0.25s;\n      }\n      :host([responsive-size*=\"lg\"]) #customcc {\n        font-size: 14px;\n      }\n      :host([responsive-size*=\"md\"]) #customcc {\n        font-size: 14px;\n      }\n      :host([responsive-size*=\"sm\"]) #customcc {\n        font-size: 12px;\n      }\n      :host([responsive-size*=\"xs\"]) #customcc {\n        font-size: 10px;\n      }\n      :host([sticky]:not([sticky-corner=\"none\"])) #customcc {\n        display: none;\n      }\n      :host #customcctxt {\n        top: unset;\n        bottom: 8px;\n        display: inline-block;\n        margin: 0 10px;\n        color: white;\n        background-color: black;\n        background-color: rgba(0, 0, 0, 0.8);\n        padding: 0.15em 4px;\n      }\n      :host #customcctxt:empty {\n        display: none;\n      }\n      :host #innerplayer,\n      :host #sources > * {\n        max-height: 80vh;\n      }\n      :host #controls,\n      :host #slider {\n        z-index: 2 !important;\n      }\n      :host #audio-only {\n        text-align: center;\n        font-style: italic;\n        width: 100%;\n        line-height: 160%;\n      }\n      :host .media-caption:not(:empty) {\n        padding: 5px 15px;\n      }\n      :host #printthumb {\n        width: 100%;\n        margin: 0;\n        display: block;\n        border-top: 1px solid #aaaaaa; \n      }\n      :host .sr-only {\n        position: absolute;\n        left: -9999px;\n        font-size: 0;\n        height: 0;\n        width: 0;\n        overflow: hidden;\n      }\n      @media screen {\n        :host #printthumb {\n          display: none;\n        }\n        :host([flex-layout]:not([responsive-size*=\"s\"])) {\n          display: inline-flex;\n          align-items: stretch;\n          outline: 1px solid;\n          color: var(--simple-colors-foreground1);\n          background-color: var(--simple-colors-background2);\n          outline-color: var(--simple-colors-background3);\n          padding: 0;\n        }\n        :host([dark][flex-layout]:not([responsive-size*=\"s\"])) {\n          outline-color: var(--simple-colors-background1);\n        }\n        :host > div {\n          transition: all 0.5s;\n        }\n        :host([sticky]:not([sticky-corner=\"none\"])) #player {\n          position: fixed;\n          top: 5px;\n          right: 5px;\n          width: 200px;\n          max-width: 200px;\n          z-index: 999999;\n          border: 1px solid;\n          box-shadow: 1px 1px 20px 1px rgba(125,125,125);\n          border-radius: 3.2px; \n          border-color: var(--a11y-media-bg-color);\n        }\n        :host([dark][sticky]:not([sticky-corner=\"none\"])) #player {\n          border-color: var(--a11y-media-bg-color);\n        }\n        :host([sticky][sticky-corner=\"top-left\"]) #player {\n          right: unset;\n          left: 5px;\n        }\n        :host([flex-layout]:not([responsive-size*=\"s\"])) > div {\n          width: 50%;\n          flex-grow: 1;\n          flex-shrink: 1;\n        }\n        :host #innertranscript {\n          position: relative;\n          height: 100%;\n        }\n        :host([hide-transcript]) #outerplayer {\n          min-width: 50%;\n          max-width: 100%;\n        }\n        :host([hide-transcript]) #outertranscript {\n          display: none;\n        }\n        :host #transcript {\n          padding-top: 48px;\n        }\n        :host(:not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"])) #transcript {\n          position: absolute;\n          top: 0; \n          left: 0;\n          right: 0; \n          bottom: 0;\n          overflow-y: scroll;\n        }\n        :host(:not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"])) #player.totop {\n          position: absolute;\n          top:0;\n          left: 0;\n          width: 200px !important;\n          z-index: 9999;\n        }\n        :host #tcontrols {\n          z-index: 1000;\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          display: flex;\n        }\n        :host([sticky][sticky-corner=\"bottom-left\"]) #player {\n          top: unset;\n          right: unset;\n          bottom: 5px;\n        }\n        :host([sticky][sticky-corner=\"bottom-right\"]) #player {\n          top: unset;\n          bottom: 5px;\n        }\n        :host([sticky]:not([sticky-corner=\"none\"]):not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"])) #controls {\n          display: none;\n        }\n        :host .print-only {\n          display: none;\n        }\n        :host .media-caption:not(:empty) {\n          color: var(--simple-colors-background1);\n          background-color: var(--simple-colors-accent-foreground1);\n        }\n      }\n\n      @media print {\n        :host, :host([dark]) {\n          outline: 1px solid #aaaaaa; \n          background-color: #ffffff;\n        }\n        :host([sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n          height: unset !important;\n        }\n        :host .screen-only,\n        :host #player, \n        :host #printthumb:not([src]) {\n          display: none;\n        }\n        :host(:not([thumbnail-src])) #sources, \n        :host #slider, \n        :host #loader, \n        :host #youtube,\n        :host #controls {\n          display: none;\n        }\n        :host .media-type {\n          font-style: italic;\n        }\n        :host #searchbar {\n          display: none;\n        }\n        :host .media-caption:not(:empty) {\n          background-color: #cccccc;\n          color: #000000;\n          font-size: 120%;\n          padding: 5px 15px;\n        }\n      }\n    </style>\n  </custom-style>\n    <div class=\"sr-only\">[[mediaCaption]]</div>\n    <div id=\"outerplayer\" lang\\$=\"[[uiLanguage]]\">\n      <div id=\"player\">\n        <div id=\"innerplayer\">\n          <div id=\"sources\" hidden\\$=\"[[noHeight]]\">\n            <a11y-media-play-button id=\"playbutton\" audio-only\\$=\"[[audioOnly]]\" disabled=\"true\" hidden\\$=\"[[noPlayButton]]\" disabled\\$=\"[[noPlayButton]]\" pause-label\\$=\"[[pauseLabel]]\" playing\\$=\"[[__playing]]\" play-label\\$=\"[[playLabel]]\">\n            </a11y-media-play-button>\n            <a11y-media-video-loader id=\"loader\" autoplay\\$=\"[[autoplay]]\" cc\\$=\"[[cc]]\" crossorigin\\$=\"[[crossorigin]]\" hidden\\$=\"[[isYoutube]]\" lang\\$=\"[[lang]]\" loop\\$=\"[[loop]]\" muted\\$=\"[[muted]]\" manifest\\$=\"[[manifest]]\" playback-rate\\$=\"[[playbackRate]]\" style\\$=\"[[_getThumbnailCSS(thumbnailSrc)]]\" preload\\$=\"[[preload]]\" volume\\$=\"[[volume]]\">\n              <slot></slot>\n            </a11y-media-video-loader>\n            <div id=\"youtube\" hidden\\$=\"[[!isYoutube]]\" video-id\\$=\"[[videoId]]\"></div>\n            <div id=\"customcc\" hidden\\$=\"[[!showCustomCaptions]]\"><span id=\"customcctxt\"></span></div>\n          </div>\n        </div>\n        <paper-slider id=\"slider\" max\\$=\"[[__duration]]\" pin=\"\" secondary-progress\\$=\"[[__buffered]]\" value\\$=\"[[__elapsed]]\">\n        </paper-slider>\n      </div>\n      <a11y-media-controls id=\"controls\" audio-only\\$=\"[[audioOnly]]\" audio-label\\$=\"[[audioLabel]]\" captions-icon\\$=\"[[captionsIcon]]\" captions-label\\$=\"[[captionsLabel]]\" captions-menu-label\\$=\"[[captionsMenuLabel]]\" captions-menu-off\\$=\"[[captionsMenuOff]]\" cc\\$=\"[[cc]]\" forward-icon\\$=\"[[forwardIcon]]\" forward-label\\$=\"[[forwardLabel]]\" fullscreen-icon\\$=\"[[fullscreenIcon]]\" fullscreen-label\\$=\"[[fullscreenLabel]]\" has-captions\\$=\"[[hasCaptions]]\" has-transcript\\$=\"[[hasTranscript]]\" lang\\$=\"[[uiLanguage]]\" loop-icon\\$=\"[[loopIcon]]\" loop-label\\$=\"[[loopLabel]]\" mute-icon\\$=\"[[muteIcon]]\" mute-label\\$=\"[[muteLabel]]\" muted\\$=\"[[muted]]\" pause-icon\\$=\"[[pauseIcon]]\" pause-label\\$=\"[[pauseLabel]]\" play-icon\\$=\"[[playIcon]]\" play-label\\$=\"[[playLabel]]\" playing\\$=\"[[__playing]]\" restart-icon\\$=\"[[restartIcon]]\" restart-label\\$=\"[[restartLabel]]\" rewind-icon\\$=\"[[rewindIcon]]\" rewind-label\\$=\"[[rewindLabel]]\" search-transcript\\$=\"[[searchTranscript]]\" settings-icon\\$=\"[[settingsIcon]]\" settings-label\\$=\"[[settingsLabel]]\" speed-label\\$=\"[[speedLabel]]\" stand-alone\\$=\"[[standAlone]]\" transcript-icon\\$=\"[[transcriptIcon]]\" transcript-label\\$=\"[[transcriptLabel]]\" transcript-menu-label\\$=\"[[transcriptMenuLabel]]\" unmute-icon\\$=\"[[unmuteIcon]]\" unmute-label\\$=\"[[unmuteLabel]]\" video-label\\$=\"[[videoLabel]]\" volume=\"[[__volume]]\" volume-icon\\$=\"[[volumeIcon]]\" volume-label\\$=\"[[volumeLabel]]\">\n      </a11y-media-controls>\n      <div class=\"screen-only media-caption\" aria-hidden=\"true\">[[mediaCaption]]</div>\n      <div class=\"print-only media-caption\">[[printCaption]]</div>\n    </div>\n    <img id=\"printthumb\" aria-hidden=\"true\" src\\$=\"[[thumbnailSrc]]\">\n    <div id=\"outertranscript\" hidden\\$=\"[[standAlone]]\" lang\\$=\"[[uiLanguage]]\">\n      <div id=\"innertranscript\">\n        <a11y-media-transcript-controls id=\"tcontrols\" accent-color\\$=\"[[accentColor]]\" auto-scroll-icon\\$=\"[[autoScrollIcon]]\" auto-scroll-label\\$=\"[[autoScrollLabel]]\" dark\\$=\"[[darkTranscript]]\" disable-print-button\\$=\"[[disablePrintButton]]\" disable-scroll\\$=\"[[disableScroll]]\" disable-search\\$=\"[[disableSearch]]\" lang\\$=\"[[uiLanguage]]\" print-icon\\$=\"[[printIcon]]\" print-label\\$=\"[[printLabel]]\" search-label\\$=\"[[searchLabel]]\" search-prev-label\\$=\"[[searchPrevLabel]]\" search-prev-icon\\$=\"[[searchPrevIcon]]\" search-next-label\\$=\"[[searchNextLabel]]\" search-next-icon\\$=\"[[searchNextIcon]]\" skip-transcript-link\\$=\"[[skipTranscriptLink]]\">\n        </a11y-media-transcript-controls>\n        <a11y-media-transcript id=\"transcript\" accent-color\\$=\"[[accentColor]]\" dark\\$=\"[[darkTranscript]]\" disable-scroll\\$=\"[[disableScroll]]\" disable-search\\$=\"[[disableSearch]]\" disable-interactive\\$=\"[[disableInteractive]]\" hide-timestamps\\$=\"[[hideTimestamps]]\" search=\"[[search]]\">\n        </a11y-media-transcript>\n      </div>\n    </div>\n`,\n\n  is: \"a11y-media-player\",\n\n  listeners: {\n    \"controls-change\": \"_onControlsChanged\",\n    \"play-button-tapped\": \"play\"\n  },\n\n  properties: {\n    mediaCaption: {\n      type: String,\n      computed: \"_getMediaCaption(audioOnly,audioLabel,mediaTitle)\"\n    },\n    printCaption: {\n      type: String,\n      computed: \"_getPrintCaption(audioOnly,audioLabel,videoLabel,mediaTitle)\"\n    }\n  },\n\n  behaviors: [\n    simpleColorsBehaviors,\n    a11yMediaBehaviors.MediaProps,\n    a11yMediaBehaviors.GeneralFunctions,\n    a11yMediaBehaviors.PlayerBehaviors,\n    a11yMediaBehaviors.TranscriptBehaviors\n  ],\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   */\n  attached: function() {\n    this.__playerAttached = true;\n    window.SimpleColorsUtility.requestAvailability();\n    window.A11yMediaUtility.requestAvailability();\n    this._addResponsiveUtility();\n    this.fire(\"a11y-player\", this);\n    if (this.isYoutube) {\n      window.A11yMediaYoutubeUtility.requestAvailability();\n      this._youTubeRequest();\n    }\n  },\n\n  /**\n   * sets initial values and loads video or youtube iframe\n   */\n  ready: function() {\n    let root = this,\n      tracks = new Array();\n    root.__playerReady = true;\n    root.__interactive = !root.disableInteractive;\n    root.target = root.shadowRoot.querySelector(\"#transcript\");\n    root.__status = root.loadingLabel;\n    root.__slider = root.$.slider;\n    root.__volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.__resumePlaying = false;\n    root.__showFullscreen = !this.disableFullscreen && screenfull.enabled;\n    root.__duration = 0;\n    root.$.controls.setStatus(root.__status);\n    // adjusts aspect ratio\n    let aspect = 16 / 9;\n    root.width = root.width !== null ? root.width : \"100%\";\n    root.style.maxWidth = root.width !== null ? root.width : \"100%\";\n    root.$.sources.style.paddingTop = 100 / aspect + \"%\";\n    if (this.isYoutube) {\n      root.disableInteractive = true;\n      this._youTubeRequest();\n    } else {\n      root.__media = root.$.loader;\n      // handles loaded metadata\n      root.__media.addEventListener(\"media-loaded\", function() {\n        // adjusts aspect ratio\n        aspect = root.__media.aspectRatio;\n        root.$.sources.style.paddingTop = 100 / aspect + \"%\";\n        root.$.playbutton.removeAttribute(\"disabled\");\n\n        // gets and converts video duration\n        root.__duration = root.__media.duration > 0 ? root.__media.duration : 0;\n        root.__status =\n          root._getHHMMSS(0, root.__media.duration) +\n          \"/\" +\n          root._getHHMMSS(root.__media.duration);\n        root.$.controls.setStatus(root.__status);\n        root._getTrackData(root.$.loader.media);\n      });\n    }\n    root.$.tcontrols.addEventListener(\"searchbar-added\", function(e) {\n      root.search = e.detail;\n    });\n    root.$.tcontrols.addEventListener(\"toggle-scroll\", function(e) {\n      root.disableScroll = !root.disableScroll;\n    });\n    root.$.tcontrols.addEventListener(\"print-transcript\", function(e) {\n      this.fire(\"printing-transcript\", this);\n      root.$.transcript.print(root.mediaTitle);\n    });\n    root.$.transcript.setMedia(root.$.player);\n\n    // handles fullscreen\n    if (root.__showFullscreen) {\n      screenfull.on(\"change\", () => {\n        this.fullscreen = screenfull.isFullscreen;\n      });\n    }\n    // handles dragging with a mouse\n    root.$.slider.addEventListener(\"dragging-changed\", e => {\n      this._toggleSliderSeek(\n        root.$.slider.dragging,\n        root.$.slider.immediateValue\n      );\n    });\n    // handles slider focus\n    root.$.slider.addEventListener(\"focused-changed\", e => {\n      this._toggleSliderSeek(root.$.slider.focused, root.$.slider.value);\n    });\n  },\n\n  /**\n   * get label based on whether or not the video is playing\n   */\n  _getThumbnailCSS: function(thumbnailSrc) {\n    return thumbnailSrc != null\n      ? \"background-image: url(\" + thumbnailSrc + \"); background-size: cover;\"\n      : null;\n  },\n\n  /**\n   * handles slider seeking via mouse or keyboard\n   */\n  _toggleSliderSeek: function(seeking, value) {\n    if (seeking) {\n      if (this.__playing) this.__resumePlaying = true;\n      this.pause();\n    } else {\n      this.seek(value);\n      this.__resumePlaying = false;\n    }\n  },\n\n  /**\n   * gets YouTube iframe\n   */\n  _youTubeRequest: function() {\n    let root = this;\n    if (root.__playerAttached && root.__playerReady) {\n      let options = {\n          width: \"100%\",\n          height: \"100%\",\n          videoId: root.youtubeId\n        },\n        ytInit = function() {\n          root.__media = window.A11yMediaYoutubeUtility.initYoutubePlayer(\n            root.$.youtube,\n            options\n          );\n          root._getTrackData(root.$.loader.media);\n          root._updateCustomTacks();\n          // youtube API doesn't immediately give length of a video\n          let int = setInterval(() => {\n            if (root.__media.getDuration !== undefined) {\n              clearInterval(int);\n              root.__duration = root.__media.duration = root.__media.getDuration();\n              root.__status =\n                root._getHHMMSS(0, root.__media.duration) +\n                \"/\" +\n                root._getHHMMSS(root.__media.duration);\n              root.$.controls.setStatus(root.__status);\n              root.disableInteractive = !root.__interactive;\n            }\n          }, 100);\n        },\n        checkApi = function(e) {\n          if (window.A11yMediaYoutubeUtility.apiReady) {\n            document.removeEventListener(\"youtube-api-ready\", checkApi);\n            ytInit();\n          }\n        };\n      if (window.A11yMediaYoutubeUtility.apiReady) {\n        ytInit();\n      } else {\n        document.addEventListener(\"youtube-api-ready\", checkApi);\n      }\n    }\n  },\n\n  /**\n   * updates custom tracks for youTube\n   */\n  _updateCustomTacks: function() {\n    if (this.isYoutube && this.tracks !== undefined && this.tracks !== null) {\n      let root = this,\n        track = root.tracks[this.$.transcript.selectedTranscript],\n        active = [],\n        caption = \"\";\n      if (\n        track !== undefined &&\n        track !== null &&\n        track.cues !== undefined &&\n        track.cues !== null\n      ) {\n        for (let i = 0; i < track.cues.length; i++) {\n          if (\n            track.cues[i].seek < root.__elapsed &&\n            track.cues[i].seekEnd > root.__elapsed\n          ) {\n            active.push(track.cues[i].order);\n            caption = caption === \"\" ? track.cues[i].text : caption;\n          }\n        }\n        root.$.customcctxt.innerText = caption;\n        root.$.transcript.setActiveCues(active);\n      }\n    }\n  },\n\n  /**\n   * plays the media\n   */\n  play: function(e) {\n    let root = this;\n    root.__playing = true;\n    if (e === undefined || e.detail === root.$.playbutton) {\n      // while playing, update the slider and length\n      root.__playProgress = setInterval(() => {\n        root.__elapsed =\n          root.__media.getCurrentTime() > 0 ? root.__media.getCurrentTime() : 0;\n        root.__duration = root.__media.duration > 0 ? root.__media.duration : 0;\n        root._updateCustomTacks();\n        root.__status =\n          root._getHHMMSS(root.__media.getCurrentTime(), root.__duration) +\n          \"/\" +\n          root._getHHMMSS(root.__duration);\n        root.$.controls.setStatus(root.__status);\n        // if the video reaches the end and is not set to loop, stop\n        if (root.__elapsed === root.__duration && !root.loop) {\n          root.__playing = false;\n          clearInterval(root.__playProgress);\n        }\n\n        //updated buffered section of the slider\n        root.__buffered = root.__media.getBufferedTime;\n      }, 1);\n      root.fire(\"a11y-player-playing\", root);\n      root.__media.play();\n    }\n  },\n\n  /**\n   * pauses the media\n   */\n  pause: function() {\n    let root = this;\n    root.__playing = false;\n    root.__media.pause();\n\n    //stop updating the slider and length\n    clearInterval(root.__playProgress);\n  },\n\n  /**\n   * stops the media\n   */\n  stop: function() {\n    this.pause();\n    this.seek(0);\n  },\n\n  /**\n   * restarts the media\n   */\n  restart: function() {\n    this.seek(0);\n    this.play();\n  },\n\n  /**\n   * seeks media backward at a set increment\n   */\n  rewind: function(amt) {\n    amt = amt !== undefined ? amt : 1;\n    this.seek(Math.max(this.__media.getCurrentTime() - amt, 0));\n  },\n\n  /**\n   * seeks media forward at a set increment\n   */\n  forward: function(amt) {\n    amt = amt !== undefined ? amt : 1;\n    this.seek(Math.min(this.__media.getCurrentTime() + amt, this.__duration));\n  },\n\n  /**\n   * seeks to a specific time\n   */\n  seek: function(time) {\n    let seekable = this.__media.seekable;\n    if (\n      seekable.length > 0 &&\n      time >= seekable.start(0) &&\n      time <= seekable.end(0)\n    ) {\n      this.__media.seek(time);\n      this.__elapsed = time;\n      this.__status =\n        this._getHHMMSS(this.__media.getCurrentTime(), this.__duration) +\n        \"/\" +\n        this._getHHMMSS(this.__duration);\n      this.$.controls.setStatus(this.__status);\n      this._updateCustomTacks();\n      if (this.__resumePlaying) this.play();\n    }\n  },\n\n  /**\n   * toggles captions:\n   * toggleCC(true) to check the toggle, toggleCC(false) for unchecking, and toggleCC to toggle\n   */\n  toggleCC: function(mode) {\n    this.cc = mode === undefined ? !this.cc : mode;\n    this.$.loader.setCC(this.cc);\n  },\n\n  /**\n   * set volume of media\n   */\n  setVolume: function(value) {\n    this.volume = value !== null ? value : 70;\n    this.__media.setVolume(this.volume);\n    this.muted = this.volume === 0;\n  },\n\n  /**\n   * set speed/playback rate of media\n   */\n  setPlaybackRate: function(value) {\n    value = value !== null ? value : 1;\n    this.__media.setPlaybackRate(value);\n  },\n\n  /**\n   * toggles autoplay:\n   * toggleAutoplay(true) to check the toggle,\n   * toggleAutoplay(false) for unchecking, and\n   * toggleAutoplay to toggle\n   */\n  toggleAutoplay: function(mode) {\n    if (this.isYoutube) {\n    } else {\n      this.autoplay = mode === undefined ? !this.muted : mode;\n      this.__media.setAutoplay(this.autoplay);\n    }\n  },\n\n  /**\n   * toggles looping:\n   * toggleLoop(true) to check the toggle,\n   * toggleLoop(false) for unchecking,\n   * and toggleLoop to toggle\n   */\n  toggleLoop: function(mode) {\n    if (this.isYoutube) {\n    } else {\n      this.loop = mode === undefined ? !this.loop : mode;\n      this.__media.setLoop(this.loop);\n    }\n  },\n\n  /**\n   * toggles mute:\n   * toggleMute(true) to check the toggle,\n   * toggleMute(false) for unchecking, and\n   * toggleMute to toggle\n   */\n  toggleMute: function(mode) {\n    this.muted = mode === undefined ? !this.muted : mode;\n    this.__volume = this.muted ? 0 : Math.max(this.volume, 10);\n    this.__media.setMute(this.muted);\n  },\n\n  /**\n   * toggles sticky attribute:\n   * toggleSticky(true) to stick, toggleSticky(false) for unstick, and toggleSticky to toggle sticky\n   */\n  toggleSticky: function(mode) {\n    mode = mode === undefined ? !this.sticky : mode;\n    this.sticky = mode;\n    this.fire(\"player-sticky\", this);\n  },\n\n  /**\n   * toggles transcript:\n   * toggleTranscript(true) to check the toggle, toggleTranscript(false) for unchecking, and toggleTranscript to toggle\n   */\n  toggleTranscript: function(mode) {\n    mode = mode === undefined ? this.hideTranscript : mode;\n    this.hideTranscript = !mode;\n    if (this.$.transcript !== undefined && this.$.transcript !== null) {\n      this.fire(\"transcript-toggle\", this);\n      this.$.transcript.toggleHidden(this.hideTranscript);\n    }\n  },\n\n  /**\n   * selects a specific track by index\n   */\n  selectTrack: function(index) {\n    this.$.loader.selectTrack(index);\n    this.$.transcript.setActiveTranscript(index);\n  },\n\n  /**\n   * gets media caption\n   */\n  _getMediaCaption: function(audioOnly, audioLabel, mediaTitle) {\n    let hasMediaTitle =\n      mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle;\n    } else {\n      return null;\n    }\n  },\n\n  /**\n   * gets print caption\n   */\n  _getPrintCaption: function(audioOnly, audioLabel, videoLabel, mediaTitle) {\n    let hasMediaTitle =\n      mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle + \" (\" + videoLabel + \")\";\n    } else {\n      return videoLabel;\n    }\n  },\n\n  /**\n   * loads track metadata\n   */\n  _getTrackData: function() {\n    // gets cues from tracks\n    let root = this,\n      media = root.$.loader.media,\n      tdata = new Array(),\n      selected = 0;\n    root.hasTranscript = !root.standAlone;\n    // hides the video subtitles and captions and adds them to the tracks dropdown-select\n    //gets and updates track metadata\n    for (let i = 0; i < media.textTracks.length; i++) {\n      if (media.textTracks[i] !== null) {\n        let track = media.textTracks[i],\n          tidata = {},\n          loaded = track.cues !== undefined,\n          complete = 0,\n          label = track.label,\n          lang = track.language,\n          text =\n            label !== undefined\n              ? label\n              : lang !== undefined\n                ? lang\n                : \"Track \" + i,\n          cues,\n          loadCueData = setInterval(() => {\n            track.mode = \"showing\";\n            if (track.cues !== undefined && track.cues.length > 0) {\n              track.mode = \"hidden\";\n              getCueData();\n              clearInterval(loadCueData);\n            }\n          }, 1),\n          getCueData = function() {\n            track.mode = \"hidden\";\n\n            let cues = Object.keys(track.cues).map(function(key) {\n              return {\n                order: track.cues[key].id !== \"\" ? track.cues[key].id : key,\n                seek: track.cues[key].startTime,\n                seekEnd: track.cues[key].endTime,\n                start: root._getHHMMSS(\n                  track.cues[key].startTime,\n                  root.media.duration\n                ),\n                end: root._getHHMMSS(\n                  track.cues[key].endTime,\n                  root.media.duration\n                ),\n                text: track.cues[key].text\n              };\n            });\n            tidata = {\n              text: text,\n              language: lang,\n              value: i,\n              cues: cues\n            };\n            tdata.push(tidata);\n            root.set(\"tracks\", tdata);\n            root.$.controls.setTracks(tdata);\n            root.$.transcript.setTracks(tdata);\n            root.selectTrack(track.default ? i : 0);\n\n            track.oncuechange = function(e) {\n              root.$.transcript.setActiveCues(\n                Object.keys(e.currentTarget.activeCues).map(function(key) {\n                  return e.currentTarget.activeCues[key].id;\n                })\n              );\n            };\n          };\n      }\n    }\n    if (media.textTracks.length > 0) {\n      root.hasCaptions = true;\n    } else {\n      root.standAlone = true;\n    }\n    if (\n      !root.standAlone &&\n      root.$.transcript !== undefined &&\n      root.$.transcript !== null\n    ) {\n      root.$.transcript.addEventListener(\"cue-seek\", function(e) {\n        root.__resumePlaying = root.__playing;\n        root.seek(e.detail.cue.seek);\n      });\n    }\n  },\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onControlsChanged: function(e) {\n    let root = this,\n      action = e.detail.label !== undefined ? e.detail.label : e.detail.id;\n    if (action === \"backward\" || action === root.rewindLabel) {\n      root.rewind(root.__duration / 20);\n    } else if (\n      action === \"closed captions\" ||\n      action === \"captions\" ||\n      action === root.captionsLabel ||\n      action === root.captionsMenuLabel\n    ) {\n      root.toggleCC();\n    } else if (\n      action === \"transcript\" ||\n      action === \"transcript-toggle\" ||\n      action === root.transcriptLabel ||\n      action === root.transcriptMenuLabel\n    ) {\n      root.toggleTranscript();\n    } else if (e.detail.id === \"tracks\") {\n      if (e.detail.value === \"\") {\n        root.toggleCC(false);\n      } else {\n        root.toggleCC(true);\n        root.selectTrack(e.detail.value);\n      }\n    } else if (action === \"forward\" || action === root.forwardLabel) {\n      root.forward(root.__duration / 20);\n    } else if (action === \"full screen\" || action === root.fullscreenLabel) {\n      this.toggleTranscript(this.fullscreen);\n      screenfull.toggle(root.$.outerplayer);\n    } else if (action === \"loop\" || action === root.loopLabel) {\n      root.toggleLoop();\n    } else if (\n      action === \"mute\" ||\n      action === \"unmute\" ||\n      action === root.muteLabel ||\n      action === root.unmuteLabel\n    ) {\n      root.toggleMute();\n    } else if (action === \"pause\" || action === root.pauseLabel) {\n      root.pause();\n    } else if (action === \"play\" || action === root.playLabel) {\n      root.play();\n    } else if (action === \"restart\" || action === root.restartLabel) {\n      root.seek(0);\n      root.play();\n    } else if (action === \"speed\" || action === root.speedLabel) {\n      root.setPlaybackRate(e.detail.value);\n    } else if (action === \"volume\" || action === root.volumeLabel) {\n      root.setVolume(e.detail.value);\n    }\n  }\n});\nexport { A11yMediaPlayer };\n"],"names":["window","a11yMediaBehaviors","MediaProps","properties","autoplay","type","Boolean","value","cc","height","Number","isYoutube","computed","lang","String","loop","manifest","muted","preload","playbackRate","status","selectedTrack","Object","selectedTrackID","tracks","Array","volume","youtubeId","youTube","_hasAttribute","attr","_testAttribute","val","GeneralFunctions","_addResponsiveUtility","data","data2","undefined","element","this","attribute","relativeToParent","ResponsiveUtility","requestAvailability","fire","_getHHMMSS","max","a","b","i","none","Math","floor","round","PlayerBehaviors","accentColor","reflectToAttribute","allowConcurrent","audioOnly","compactControls","crossorigin","dark","disableFullscreen","flexLayout","fullscreen","fullscreenButton","notify","hasCaptions","hasTranscript","hideElapsedTime","hideTranscript","mediaTitle","noHeight","noPlayButton","playing","responsiveSize","showCustomCaptions","standAlone","sticky","stickyCorner","thumbnailSrc","width","audioLabel","captionsIcon","captionsLabel","captionsMenuLabel","captionsMenuOff","uiLanguage","forwardIcon","forwardLabel","fullscreenIcon","fullscreenLabel","loadingLabel","loopLabel","muteIcon","muteLabel","pauseIcon","pauseLabel","playIcon","playLabel","restartIcon","restartLabel","rewindIcon","rewindLabel","settingsIcon","settingsLabel","speedLabel","transcriptIcon","transcriptLabel","transcriptMenuLabel","unmuteIcon","unmuteLabel","videoLabel","volumeLabel","_getNoHeight","_noPlayButton","_getFullscreenButton","test","navigator","userAgent","_getCompactControls","_showCustomCaptions","_isFlexLayout","stackedLayout","TranscriptBehaviors","darkTranscript","disableInteractive","disableSearch","disableScroll","disablePrintButton","hideTimestamps","media","search","searchLabel","searchIcon","searchNextButtonLabel","searchNextButtonIcon","searchPrevButtonLabel","searchPrevButtonIcon","target","autoScrollLabel","autoScrollIcon","printLabel","printIcon","_template","html","is","behaviors","ready","root","$","video","audio","addEventListener","duration","seekable","setVolume","setMute","setCC","setLoop","setPlaybackRate","aspectRatio","videoWidth","videoHeight","getBufferedTime","buffered","length","end","getCurrentTime","currentTime","selectTrack","index","textTracks","parseInt","mode","play","pause","stop","seek","restart","time","selectedTrackId","setAutoplay","listeners","tap","label","disabled","attached","text","innerText","img","thumbnail","check","setInterval","naturalWidth","clearInterval","aspect","naturalHeight","style","_getPlaying","_buttonTap","controls","icon","toggle","__target","button","change","playPause","muteUnmute","sm","md","lg","xl","e","__selectedTrack","detail","control","settings","settingslist","preventDefault","mute","onfocus","classList","add","onblur","remove","setStatus","statbar","statmenu","setTracks","set","slice","notifyPaths","_getPlayPause","_getMuteUnmute","_onButtonClick","_onSettingsChanged","simpleColorsBehaviors","active","activeCues","cue","setAttribute","mediaId","content","enableSearch","print","_getActiveCue","includes","order","toString","_onClick","tabIndex","role","selectedTranscript","SimpleColorsUtility","setMedia","player","toggleHidden","inner","document","getElementById","querySelector","hidden","track","shadowRoot","open","dom","node","write","innerHTML","close","focus","notifyPath","render","setActiveCues","cues","offset","offsetTop","scrollingTo","to","perTick","scrollTop","setTimeout","_getTabIndex","_getRole","_onCueSeek","setActiveTranscript","scroll","A11yMediaUtility","players","stickyPlayer","created","__playerLoader","push","instance","body","__stickyManager","setStickyPlayer","__scrollChecker","_checkScroll","detached","removeEventListener","checkConcurrentPlayers","playeri","parent","_getParentNode","__playerTop","__playerUpperMiddle","offsetHeight","__playerLowerMiddle","toggleSticky","__parent","wintop","pageYOffset","winbottom","innerHeight","__playing","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","createElement","appendChild","A11yMediaYoutubeUtility","counter","apiReady","YT","api","onYouTubeIframeAPIReady","event","CustomEvent","dispatchEvent","initYoutubePlayer","elem","options","div","id","iframe","Player","videoId","playerVars","color","disablekb","enablejsapi","iv_load_policy","modestbranding","showinfo","rel","playVideo","pauseVideo","seekTo","unMute","start","A11yMediaPlayer","Polymer","mediaCaption","printCaption","__playerAttached","_youTubeRequest","__playerReady","__interactive","__status","__slider","slider","__volume","__resumePlaying","__showFullscreen","screenfull","enabled","__duration","maxWidth","sources","paddingTop","__media","loader","playbutton","removeAttribute","_getTrackData","tcontrols","transcript","on","_this","isFullscreen","_toggleSliderSeek","dragging","immediateValue","focused","_getThumbnailCSS","seeking","ytInit","youtube","_updateCustomTacks","int","getDuration","checkApi","caption","__elapsed","seekEnd","customcctxt","__playProgress","__buffered","rewind","amt","forward","min","toggleCC","toggleAutoplay","toggleLoop","toggleMute","toggleTranscript","_getMediaCaption","hasMediaTitle","_getPrintCaption","tdata","tidata","complete","language","getCueData","loadCueData","keys","map","key","startTime","endTime","default","oncuechange","currentTarget","_onControlsChanged","action","outerplayer"],"mappings":"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"}