{"version":3,"file":"a11y-collapse.umd.js","sources":["lib/a11y-collapse-button-styles.js","lib/a11y-collapse-accordion-button.js","lib/a11y-collapse-icon-button.js","a11y-collapse.umd.js"],"sourcesContent":["var $_documentContainer = document.createElement(\"div\");\n$_documentContainer.setAttribute(\"style\", \"display: none;\");\n\n$_documentContainer.innerHTML = `<dom-module id=\"a11y-collapse-button-styles\">\n    <template>\n      <custom-style>\n        <style is=\"custom-style\">\n            :host #heading {\n                display: flex;\n                justify-content: stretch;\n                align-items: center;\n                padding: 0em var(--a11y-collapse-horizontal-padding, 1em);\n                font-weight: bold;\n                @apply --a11y-collapse-heading;\n            }\n            :host #text {\n                flex-grow: 1;\n                @apply --a11y-collapse-heading-text;\n            }\n            :host #expand {\n                transition: transform 0.5s;\n                @apply --a11y-collapse-icon;\n            }\n            :host #expand[rotated] {\n                transform: rotate(-90deg);\n                @apply --a11y-collapse-icon-rotated;\n            }\n            :host [aria-controls] {\n                cursor: pointer;\n            }\n            :host([disabled]) [aria-controls] {\n                cursor: not-allowed;\n            }\n            :host([expanded]) #heading {\n                @apply --a11y-collapse-heading-expanded;\n            }\n            :host([expanded]) #text {\n                @apply --a11y-collapse-heading-text-expanded;\n            }\n            :host([expanded]) #expand {\n                @apply --a11y-collapse-icon-expanded;\n            }\n        </style>\n      </custom-style>\n    </template>\n  </dom-module>`;\n\ndocument.head.appendChild($_documentContainer);\n\n/**\n`a11y-collapse-button-styles`\nStyling for buttons on a11y-collapse\n\n@demo demo/index.html\n*/\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"./a11y-collapse-button-styles.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n/**\n`a11y-collapse-accordion-button`\nAn accessible expand collapse.\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n\n  <a11y-collapse-accordion-button \n    disabled\n    icon=\"\"                         //The expand/collapse icon. Default is \"icons:expand-more\"\n    label=\"\"                        //The expand/collapse label. Default is \"expand/collapse\"\n    tooltip=\"\"                      //The expand/collapse tooltip. Default is \"toggle expand/collapse\"\n    <p slot=\"heading\">...</p>       //Named slot for a heading.\n    ...                             //Unnamed slot for a collapsible content.\n  </a11y-collapse-accordion-button>\n\n  CSS Variables: \n  --a11y-collapse-accordion-button-horizontal-padding               //sets the horizontal padding (left and right) inside the a11y-collapse-accordion-button\n  --a11y-collapse-accordion-button-vertical-padding                 //sets the horizontal padding (top and bottom) inside the a11y-collapse-accordion-button\n  --a11y-collapse-accordion-button-border                           //sets the border style. Default is 0px solid black\n\n  CSS Mixins: \n  --a11y-collapse-icon-button-icon-focus: { ... };             //sets CSS for the a11y-collapse-icon-button icon when button is focused or hovered\n  --a11y-collapse-heading-focus: { ... };                      //sets CSS for the a11y-collapse heading when focused or hovered\n  --a11y-collapse-heading-text-focus: { ... };                 //sets CSS for the a11y-collapse heading text when focused or hovered\n\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"a11y-collapse-button-styles\">\n      :host #heading:focus, \n      :host #heading:hover {\n        @apply --a11y-collapse-heading-focus;\n      }\n      :host #heading:focus #text, \n      :host #heading:hover #text {\n        @apply --a11y-collapse-heading-text-focus;\n      }\n      :host #heading:focus #expand, \n      :host #heading:hover #expand {\n        @apply --a11y-collapse-icon-focus;\n      }\n    </style>\n    <div id=\"heading\" aria-controls=\"content\" aria-expanded\\$=\"[[expanded]]\" disabled\\$=\"[[disabled]]\" label\\$=\"[[label]]\" role=\"button\">\n      <div id=\"text\"><slot></slot></div>\n      <iron-icon id=\"expand\" aria-hidden=\"true\" icon\\$=\"[[icon]]\" rotated\\$=\"[[rotated]]\">\n      </iron-icon>\n    </div>\n    <paper-tooltip for=\"heading\">[[tooltip]]</paper-tooltip>\n`,\n\n  is: \"a11y-collapse-accordion-button\",\n\n  properties: {\n    /**\n     * is disabled?\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * icon when expanded\n     */\n    expanded: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * icon for the button\n     */\n    icon: {\n      type: String,\n      value: \"icons:expand-more\"\n    },\n    /**\n     * label for the button\n     */\n    label: {\n      type: String,\n      value: \"expand/collapse\"\n    },\n    /**\n     * tooltip for the button\n     */\n    tooltip: {\n      type: String,\n      value: \"toggle expand/collapse\"\n    },\n    /**\n     * If no expanded icon is set, the default icon will rotate when expanded\n     */\n    rotated: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  ready: function() {\n    let root = this;\n    this.$.heading.addEventListener(\"tap\", function(e) {\n      root._onTap(e);\n    });\n  },\n\n  /**\n   * Remove lsitener.\n   */\n  detached: function() {\n    this.$.heading.removeEventListener(\"tap\");\n  },\n\n  /**\n  /**\n   * Handle tap\n   */\n  _onTap: function(e) {\n    if (!this.disabled) {\n      this.fire(\"a11y-collapse-tap\", this);\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"./a11y-collapse-button-styles.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n/**\n`a11y-collapse-icon-button`\nAn accessible expand collapse.\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  <ally-collapse-icon-button id=\"iconbutton\" \n    expanded$=\"[[_setAriaExpanded(expanded)]]\"\n    label=\"\"                        //The expand/collapse label. Default is \"expand/collapse\"\n    icon=\"\"                         //The expand/collapse icon. Default is \"icons:expand-more\"\n    tooltip=\"\"                      //The expand/collapse tooltip. Default is \"toggle expand/collapse\"\n    rotated$=\"[[__rotateIcon]]\">\n  </ally-collapse-icon-button>\n\n  <a11y-collapse-icon-button \n    accordion \n    disabled\n    icon=\"\"                         //The expand/collapse icon. Default is \"icons:expand-more\"\n    icon-expanded=\"\"                //The expand/collapse icon when expanded. Default is the same as when collapsed.\n    label=\"\"                        //The expand/collapse label. Default is \"expand/collapse\"\n    label-expanded=\"\"               //The expand/collapse label when expanded. Default is the same as when collapsed.\n    tooltip=\"\"                      //The expand/collapse tooltip. Default is \"toggle expand/collapse\"\n    tooltip-expanded=\"\"             //The expand/collapse tooltip when expanded. Default is the same as when collapsed.\n    <p slot=\"heading\">...</p>       //Named slot for a heading.\n    ...                             //Unnamed slot for a collapsible content.\n  </a11y-collapse-icon-button>\n\n  CSS Variables: \n  --a11y-collapse-icon-button-horizontal-padding               //sets the horizontal padding (left and right) inside the a11y-collapse-icon-button\n  --a11y-collapse-icon-button-vertical-padding                 //sets the horizontal padding (top and bottom) inside the a11y-collapse-icon-button\n  --a11y-collapse-icon-button-border                           //sets the border style. Default is 0px solid black\n\n  CSS Mixins: \n  --a11y-collapse-icon-button-icon-focus: { ... };             //sets CSS for the a11y-collapse-icon-button icon when button is focused or hovered\n\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"a11y-collapse-button-styles\">\n      :host #expand:focus,\n      :host #expand:hover {\n        @apply --a11y-collapse-icon-focus;\n      }\n    </style>\n    <div id=\"heading\">\n      <div id=\"text\"><slot></slot></div>\n      <paper-icon-button id=\"expand\" alt\\$=\"[[label]]\" aria-controls=\"content\" aria-expanded\\$=\"[[exanded]]\" disabled\\$=\"[[disabled]]\" label\\$=\"[[label]]\" icon\\$=\"[[icon]]\" rotated\\$=\"[[rotated]]\">\n      </paper-icon-button>\n      <paper-tooltip for=\"expand\">[[tooltip]]</paper-tooltip>\n    </div>\n`,\n\n  is: \"a11y-collapse-icon-button\",\n  behaviors: [HAXBehaviors.PropertiesBehaviors, SchemaBehaviors.Schema],\n\n  properties: {\n    /**\n     * is disabled?\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * icon when expanded\n     */\n    expanded: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * icon for the button\n     */\n    icon: {\n      type: String,\n      value: \"icons:expand-more\"\n    },\n    /**\n     * label for the button\n     */\n    label: {\n      type: String,\n      value: \"expand/collapse\"\n    },\n    /**\n     * tooltip for the button\n     */\n    tooltip: {\n      type: String,\n      value: \"toggle expand/collapse\"\n    },\n    /**\n     * If no expanded icon is set, the default icon will rotate when expanded\n     */\n    rotated: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  ready: function() {\n    let root = this;\n    this.$.expand.addEventListener(\"tap\", function(e) {\n      root._onTap(e);\n    });\n  },\n\n  /**\n   * Remove lsitener.\n   */\n  detached: function() {\n    this.$.expand.removeEventListener(\"tap\");\n  },\n\n  /**\n  /**\n   * Handle tap\n   */\n  _onTap: function(e) {\n    if (!this.disabled) {\n      this.fire(\"a11y-collapse-tap\", this);\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"./lib/a11y-collapse-accordion-button.js\";\nimport \"./lib/a11y-collapse-icon-button.js\";\n/**\n`a11y-collapse`\nAn accessible expand collapse.\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n\n  <a11y-collapse \n    accordion \n    disabled\n    icon=\"\"                         //The expand/collapse icon. Default is \"icons:expand-more\"\n    icon-expanded=\"\"                //The expand/collapse icon when expanded. Default is the same as when collapsed.\n    label=\"\"                        //The expand/collapse label. Default is \"expand/collapse\"\n    label-expanded=\"\"               //The expand/collapse label when expanded. Default is the same as when collapsed.\n    tooltip=\"\"                      //The expand/collapse tooltip. Default is \"toggle expand/collapse\"\n    tooltip-expanded=\"\"             //The expand/collapse tooltip when expanded. Default is the same as when collapsed.\n    <p slot=\"heading\">...</p>       //Named slot for a heading.\n    ...                             //Unnamed slot for a collapsible content.\n  </a11y-collapse>\n\n  CSS Variables: \n  --a11y-collapse-horizontal-padding               //sets the horizontal padding (left and right) inside the a11y-collapse\n  --a11y-collapse-vertical-padding                 //sets the horizontal padding (top and bottom) inside the a11y-collapse\n  --a11y-collapse-border                           //sets the border style. Default is 0px solid black\n\n  CSS Mixins: \n  --a11y-collapse: { ... };                        //sets CSS for the a11y-collapse container\n  --a11y-collapse-disabled: { ... };               //sets CSS for the a11y-collapse container when disabled\n  --a11y-collapse-expanded: { ... };               //sets CSS for the a11y-collapse container when expanded\n  --a11y-collapse-heading: { ... };                //sets CSS for the a11y-collapse heading\n  --a11y-collapse-heading-expanded: { ... };       //sets CSS for the a11y-collapse heading when expanded\n  --a11y-collapse-heading-focus: { ... };          //sets CSS for the a11y-collapse heading when focused or hovered\n  --a11y-collapse-heading-text: { ... };           //sets CSS for the a11y-collapse heading text\n  --a11y-collapse-heading-text-expanded: { ... };  //sets CSS for the a11y-collapse heading text when expanded\n  --a11y-collapse-heading-text-focus: { ... };     //sets CSS for the a11y-collapse heading text when heading is focused or hovered\n  --a11y-collapse-icon: { ... };                   //sets CSS for the a11y-collapse icon\n  --a11y-collapse-icon-expanded: { ... };          //sets CSS for the a11y-collapse icon when expanded\n  --a11y-collapse-icon-focus: { ... };             //sets CSS for the a11y-collapse icon when button is focused or hovered\n  --a11y-collapse-icon-rotated: { ... };           //sets CSS for the a11y-collapse icon when rotated\n  --a11y-collapse-content: { ... };                //sets CSS for the a11y-collapse expanded/collapsed content\n  --a11y-collapse-content-expanded: { ... };       //sets CSS for the a11y-collapse expanded/collapsed content when expanded\n\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        border: var(--a11y-collapse-border, 1px solid);\n        margin: 15px 0;\n        transition: all 0.5s;\n        @apply --a11y-collapse;\n      }\n      :host #content {\n        max-height: 0;\n        overflow: hidden;\n        padding: 0em var(--a11y-collapse-horizontal-padding, 1em);\n        border-top: 0px solid rgba(255,255,255,0);\n        transition: all 0.5s ease-in-out;\n        @apply --a11y-collapse-content;\n      }\n      :host([disabled]) {\n        opacity: 0.5;\n        @apply --a11y-collapse-disabled;\n      }\n      :host([disabled]:not([accordion])) #expand,\n      :host([disabled][accordion]) #heading {\n        cursor: not-allowed;\n      }\n      :host([expanded]) {\n        @apply --a11y-collapse-expanded;\n      }\n      :host([expanded]) #content {\n        max-height: unset;\n        overflow: visibility: hidden;;\n        padding: var(--a11y-collapse-vertical-padding, 1em) var(--a11y-collapse-horizontal-padding, 1em);\n        border-top: var(--a11y-collapse-border, 0px solid);\n        @apply --a11y-collapse-content-expanded;\n      }\n      :host(:not([expanded])) #content-inner {\n        overflow: hidden;\n      }\n    </style>\n    <template is=\"dom-if\" if=\"[[!accordion]]\">\n      <a11y-collapse-icon-button id=\"iconbutton\" disabled\\$=\"[[disabled]]\" expanded\\$=\"[[_setAriaExpanded(expanded)]]\" label\\$=\"[[_getExpandCollapse(expanded,label,labelExpanded)]]\" icon\\$=\"[[_getExpandCollapse(expanded,icon,iconExpanded)]]\" rotated\\$=\"[[__rotateIcon]]\" tooltip\\$=\"[[_getExpandCollapse(expanded,tooltip,tooltipExpanded)]]\">\n        <slot name=\"heading\"></slot>\n      </a11y-collapse-icon-button>\n    </template>\n    <template is=\"dom-if\" if=\"[[accordion]]\">\n      <a11y-collapse-accordion-button id=\"accordionbutton\" disabled\\$=\"[[disabled]]\" expanded\\$=\"[[_setAriaExpanded(expanded)]]\" label\\$=\"[[_getExpandCollapse(expanded,label,labelExpanded)]]\" icon\\$=\"[[_getExpandCollapse(expanded,icon,iconExpanded)]]\" rotated\\$=\"[[__rotateIcon]]\" tooltip\\$=\"[[_getExpandCollapse(expanded,tooltip,tooltipExpanded)]]\">\n        <slot name=\"heading\"></slot>\n      </a11y-collapse-accordion-button>\n    </template>\n    <div id=\"content\" aria-hidden\\$=\"{{!expanded}}\" aria-labelledby=\"heading\" aria-live=\"polite\">\n      <div id=\"content-inner\"><slot></slot></div>\n    </div>\n`,\n\n  is: \"a11y-collapse\",\n  behaviors: [HAXBehaviors.PropertiesBehaviors, SchemaBehaviors.Schema],\n  listeners: { \"a11y-collapse-tap\": \"_onTap\" },\n\n  properties: {\n    /**\n     * accordion-style: whole header acts as button? default is just icon.\n     */\n    accordion: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * is disabled?\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * icon when expanded\n     */\n    expanded: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * icon for the button\n     */\n    icon: {\n      type: String,\n      value: \"icons:expand-more\"\n    },\n    /**\n     * icon when expanded\n     */\n    iconExpanded: {\n      type: String,\n      value: null\n    },\n    /**\n     * label for the button\n     */\n    label: {\n      type: String,\n      value: \"expand/collapse\"\n    },\n    /**\n     * optional label for the button when expanded\n     */\n    labelExpanded: {\n      type: String,\n      value: null\n    },\n    /**\n     * tooltip for the button\n     */\n    tooltip: {\n      type: String,\n      value: \"toggle expand/collapse\"\n    },\n    /**\n     * optional tooltip for the button when expanded\n     */\n    tooltipExpanded: {\n      type: String,\n      value: null\n    },\n    /**\n     * If no expanded icon is set, the default icon will rotate when expanded\n     */\n    __rotateIcon: {\n      type: Boolean,\n      computed: \"_isRotated(expanded,iconExpanded)\"\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  attached: function() {\n    this.fire(\"a11y-collapse-attached\", this);\n    // Establish hax property binding\n    let props = {\n      canScale: false,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Single Expand Collapse\",\n        description: \"A single instance of an expand collapse.\",\n        icon: \"view-day\",\n        color: \"grey\",\n        groups: [\"Text\"],\n        meta: {\n          author: \"Your organization on github\"\n        }\n      },\n      settings: {\n        quick: [],\n        configure: [\n          {\n            property: \"expanded\",\n            title: \"Expanded\",\n            description: \"Expand by default\",\n            inputMethod: \"boolean\"\n          },\n          {\n            property: \"label\",\n            title: \"Label\",\n            description: \"The label of the toggle expand/collapse button\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"tooltip\",\n            title: \"Tooltip\",\n            description: \"The tooltip for the toggle expand/collapse button\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"icon\",\n            title: \"Icon\",\n            description: \"The icon for the toggle expand/collapse button\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"iconExpanded\",\n            title: \"Expanded Icon\",\n            description:\n              \"Optional: The icon for the toggle expand/collapse button when expanded\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  },\n\n  /**\n   * Let the group know that this is gone.\n   */\n  detached: function() {\n    this.fire(\"a11y-collapse-detached\", this);\n  },\n\n  /**\n   * Toggles based on mode\n   */\n  toggle: function(mode) {\n    this.expanded = mode !== undefined ? mode : !this.expanded;\n    this.fire(\"a11y-collapse-toggle\", this);\n  },\n\n  /**\n   * If no expanded value is set, the default will be same as collapsed\n   */\n  _overrideProp: function(prop, val) {\n    this[prop] = val;\n  },\n\n  /**\n   * If no expanded value is set, the default will be same as collapsed\n   */\n  _getExpandCollapse: function(expanded, ifFalse, ifTrue) {\n    return expanded && ifTrue !== null ? ifTrue : ifFalse;\n  },\n\n  /**\n   * If no expanded icon is set, the default icon will rotate when expanded\n   */\n  _isRotated: function(expanded, iconExpanded) {\n    return !expanded && iconExpanded === null;\n  },\n\n  /**\n   * Handle tap\n   */\n  _onTap: function(e) {\n    if (!this.disabled) {\n      this.toggle();\n      this.fire(\"a11y-collapse-click\", this);\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  _setAriaExpanded: function(expanded) {\n    return \"\" + expanded;\n  }\n});\n"],"names":["$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","_template","html","is","properties","disabled","type","Boolean","value","reflectToAttribute","expanded","icon","String","label","tooltip","rotated","ready","root","this","$","heading","addEventListener","e","_onTap","detached","removeEventListener","fire","behaviors","HAXBehaviors","PropertiesBehaviors","SchemaBehaviors","Schema","expand","listeners","accordion","iconExpanded","labelExpanded","tooltipExpanded","__rotateIcon","computed","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","title","description","color","groups","meta","author","settings","quick","configure","property","inputMethod","advanced","toggle","mode","undefined","_overrideProp","prop","val","_getExpandCollapse","ifFalse","ifTrue","_isRotated","_setAriaExpanded"],"mappings":"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"}