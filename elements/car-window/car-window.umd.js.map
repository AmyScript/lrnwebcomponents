{"version":3,"file":"car-window.umd.js","sources":["car-window.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { props, withComponent } from \"skatejs\";\nimport withLitHtml from \"@skatejs/renderer-lit-html\";\nimport { html } from \"lit-html\";\n\nexport { CarWindow };\n// extend into class name matching library for consistency\nclass SkateJS extends withComponent(withLitHtml()) {}\n/**\n * `car-window`\n * `Describe how a car window works`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @lit-html\n * @skatejs\n * @demo demo/index.html\n */\nclass CarWindow extends SkateJS {\n  \n  // render function\n  render() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n.tint-green {\n  background-color: green;\n}\n\n.tint-clear {\n  opacity: .7;\n  background-color: grey;\n}</style>\n<h2>New car window</h2>\n<div class=\"tint-${this.tint}\">\n    <div hidden=\"${this.manufacture}\">${this.size}</div>\n    <slot></slot>\n</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"tint\": {\n    \"name\": \"tint\",\n    \"type\": \"String\",\n    \"value\": \"clear\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"size\": {\n    \"name\": \"size\",\n    \"type\": \"Number\",\n    \"value\": \"1000\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"manufacture\": {\n    \"name\": \"manufacture\",\n    \"type\": \"Boolean\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  tag() {\n    return \"car-window\";\n  }\n\n  /**\n   * life cycle\n   */\n  constructor() {\n    super();\n\n    // silly but this nets us data binding for default values\n    // map our imported properties json to real props on the element\n    // @notice static getter of properties is built via tooling\n    // to edit modify src/CarWindow-properties.json\n    let obj = CarWindow.properties;\n    for (let p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        if (this.hasAttribute(p)) {\n          this[p] = this.getAttribute(p);\n        } else {\n          this[p] = obj[p].value;\n        }\n      }\n    }\n  }\n  // SkateJS props function that we map our abstracted properties object over to\n  static get props() {\n    // map our imported properties json to real props on the element\n    // @notice static getter of properties is built via tooling\n    // to edit modify src/CarWindow-properties.json\n    let obj = CarWindow.properties;\n    let simpleProps = {};\n    for (let p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        simpleProps[p] = obj[p].value;\n      }\n    }\n    return simpleProps;\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connected() {}\n}\ncustomElements.define(\"car-window\", CarWindow);\n"],"names":["SkateJS","withComponent","withLitHtml","CarWindow","obj","properties","p","hasOwnProperty","_this","hasAttribute","getAttribute","value","html","this","tint","manufacture","size","simpleProps","customElements","define"],"mappings":"myDAUMA,0FAAgBC,gBAAcC,WAa9BC,yEA0EEC,EAAMD,EAAUE,eACf,IAAIC,KAAKF,EACRA,EAAIG,eAAeD,KACjBE,EAAKC,aAAaH,KACfA,GAAKE,EAAKE,aAAaJ,KAEvBA,GAAKF,EAAIE,GAAGK,2BAhFHX,8CAIbY,WAkBQC,KAAKC,KACLD,KAAKE,YAAgBF,KAAKG,0CAsClC,wDA/BA,MACD,MACE,YACA,eACC,4BACa,YACV,QAEN,MACE,YACA,eACC,2BACa,YACV,eAEC,MACL,mBACA,gBACC,uBACa,YACV,oFAwCRZ,EAAMD,EAAUE,WAChBY,EAAc,OACb,IAAIX,KAAKF,EACRA,EAAIG,eAAeD,KACrBW,EAAYX,GAAKF,EAAIE,GAAGK,cAGrBM,WAOXC,eAAeC,OAAO,aAAchB"}