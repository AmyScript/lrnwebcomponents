!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?e(require("@polymer/polymer/polymer-legacy.js"),require("@polymer/polymer/lib/legacy/polymer.dom.js")):"function"==typeof define&&define.amd?define(["@polymer/polymer/polymer-legacy.js","@polymer/polymer/lib/legacy/polymer.dom.js"],e):e(o.polymerLegacy_js,o.polymer_dom_js)}(this,function(o,e){"use strict";function t(){var o,e,r=(o=["\n    <style>\n      :host {\n        display: block;\n        --word-count-color: #888888;\n        --word-count-color-hover: #000000;\n      }\n      :host:after{\n        content: attr(words-text);\n        font-size: 10px;\n        position: relative;\n        transition: .3s font-size,color ease;\n        display: flex;\n        line-height: 16px;\n        flex-direction: row-reverse;\n        margin: 12px;\n        color: var(--word-count-color);\n        @apply(--word-count-text);\n      }\n      :host(:hover):after {\n        font-size: 12px;\n        font-weight: bold;\n        color: var(--word-count-color-hover);\n        @apply(--word-count-text-hover);\n      }\n      :host(:focus):after {\n        font-size: 12px;\n        font-weight: bold;\n        color: var(--word-count-color-hover);\n        @apply(--word-count-text-hover);\n      }\n      :host(:active):after {\n        font-size: 12px;\n        font-weight: bold;\n        color: var(--word-count-color-hover);\n        @apply(--word-count-text-hover);\n      }\n    </style>\n    <slot></slot>\n"],e||(e=o.slice(0)),Object.freeze(Object.defineProperties(o,{raw:{value:Object.freeze(e)}})));return t=function(){return r},r}o.Polymer({_template:o.html(t()),is:"word-count",hostAttributes:{tabindex:"0"},properties:{words:{type:Number},wordsPrefix:{type:String,value:"Words:"},wordsText:{type:String,computed:"_computeWordsText(words, wordsPrefix)",reflectToAttribute:!0}},ready:function(){this._observer=e.dom(this).observeNodes(function(o){(o.addedNodes.length>0||o.removedNodes.length>0)&&this._updateWords()})},_updateWords:function(){""!==e.dom(this).textContent?this.words=parseInt(e.dom(this).textContent.split(/\s+/g).length-1):this.words=0},_computeWordsText:function(o,e){return e+" "+o}})});
//# sourceMappingURL=word-count.umd.js.map
