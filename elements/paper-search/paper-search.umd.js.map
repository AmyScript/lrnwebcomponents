{"version":3,"file":"paper-search.umd.js","sources":["lib/paper-search-bar.js","lib/paper-filter-dialog.js","lib/paper-search-panel.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { IronA11yKeysBehavior } from \"@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js\";\n\nPolymer({\n  is: \"paper-search-bar\",\n\n  /**\n   * Fired when the user requests to open the filtering dialog\n   *\n   * @event paper-search-filter\n   */\n  /**\n   * Fired when the user requests to search for a query\n   *\n   * @event paper-search-search\n   */\n  /**\n   * Fired when the user taps the clear icon\n   *\n   * @event paper-search-clear\n   */\n\n  properties: {\n    /**\n     * Text for which the user is searching\n     */\n    query: {\n      type: String,\n      notify: true,\n      value: \"\"\n    },\n    /**\n     * Whether to hide the Filter button. Set attribute \"hide-filter-button\" to do so.\n     */\n    hideFilterButton: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Whether to disable the Filter button. Set attribute \"disable-filter-button\" to do so.\n     */\n    disableFilterButton: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Number of filters the user has been selected (shown in the badge) (optional)\n     */\n    nrSelectedFilters: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Icon shown in the search background\n     */\n    icon: {\n      type: String,\n      value: \"search\"\n    },\n    /**\n     * Text shown in the search box if the user didn't enter any query\n     */\n    placeholder: {\n      type: String,\n      value: \"Search\"\n    }\n  },\n\n  behaviors: [IronA11yKeysBehavior],\n\n  keyBindings: {\n    enter: \"_search\"\n  },\n\n  focus: function() {\n    this.$.input.focus();\n  },\n\n  // Private methods\n  _filter: function(e) {\n    this.fire(\"paper-search-filter\");\n  },\n  _clear: function() {\n    this.query = \"\";\n    this.$.input.focus();\n    this.fire(\"paper-search-clear\");\n  },\n  _search: function() {\n    this.fire(\"paper-search-search\");\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nPolymer({\n  is: \"paper-filter-dialog\",\n\n  /**\n   * Fired when the user requests to save the filter selection\n   *\n   * @event save\n   */\n\n  properties: {\n    /**\n     * All filters from which the user can choose\n     */\n    filters: Array,\n    /**\n     * All filters that have been selected by the user, e.g. `{ age: [ \"child\", \"teen\" ] }`\n     */\n    selectedFilters: {\n      type: Object,\n      notify: true,\n      value: {}\n    },\n\n    /**\n     * Text for the reset button. Use this property to localize the element.\n     */\n    resetButton: {\n      type: String,\n      value: \"Reset\"\n    },\n\n    /**\n     * Text for the save button. Use this property to localize the element.\n     */\n    saveButton: {\n      type: String,\n      value: \"Save filters\"\n    },\n\n    /**\n     * Label shown if no values are selected for a filter. Use this property to localize the element.\n     */\n    noValuesLabel: {\n      type: String,\n      value: \"No filters yet\"\n    },\n\n    /**\n     * Internal copy that is changed. Copied back to original variable only once the user clicks on [Apply]\n     */\n    _selectedFilters: {\n      type: Object,\n      value: {}\n    },\n    _selectedFilter: Object,\n    _selectedFilterValues: {\n      type: Array,\n      value: []\n    }\n  },\n\n  // Public methods\n  /**\n   * Opens the filter dialog\n   */\n  open: function() {\n    // Attach dialog to the body to ensure it's on top of all existing overlays\n    // XXX - Known issue: this generates addEventListener errors from a11y\n    dom(document.body).appendChild(this);\n\n    // Wait until dialog is added to the DOM (required for Safari)\n    setTimeout(\n      function() {\n        this.$.dialog.open();\n\n        // Clone selected filters, so it can be changed without touching the external property\n        this._selectedFilters = Object.assign({}, this.selectedFilters);\n      }.bind(this),\n      1\n    );\n  },\n\n  close: function() {\n    this.$.dialog.close();\n  },\n\n  /**\n   * Handles if the user taps on a filter\n   */\n  _tapSelectFilter: function(e) {\n    this.$.selector.select(e.model.filter);\n\n    this._preselectFilterValues();\n  },\n\n  /**\n   * Separate function for unit testing\n   */\n  _preselectFilterValues: function() {\n    // Check all values that are selected\n    var selectedValueIds = this._selectedFilters[this._selectedFilter.id];\n    var isSelected = function(value) {\n      return (\n        Boolean(selectedValueIds) && selectedValueIds.indexOf(value.id) >= 0\n      );\n    };\n    this._selectedFilterValues = this._selectedFilter.values.map(function(\n      value\n    ) {\n      return Object.assign({}, value, {\n        selected: isSelected(value)\n      });\n    });\n  },\n  _tapReset: function(e) {\n    this._selectedFilters = {};\n  },\n  _tapApply: function(e) {\n    this.selectedFilters = this._selectedFilters;\n\n    this.fire(\"save\");\n  },\n  _tapSelectValues: function(e) {\n    // Captured IDs of the selected items\n    const selectedValues = this._selectedFilterValues\n      .filter(function(value) {\n        return value.selected;\n      })\n      .map(function(value) {\n        return value.id;\n      });\n    this._selectedFilters = Object.assign({}, this._selectedFilters, {\n      [this._selectedFilter.id]: selectedValues\n    });\n\n    this.$.selector.deselect(this._selectedFilter);\n  },\n\n  /**\n   * True if any filter was set\n   * @param  {[type]} selectedFilters  [description]\n   * @return {[type]}                   [description]\n   */\n  _hasSelectedFilters: function(selectedFilters) {\n    // Iterate until we find a filter that is selected\n    for (selectedFilter in selectedFilters) {\n      if (selectedFilters[selectedFilter].length > 0) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  // Returns the concated names of the selected values for a specific filter\n  _getSelectedValuesNames: function(filter, _selectedFilters) {\n    var selectedValueIds = _selectedFilters[filter.id];\n    if (!filter.values || !selectedValueIds) {\n      return this.noValuesLabel;\n    }\n\n    // Capture names of all selected values\n    var names = filter.values\n      .filter(function(value) {\n        // Only consider values that are selected\n        return selectedValueIds.indexOf(value.id) >= 0;\n      })\n      .map(function(value) {\n        // Capture name of the selected value\n        return value.name;\n      });\n\n    return names.length > 0 ? names.join(\", \") : this.noValuesLabel;\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"./paper-search-bar.js\";\nimport \"./paper-filter-dialog.js\";\n\nPolymer({\n  is: \"paper-search-panel\",\n\n  /**\n   * Fired when the user changes the parameter defining the currently shown items\n   *\n   * @event change-request-params\n   */\n  /**\n   * Fired when the user requests to search for a query\n   *\n   * @event search\n   */\n\n  properties: {\n    /**\n     * Query for which the user was searching\n     */\n    search: {\n      type: String,\n      observer: \"_onChangeRequest\",\n      notify: true\n    },\n    /**\n     * All filters from which the user can choose\n     */\n    filters: Object,\n    /**\n     * All filters that have been selected by the user, e.g. `{ age: [ \"child\", \"teen\" ] }`\n     */\n    selectedFilters: {\n      type: Object,\n      observer: \"_onChangeRequest\",\n      notify: true,\n      value: {}\n    },\n    /**\n     * Items that are currently shown in the lister\n     */\n    items: Array,\n    /**\n     * True if further items could be loaded\n     */\n    hasMore: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * True if items are currently loaded\n     */\n    loading: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Whether to hide the Filter button. Set attribute \"hide-filter-button\" to do so.\n     */\n    hideFilterButton: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Number of items loaded per page (i.e. for each click on [more])\n     */\n    count: {\n      type: Number,\n      notify: true,\n      value: 20\n    },\n    /**\n     * Icon shown in the search background\n     */\n    icon: {\n      type: String,\n      value: \"search\"\n    },\n    /**\n     * Text shown in the search box if the user didn't enter any query\n     */\n    placeholder: {\n      type: String,\n      value: \"Search\"\n    },\n\n    /**\n     * Text shown if no results are found. Use this property to localize the element.\n     */\n    noResultsText: {\n      type: String,\n      value: \"No matching results found.\"\n    },\n\n    /**\n     * Text for the more button to load more data. Use this property to localize the element.\n     */\n    moreButton: {\n      type: String,\n      value: \"More\"\n    },\n\n    /**\n     * Text for the reset button in the filter dialog. Use this property to localize the element.\n     */\n    resetButton: String,\n\n    /**\n     * Text for the save button in the filter dialog. Use this property to localize the element.\n     */\n    saveButton: String,\n\n    /**\n     * Label shown if no values are selected for a filter. Use this property to localize the element.\n     */\n    noValuesLabel: String,\n\n    _hasItems: {\n      type: Boolean,\n      computed: \"_computeHasItems(items)\",\n      value: false\n    }\n  },\n\n  getPaperSearchBarInstance: function() {\n    return this.$.paperSearchBar;\n  },\n\n  // Private methods\n  _loadMore: function() {\n    this.count += 20;\n\n    this._updateData();\n  },\n  _computeHasItems: function(items) {\n    return typeof items !== \"undefined\" && items.length > 0;\n  },\n  _showNoResults: function(_hasItems, loading) {\n    return !_hasItems && !loading;\n  },\n  _onChangeRequest: function(newValue, oldValue) {\n    // Ignore initial setting of properties (caller is supposed to trigger this call automatically)\n    if (typeof oldValue !== \"undefined\") {\n      // Set back to default to avoid endless listers\n      this.count = 20;\n      this._updateData();\n    }\n  },\n  _updateData: function() {\n    this.fire(\"change-request-params\");\n  },\n  _onFilter: function() {\n    this.$.filterDialog.open();\n  },\n  _onSearch: function() {\n    this.fire(\"search\");\n  },\n  // Counts the selected filters\n  _getNrSelectedFilters: function(selectedFilters) {\n    if (Object.keys(selectedFilters).length <= 0) {\n      return 0;\n    }\n\n    var nrSelectedFilters = Object.keys(selectedFilters)\n      .map(function(key) {\n        // Returns number of selected value for a filter\n        return selectedFilters[key].length;\n      })\n      .reduce(function(sum, value) {\n        // Sum up the selected values across filters\n        return sum + value;\n      });\n\n    return nrSelectedFilters;\n  },\n\n  _disableFilterButton: function(filters) {\n    return !(filters && filters.length > 0);\n  }\n});\n"],"names":["is","properties","query","type","String","notify","value","hideFilterButton","Boolean","disableFilterButton","nrSelectedFilters","Number","icon","placeholder","behaviors","IronA11yKeysBehavior","keyBindings","enter","focus","$","input","_filter","e","fire","_clear","_search","filters","Array","selectedFilters","Object","resetButton","saveButton","noValuesLabel","_selectedFilters","_selectedFilter","_selectedFilterValues","open","dom","document","body","appendChild","this","setTimeout","dialog","assign","bind","close","_tapSelectFilter","selector","select","model","filter","_preselectFilterValues","selectedValueIds","id","isSelected","indexOf","values","map","selected","_tapReset","_tapApply","_tapSelectValues","selectedValues","deselect","_hasSelectedFilters","selectedFilter","length","_getSelectedValuesNames","names","name","join","search","observer","items","hasMore","loading","count","noResultsText","moreButton","_hasItems","computed","getPaperSearchBarInstance","paperSearchBar","_loadMore","_updateData","_computeHasItems","_showNoResults","_onChangeRequest","newValue","oldValue","_onFilter","filterDialog","_onSearch","_getNrSelectedFilters","keys","key","reduce","sum","_disableFilterButton"],"mappings":"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"}