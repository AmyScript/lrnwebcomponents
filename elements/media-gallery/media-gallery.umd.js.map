{"version":3,"file":"media-gallery.umd.js","sources":["media-gallery.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport \"@lrnwebcomponents/lrndesign-gallery/lrndesign-gallery.js\";\n/**\n`media-gallery`\nConnects lrndesign-gallery to HAX\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n\n*/\nlet MediaGallery = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n    <lrndesign-gallery\n      accent-color\\$=\"[[accentColor]]\"\n      dark\\$=\"[[dark]]\"\n      grid\\$=\"[[grid]]\"\n      sizing\\$=\"[[sizing]]\"\n      sources\\$=\"[[sources]]\"\n      title\\$=\"[[title]]\"\n    >\n      <slot slot=\"description\" name=\"description\"></slot>\n    </lrndesign-gallery>\n  `,\n\n  is: \"media-gallery\",\n  behaviors: [HAXBehaviors.PropertiesBehaviors, SchemaBehaviors.Schema],\n\n  properties: {\n    /**\n     * accent color for gallery\n     */\n    accentColor: {\n      type: String,\n      value: null\n    },\n    /**\n     * use dark theme (default is light)?\n     */\n    dark: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * thumbnail grid layout, default is false (carousel layout)\n     */\n    grid: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * array of carousel/grid items\n     */\n    sources: {\n      type: Array,\n      value: []\n    },\n    /**\n     * default sizing: fit screen by cropping (cover)\n     * or with letterboxing (contain)\n     */\n    sizing: {\n      type: String,\n      value: \"cover\"\n    },\n    /**\n     * carousel's title\n     */\n    title: {\n      type: String,\n      value: null\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  attached: function() {\n    // Establish hax property binding\n    let props = {\n      canScale: false,\n      canPosition: false,\n      canEditSource: false,\n      gizmo: {\n        title: \"Image Gallery\",\n        description:\n          \"Displays carousels, grids, thumbnails, and images with captions.\",\n        icon: \"image:photo-library\",\n        color: \"deep-purple\",\n        groups: [\"Images\", \"Media\"],\n        handles: [\n          {\n            type: \"image\",\n            url: \"source\"\n          }\n        ],\n        meta: {\n          author: \"Your organization on github\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the gallery\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"grid\",\n            title: \"Thumbnails/Grid\",\n            description: \"Display as thumbnails.\",\n            inputMethod: \"boolean\",\n            icon: \"image:grid-on\"\n          },\n          {\n            property: \"accentColor\",\n            title: \"Accent color\",\n            description: \"Select the accent color for the player.\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          },\n          {\n            property: \"dark\",\n            title: \"Dark\",\n            description: \"Use dark theme.\",\n            inputMethod: \"boolean\",\n            icon: \"invert-colors\"\n          }\n        ],\n        configure: [\n          {\n            property: \"sizing\",\n            title: \"Sizing\",\n            description: \"How images will fit into the gallery.\",\n            inputMethod: \"select\",\n            options: {\n              cover: \"Cover (cropping)\",\n              contain: \"Contain (letterboxing)\"\n            }\n          },\n          {\n            property: \"sources\",\n            title: \"Image(s)\",\n            description: \"Tracks of different languages of closed captions\",\n            inputMethod: \"array\",\n            properties: [\n              {\n                property: \"title\",\n                title: \"Title\",\n                description: \"Title of the image.\",\n                inputMethod: \"textfield\"\n              },\n              {\n                property: \"src\",\n                title: \"Source/URL\",\n                description: \"Source of the image\",\n                inputMethod: \"textfield\"\n              },\n              {\n                property: \"alt\",\n                title: \"Alt text\",\n                description:\n                  \"Alternative text of this image (for accessibility).\",\n                inputMethod: \"textfield\"\n              },\n              {\n                property: \"details\",\n                title: \"Details/long description about this image\",\n                description: \"Alternative text for accessibility.\",\n                inputMethod: \"textfield\"\n              },\n              /* future feature \n              {\n                'property': 'large',\n                'title': 'Source/URL (Zoom)',\n                'description': 'A larger version of the image (for zooming)',\n                'inputMethod': 'textfield',\n              },\n              {\n                'property': 'thumbnail',\n                'title': 'Source/URL (Thumbnail)',\n                'description': 'A smaller version of the image (for thumbnails)',\n                'inputMethod': 'textfield',\n              },*/\n              {\n                property: \"zoom\",\n                title: \"Zoom\",\n                description: \"Allow zooming.\",\n                inputMethod: \"boolean\",\n                icon: \"zoom-in\"\n              }\n            ]\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  }\n});\nexport { MediaGallery };\n"],"names":["MediaGallery","Polymer","_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","SchemaBehaviors","Schema","properties","accentColor","type","String","value","dark","Boolean","grid","sources","Array","sizing","title","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","url","meta","author","settings","quick","property","inputMethod","configure","options","cover","contain","advanced"],"mappings":"0iDAmBIA,EAAeC,UAAQ,CACzBC,UAAWC,YAkBXC,GAAI,gBACJC,UAAW,CAACC,aAAaC,oBAAqBC,gBAAgBC,QAE9DC,WAAY,CAIVC,YAAa,CACXC,KAAMC,OACNC,MAAO,MAKTC,KAAM,CACJH,KAAMI,QACNF,OAAO,GAKTG,KAAM,CACJL,KAAMI,QACNF,OAAO,GAKTI,QAAS,CACPN,KAAMO,MACNL,MAAO,IAMTM,OAAQ,CACNR,KAAMC,OACNC,MAAO,SAKTO,MAAO,CACLT,KAAMC,OACNC,MAAO,OAOXQ,SAAU,gBA0HHC,iBAxHO,CACVC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLN,MAAO,gBACPO,YACE,mEACFC,KAAM,sBACNC,MAAO,cACPC,OAAQ,CAAC,SAAU,SACnBC,QAAS,CACP,CACEpB,KAAM,QACNqB,IAAK,WAGTC,KAAM,CACJC,OAAQ,gCAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,QACVjB,MAAO,QACPO,YAAa,2BACbW,YAAa,YACbV,KAAM,gBAER,CACES,SAAU,OACVjB,MAAO,kBACPO,YAAa,yBACbW,YAAa,UACbV,KAAM,iBAER,CACES,SAAU,cACVjB,MAAO,eACPO,YAAa,0CACbW,YAAa,cACbV,KAAM,4BAER,CACES,SAAU,OACVjB,MAAO,OACPO,YAAa,kBACbW,YAAa,UACbV,KAAM,kBAGVW,UAAW,CACT,CACEF,SAAU,SACVjB,MAAO,SACPO,YAAa,wCACbW,YAAa,SACbE,QAAS,CACPC,MAAO,mBACPC,QAAS,2BAGb,CACEL,SAAU,UACVjB,MAAO,WACPO,YAAa,mDACbW,YAAa,QACb7B,WAAY,CACV,CACE4B,SAAU,QACVjB,MAAO,QACPO,YAAa,sBACbW,YAAa,aAEf,CACED,SAAU,MACVjB,MAAO,aACPO,YAAa,sBACbW,YAAa,aAEf,CACED,SAAU,MACVjB,MAAO,WACPO,YACE,sDACFW,YAAa,aAEf,CACED,SAAU,UACVjB,MAAO,4CACPO,YAAa,sCACbW,YAAa,cAgBbD,SAAU,OACVjB,MAAO,OACPO,YAAa,iBACbW,YAAa,UACbV,KAAM,cAKde,SAAU"}