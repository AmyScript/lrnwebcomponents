{"version":3,"file":"simple-search.umd.js","sources":["lib/simple-search-content.js","simple-search.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nvar $_documentContainer = document.createElement(\"div\");\n$_documentContainer.setAttribute(\"style\", \"display: none;\");\n\n$_documentContainer.innerHTML = `<dom-module id=\"simple-search-content\">\n  <style>\n    :host #content {\n      @apply --simple-search-content;\n    }\n    :host #content [match-number]{\n      color: var(--simple-search-match-text-color, #000);\n      background-color: var(--simple-search-match-bg-color, #f0f0f0);\n      border: 1px solid; \n      border-color: var(--simple-search-match-border-color, #ddd);\n      padding: 0.1em 0.25em;\n      border-radius: 0.1em;\n      font-weight: bold;\n      @apply --simple-search-match;\n    }\n  </style>\n  <template>\n    <span id=\"content\">\n      <template is=\"dom-repeat\" items=\"[[_searchedContent]]\">\n        <span match-number\\$=\"[[item.matchNumber]]\" tabindex\\$=\"[[_getTabIndex(item.matchNumber)]]\">[[item.text]]</span>\n      </template>\n    </span>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer);\n/**\n`simple-search-content`\nAn inline element that can be searched with the seimple-search element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  <simple-search-content \n    content=\"[[content]]\"                // inline content to be searched\n  </simple-search-content>\n\n  CSS Variables for matched content:\n  color: var(--simple-search-match-text-color, #000);\n  background-color: var(--simple-search-match-background-color, #f0f0f0);\n  border-color: var(--simple-search-match-border-color, #ddd);\n  @apply --simple-search-match;\n*/\nPolymer({\n  is: \"simple-search-content\",\n\n  properties: {\n    /**\n     * Original content. For example: \"The quick brown fox jumps over the lazy dog.\"\n     */\n    content: {\n      type: String,\n      value: null\n    }\n  },\n  /**\n   * associates simple-search-content with a simple-search\n   */\n  enableSearch: function(searchObject) {\n    let root = this,\n      content = [{ matched: false, text: root.content }];\n    if (content[0].text === null) content[0].text = dom(root).innerHTML;\n    // set rendered content to default unsearched content\n    root.setContent(content);\n    // listen for changes to search\n    searchObject.addEventListener(\"search\", function() {\n      // set rendered content to default unsearched content to clear old results\n      root.setContent(content);\n      // set rendered content to default search results\n      root.setContent(searchObject.findMatches(content));\n    });\n\n    // listen for navigation through results\n    searchObject.addEventListener(\"goto-result\", function(e) {\n      root.focus(e.detail);\n    });\n  },\n  /**\n   * sets array of content to be rendered\n   */\n  setContent: function(newContent) {\n    this._searchedContent = newContent;\n  },\n  /**\n   * sets focus on a matched result based on match number\n   */\n  focus: function(matchNumber) {\n    let result = this.$.content.querySelector(\n      '[match-number=\"' + matchNumber + '\"]'\n    );\n    if (result !== undefined && result !== null) result.focus();\n  },\n  /**\n   * gets tab index based on whether item is a match that can be focused on\n   */\n  _getTabIndex: function(matchNumber) {\n    return matchNumber !== undefined && matchNumber !== null ? \"1\" : \"\";\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./lib/simple-search-content.js\";\n/**\n`simple-search`\nA button used in simple-search\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  <simple-search \n    case-sensitive$=\"[[caseSensitive]]\"     // is search case sensitive?\n    controls$=\"[[controls]]\"\n  >\n  </simple-search>\n\n  The searchTerms property provides an array of search terms entered in to the input.\n  The findMatches function returns an array of parsed results.  \n  For example if I searched for the with \n  findMatches(\"The quick brown fox jumps over the lazy dog.\"), \n  the array would be:\n  [\n    {\n      \"matched\": true, \n      \"matchNumber\": 1, \n      \"text\": \"The\"\n    },{\n      \"matched\": false, \n      \"text\": \" quick brown fox jumps over \"\n    },{\n      \"matched\": true, \n      \"matchNumber\": 2, \n      \"text\": \"the\"\n    },{\n      \"matched\": false, \n      \"text\": \" lazy dog.\"\n    }\n  ]\n  or findMatches(\"The quick brown fox jumps over the lazy dog.\",true), \n  the array would be:\n  [\n    {\n      \"matched\": false, \n      \"text\": \"The quick brown fox jumps over \"\n    },{\n      \"matched\": true, \n      \"matchNumber\": 1, \n      \"text\": \"the\"\n    },{\n      \"matched\": false, \n      \"text\": \" lazy dog.\"\n    }\n  ]\n\n  CSS Variables:\n  For the input field...\n  --paper-input-container-input-color: var(--simple-search-input-color, #111);\n  --paper-input-container-focus-color: var(--simple-search-input-placeholder-color, #000);\n  --paper-input-container-color: var(--simple-search-input-line-color, #fff);\n  @apply --simple-search-container;\n\n  For buttons:\n  color: var(--simple-search-button-color, #111);\n  background-color: var(--simple-search-button-bg-color, #eee);\n  border-color: var(--simple-search-button-border-color, #ccc);\n  @apply --simple-search-button;\n\n  For buttons on hover:\n  color: var(--simple-search-button-hover-color, #000);\n  background-color: var(--simple-search-button-hover-bg-color, #fff);\n  border-color: var(--simple-search-button-hover-border-color, #ddd);\n  @apply --simple-search-button-hover;\n\n  For disabled buttons:\n  color: var(--simple-search-button-disabled-color, #666);\n  background-color: var(--simple-search-button-disabled-bg-color, #ccc);\n  border-color: var(--simple-search-button-disabled-border-color, #aaa);\n  @apply --simple-search-button-disabled;\n*/\nPolymer({\n  _template: html`\n  <custom-style>\n    <style is=\"custom-style\">\n      :host {\n        display: flex;\n        align-items: flex-end;\n        justify-content: space-between;\n        width: 100%;\n      }\n      :host #input {\n        flex-grow: 2;\n        margin-right: 0.25em;\n        --paper-input-container-input-color: var(--simple-search-input-text-color, #000);\n        --paper-input-container-focus-color: var(--simple-search-input-line-color, #000);\n        --paper-input-container-color: var(--simple-search-input-placeholder-color, #222);\n        color: var(--simple-search-input-placeholder-color, #222);\n        @apply --simple-search-container;\n      }\n      :host #xofy {\n        margin: 8px;\n      }\n      :host button {\n        margin: 8px 0 8px;\n        color: var(--simple-search-button-color, #111);\n        background-color: var(--simple-search-button-bg-color, #eee);\n        border-color: var(--simple-search-button-border-color, #ccc);\n        @apply --simple-search-button;\n      }\n      :host button:not([disabled]):focus,\n      :host button:not([disabled]):hover {\n        cursor: pointer;\n        color: var(--simple-search-button-hover-color, #000);\n        background-color: var(--simple-search-button-hover-bg-color, #fff);\n        border-color: var(--simple-search-button-hover-border-color, #ddd);\n        @apply --simple-search-button-hover;\n      }\n      :host button[disabled] {\n        cursor: not-allowed;\n        color: var(--simple-search-button-disabled-color, #999);\n        background-color: var(--simple-search-button-disabled-bg-color, #eee);\n        border-color: var(--simple-search-button-disabled-border-color, #ccc);\n        @apply --simple-search-button-disabled;\n      }\n      :host button:not([controls]) {\n        display: none;\n      }\n      :host [shrink-hide] {\n        display: none;\n      }\n    </style>\n    </custom-style>\n    <paper-input id=\"input\" always-float-label\\$=\"[[alwaysFloatLabel]]\" label=\"[[searchInputLabel]]\" no-label-float\\$=\"[[noLabelFloat]]\">\n      <iron-icon icon=\"[[searchInputIcon]]\" slot=\"prefix\"></iron-icon>\n    </paper-input>\n    <div id=\"xofy\" shrink-hide\\$=\"[[noSearch]]\"></div>\n    <div shrink-hide\\$=\"[[noResults]]\">\n      <button id=\"prev\" aria-label=\"[[prevButtonLabel]]\" aria-role=\"button\" controls\\$=\"[[controls]]\" disabled\\$=\"[[prevButtonDisabled]]\" tabindex=\"0\">\n        <iron-icon icon=\"[[prevButtonIcon]]\"></iron-icon>\n      </button>\n      <paper-tooltip for=\"prev\">[[prevButtonLabel]]</paper-tooltip>\n      <button id=\"next\" aria-label=\"[[nextButtonLabel]]\" aria-role=\"button\" controls\\$=\"[[controls]]\" disabled\\$=\"[[nextButtonDisabled]]\" tabindex=\"0\">\n        <iron-icon icon\\$=\"[[nextButtonIcon]]\"></iron-icon>\n      </button>\n      <paper-tooltip for=\"next\">[[nextButtonLabel]]</paper-tooltip>\n    </div>\n`,\n\n  is: \"simple-search\",\n\n  properties: {\n    /**\n     * always float the label\n     */\n    alwaysFloatLabel: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Is the search case-sensitive\n     */\n    caseSensitive: {\n      type: Boolean,\n      value: null\n    },\n    /**\n     * The id of the container element that the navigation buttons control\n     */\n    controls: {\n      type: String,\n      value: null\n    },\n    /**\n     * is the previous next button disabled\n     */\n    nextButtonDisabled: {\n      type: Boolean,\n      computed: \"_isNavButtonDisabled(resultPointer,resultCount,resultsSpan,1)\"\n    },\n    /**\n     * label for next result icon\n     */\n    nextButtonIcon: {\n      type: String,\n      value: \"arrow-forward\"\n    },\n    /**\n     * label for next result button\n     */\n    nextButtonLabel: {\n      type: String,\n      value: \"next result\"\n    },\n    /**\n     * never float the label\n     */\n    noLabelFloat: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * are there any results to navigate?\n     */\n    noResults: {\n      type: Boolean,\n      computed: \"_hasNoResults(resultCount)\"\n    },\n    /**\n     * is there an active search?\n     */\n    noSearch: {\n      type: Boolean,\n      computed: \"_hasNoSearch(searchTerms)\"\n    },\n    /**\n     * is the previous result button disabled\n     */\n    prevButtonDisabled: {\n      type: Boolean,\n      computed: \"_isNavButtonDisabled(resultPointer,resultCount,resultsSpan,-1)\"\n    },\n    /**\n     * label for previous result icon\n     */\n    prevButtonIcon: {\n      type: String,\n      value: \"arrow-back\"\n    },\n    /**\n     * label for previous result button\n     */\n    prevButtonLabel: {\n      type: String,\n      value: \"previous result\"\n    },\n    /**\n     * Number of results.\n     */\n\n    resultCount: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Which result are we currently on?\n     */\n    resultPointer: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * Number of results.\n     */\n    resultsSpan: {\n      type: String,\n      computed: \"_getResultsSpan(noSearch,resultPointer,resultCount)\"\n    },\n    /**\n     * label for search icon\n     */\n    searchInputIcon: {\n      type: String,\n      value: \"search\"\n    },\n    /**\n     * label for search input\n     */\n    searchInputLabel: {\n      type: String,\n      value: \"search\"\n    },\n    /**\n     * an array of search terms\n     */\n    searchTerms: {\n      type: Array,\n      value: []\n    },\n    /**\n     * The container element that the navigation buttons control\n     */\n    target: {\n      type: Object,\n      value: null\n    }\n  },\n\n  ready: function() {\n    let root = this,\n      search = root.$.input;\n    root._getSearchText(search.value);\n    root.addEventListener(\"change\", function(e) {\n      root._getSearchText(search.value);\n      root.resultCount = 0;\n      root.resultPointer = 0;\n      root.fire(\"search\", root);\n    });\n    root.$.prev.addEventListener(\"tap\", function(e) {\n      root._navigateResults(-1);\n    });\n    root.$.next.addEventListener(\"tap\", function(e) {\n      root._navigateResults(1);\n    });\n  },\n\n  /**\n   * are there any results to navigate?\n   */\n  _hasNoResults: function(resultCount) {\n    return resultCount < 1;\n  },\n\n  /**\n   * are there any results to navigate?\n   */\n  _hasNoSearch: function(searchTerms) {\n    return searchTerms.length < 1;\n  },\n\n  /**\n   * get results span text\n   */\n  _getResultsSpan: function(noSearch, resultPointer, resultCount) {\n    let html = \"\";\n    if (resultCount > 0 && resultPointer > 0) {\n      html = resultPointer + \"/\" + resultCount;\n    } else {\n      html = \" \" + resultCount;\n    }\n    this.$.xofy.innerHTML = html;\n    return this.$.xofy.innerHTML;\n  },\n\n  /**\n   * navigate results\n   */\n  _navigateResults: function(increment) {\n    if (\n      this.resultPointer + increment > 0 &&\n      this.resultPointer + increment <= this.resultCount\n    ) {\n      this.resultPointer += increment;\n      this.fire(\"goto-result\", this.resultPointer);\n    }\n  },\n\n  /**\n   * navigate results\n   */\n  _isNavButtonDisabled: function(\n    resultPointer,\n    resultCount,\n    resultsSpan,\n    increment\n  ) {\n    return (\n      resultsSpan == \"\" ||\n      resultPointer + increment <= 0 ||\n      resultPointer + increment > resultCount\n    );\n  },\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   */\n  _getSearchText: function(find) {\n    let temp = new Array();\n    if (find !== undefined && find !== null) {\n      temp = find.split(/[\\\"\\']/gm);\n      for (let i = 0; i < temp.length; i++) {\n        temp[i] = temp[i].trim();\n        if (temp[i] === \"\") temp.splice(i, 1);\n      }\n    }\n    this.set(\"searchTerms\", temp.slice(0));\n  },\n\n  /**\n   * search a string of content for any terms and return an array of results.\n   * For example if I searched for the with\n   * findMatches(\"The quick brown fox jumps over the lazy dog.\"),\n   * the array would be:\n   * [\n   *   {\n   *     \"matched\": true,\n   *     \"matchNumber\": 1,\n   *     \"text\": \"The\",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": false,\n   *     \"text\": \" quick brown fox jumps over \",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": true,\n   *     \"matchNumber\": 2,\n   *     \"text\": \"the\",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": false,\n   *     \"text\": \" lazy dog.\",\n   *     \"searchObject\": root\n   *   }\n   * ]\n   *\n   * or findMatches(\"The quick brown fox jumps over the lazy dog.\",true),\n   * the array would be:\n   * [\n   *   {\n   *     \"matched\": false,\n   *     \"text\": \"The quick brown fox jumps over \",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": true,\n   *     \"matchNumber\": 1,\n   *     \"text\": \"the\",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": false,\n   *     \"text\": \" lazy dog.\",\n   *     \"searchObject\": root\n   *   }\n   * ]\n   */\n  findMatches: function(content) {\n    let root = this,\n      terms = root.searchTerms,\n      modifier = this.caseSensitive ? \"gm\" : \"gim\",\n      results = content.slice(0),\n      updateResults = function(find) {\n        for (let i = 0; i < results.length; i++) {\n          if (results[i].matched === false) {\n            let regex = new RegExp(\"\\\\b\" + find + \"\\\\b\", modifier),\n              text = results[i].text,\n              start = text.search(regex),\n              end = start + find.length;\n            if (start > -1) {\n              root.resultCount += 1;\n              let pre = text.slice(0, start),\n                match = text.slice(start, end),\n                post = text.slice(end, text.length),\n                update = results.splice(\n                  i,\n                  1,\n                  {\n                    matched: false,\n                    text: pre,\n                    searchObject: root\n                  },\n                  {\n                    matched: true,\n                    matchNumber: root.resultCount,\n                    text: match,\n                    searchObject: root\n                  },\n                  {\n                    matched: false,\n                    text: post,\n                    searchObject: root\n                  }\n                );\n            }\n          }\n        }\n      };\n    for (let i = 0; i < terms.length; i++) {\n      updateResults(terms[i]);\n    }\n    root.resultPointer = 0;\n    return results;\n  }\n});\n"],"names":["$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","is","properties","content","type","String","value","enableSearch","searchObject","root","this","matched","text","dom","setContent","addEventListener","findMatches","e","focus","detail","newContent","_searchedContent","matchNumber","result","$","querySelector","_getTabIndex","_template","html","alwaysFloatLabel","Boolean","caseSensitive","controls","nextButtonDisabled","computed","nextButtonIcon","nextButtonLabel","noLabelFloat","noResults","noSearch","prevButtonDisabled","prevButtonIcon","prevButtonLabel","resultCount","Number","resultPointer","resultsSpan","searchInputIcon","searchInputLabel","searchTerms","Array","target","Object","ready","search","input","_getSearchText","fire","prev","_navigateResults","next","_hasNoResults","_hasNoSearch","length","_getResultsSpan","xofy","increment","_isNavButtonDisabled","find","temp","split","i","trim","splice","set","slice","terms","modifier","results","updateResults","regex","RegExp","start","end","pre","match","post"],"mappings":"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"}