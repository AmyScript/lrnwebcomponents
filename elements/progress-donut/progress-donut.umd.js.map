{"version":3,"file":"progress-donut.umd.js","sources":["progress-donut.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport '@lrnwebcomponents/materializecss-styles/materializecss-styles.js';\nimport '@lrnwebcomponents/hax-body-behaviors/hax-body-behaviors.js';\nimport '@lrnwebcomponents/schema-behaviors/schema-behaviors.js';\nimport '@lrnwebcomponents/chartist-render/chartist-render.js';\nimport '@lrnwebcomponents/simple-colors/simple-colors.js';\n/**\n`progress-donut`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n      :host {\n        background-color: var(--simple-colors-background1, #ffffff);\n        overflow: visible;\n        display: block;\n      }\n      :host #wrapper {\n        margin: 0 auto;\n        position: relative;\n      }\n      :host #wrapper > * {\n        position: absolute;\n      }\n      :host #wrapper #chart {\n        left: 0;\n        top: 0;\n      }\n      :host #wrapper,\n      :host #wrapper #chart {\n        width: 250px;\n        height: 250px;\n      }\n      :host[size=\"xs\"] #wrapper,\n      :host[size=\"xs\"] #wrapper #chart {\n        width: 150px;\n        height: 150px;\n      }\n      :host[size=\"sm\"] #wrapper,\n      :host[size=\"sm\"] #wrapper #chart {\n        width: 200px;\n        height: 200px;\n      }\n      :host[size=\"lg\"] #wrapper,\n      :host[size=\"lg\"] #wrapper #chart {\n        width: 300px;\n        height: 300px;\n      }\n      :host[size=\"xl\"] #wrapper,\n      :host[size=\"xl\"] #wrapper #chart {\n        width: 400px;\n        height: 400px;\n      }\n      :host #wrapper > #image {\n        left: 20%;\n        top: 20%;\n        width: 60%;\n        height: 60%;\n        -webkit-clip-path: circle(50% at 50% 50%);\n        clip-path: circle(50% at 50% 50%);\n      }\n    </style>\n    <div id=\"wrapper\">\n      <img id=\"image\" alt\\$=\"[[imageAlt]]\" aria-hidden=\"true\" hidden\\$=\"[[!imageSrc]]\" src\\$=\"[[imageSrc]]\" style\\$=\"[[imageStyle]]\">\n      <chartist-render id=\"chart\" data\\$=\"[[data]]\" chart-desc\\$=\"[[desc]]\" chart-title=\"[[title]]\" scale=\"ct-square\" options\\$=\"[[options]]\" title\\$=\"[[title]]\" type=\"pie\">\n      </chartist-render>\n    </div>\n`,\n\n  is: 'progress-donut',\n  behaviors: [HAXBehaviors.PropertiesBehaviors, simpleColorsBehaviors, SchemaBehaviors.Schema],\n\n  listeners: {\n    'chartist-render-draw': '_onCreated'\n  },\n\n  properties: {\n    /**\n      * An array of completed values\n      */\n    complete: {\n      type: Array,\n      value: []\n    },\n    /**\n      * The thickness of the donut from 0-100\n      */\n    donutThickness: {\n      type: Number,\n    },\n    /**\n      * An array of hex codes to use as colors for each section. \n      * If null, colors are determined by accentColor & dark properties\n      */\n    colors: {\n      type: Array,\n      value: null\n    },\n    /**\n      * An array of data for the donut chart\n      */\n    data: {\n      type: Array,\n      computed: '_getData(complete)'\n    },\n    /**\n      * Accessible long description\n      */\n    desc: {\n      type: String,\n      value: null\n    },\n    /**\n      * An array of data for the donut chart\n      */\n    options: {\n      type: Array,\n      computed: '_getOptions(complete,total,size,colors,accentColor,dark)'\n    },\n    /**\n      * The source of the image in the center of the object.\n      */\n    imageSrc: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n      * The alt text for the image.\n      */\n    imageAlt: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n      * The style for the image based on the size of the donut\n      */\n    imageStyle: {\n      type: String,\n      computed: '_getImageStyle(size)'\n    },\n    /**\n      * The size of the progress-donut: sx, sm, md, lg, or xl. Default is md\n      */\n    size: {\n      type: String,\n      value: 'md'\n    },\n    /**\n      * Title\n      */\n    title: {\n      type: String,\n    },\n    /**\n      * An array of incomplete values\n      */\n    total: {\n      type: Number,\n      value: 100\n    },\n  },\n\n  /**\n    * Attached to the DOM, now fire.\n    */\n  attached: function() {\n    // Establish hax property binding\n    let props = {\n      'canScale': true,\n      'canPosition': true,\n      'canEditSource': false,\n      'gizmo': {\n        'title': 'Sample gizmo',\n        'description': 'The user will be able to see this for selection in a UI.',\n        'icon': 'av:play-circle-filled',\n        'color': 'grey',\n        'groups': ['Video', 'Media'],\n        'handles': [\n          {\n            'type': 'video',\n            'url': 'source'\n          }\n        ],\n        'meta': {\n          'author': 'Your organization on github'\n        }\n      },\n      'settings': {\n        'quick': [\n          {\n            'property': 'title',\n            'title': 'Title',\n            'description': 'The title of the element',\n            'inputMethod': 'textfield',\n            'icon': 'editor:title',\n          },\n        ],\n        'configure': [\n          {\n            'property': 'title',\n            'title': 'Title',\n            'description': 'The title of the element',\n            'inputMethod': 'textfield',\n            'icon': 'editor:title',\n          },\n        ],\n        'advanced': [\n        ]\n      }\n    };\n    this.setHaxProperties(props);\n  },\n\n  /**\n    * Makes chart and returns the chart object. \n    */\n  _getData: function(complete){\n    return {\"series\": complete};\n },\n\n  /**\n    * Makes chart and returns the chart object. \n    */\n  _getImageStyle: function(size){\n    let offset = '22%', diameter = '56%';\n   if(this.size === 'xs'){\n     offset = '32%';\n     diameter = '36%';\n   } else if(this.size === 'sm'){\n     offset = '26%';\n     diameter = '48%';\n   } else if(this.size === 'lg'){\n     offset = '20%';\n     diameter = '60%';\n   } else if(this.size === 'xl'){\n     offset = '17%';\n     diameter = '66%';\n   }\n   return 'left: '+offset+'; top: '+offset+'; width: '+diameter+'; height: '+diameter+';';\n },\n\n  /**\n    * Makes chart and returns the chart object. \n    */\n  _getOptions: function(complete,total,size,colors,accentColor,dark){\n    let sum = 0;\n    for(let i=0;i<complete.length;i++){\n      sum += parseFloat(complete[i]);\n    }\n    return {\"donut\": true, \"showLabel\":false, \"startAngle\": 0, \"total\": Math.max(sum,total)};\n  },\n\n  /**\n    * Handles chart creation event. \n    */\n  _onCreated: function(e){\n    this.__chart = e.detail;\n    this.makeChart(this.__chart);\n  },\n\n  /**\n    * Makes chart and returns the chart object. \n    */\n  makeChart: function(chart){\n    if (chart !== undefined) {\n      let colors = this.colors, strokeWidth = '10%', \n        hex = window.SimpleColorsUtility.hexCodes,\n        accent = this.accentColor !== null ? this.accentColor.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); }): null;\n      if(colors === undefined || colors === null || colors.length === 0){\n          if(accent !== null && hex[accent] !== null){\n          colors = this.dark ? [ hex[accent][9], hex[accent][6], hex[accent][3], hex[accent][7], hex[accent][4] ] : [ hex[accent][0], hex[accent][3], hex[accent][5], hex[accent][2], hex[accent][4] ]\n        } else {\n          colors = this.dark ? [ hex.orange[6], hex.pink[4], hex.purple[5], hex.cyan[6], hex.lime[5] ] : [ hex.pink[5], hex.deepPurple[4], hex.blue[3], hex.teal[4], hex.yellow[5] ]\n        }\n      }\n      \n      if(this.size === 'xs'){\n        strokeWidth = '8%'\n      } else if(this.size === 'sm'){\n        strokeWidth = '9%'\n      } else if(this.size === 'lg'){\n        strokeWidth = '11%'\n      } else if(this.size === 'xl'){\n        strokeWidth = '12%'\n      }\n      // From chartist.js docs: \n      chart.on('draw', function(data) {\n        data.element._node.style.strokeWidth = strokeWidth;\n        data.element._node.style.stroke = colors[data.index%colors.length];\n        if(data.type === 'slice') {\n          var pathLength = data.element._node.getTotalLength();\n          data.element.attr({ 'stroke-dasharray': pathLength + 'px ' + pathLength + 'px' });\n          var animationDefinition = {\n            'stroke-dashoffset': {\n              id: 'anim' + data.index,\n              dur: 500,\n              from: -pathLength + 'px',\n              to:  '0px',\n              easing: Chartist.Svg.Easing.easeOutQuint,\n              fill: 'freeze'\n            }\n          };\n          if(data.index !== 0) {\n            animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';\n          }\n          data.element.attr({ 'stroke-dashoffset': -pathLength + 'px' });\n          data.element.animate(animationDefinition, false);\n        }\n      });\n      return chart;\n    }\n  }\n});\n"],"names":["_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","simpleColorsBehaviors","SchemaBehaviors","Schema","listeners","properties","complete","type","Array","value","donutThickness","Number","colors","data","computed","desc","String","options","imageSrc","reflectToAttribute","imageAlt","imageStyle","size","title","total","attached","setHaxProperties","_getData","_getImageStyle","offset","diameter","this","_getOptions","accentColor","dark","sum","i","length","parseFloat","Math","max","_onCreated","e","__chart","detail","makeChart","chart","undefined","strokeWidth","hex","window","SimpleColorsUtility","hexCodes","accent","replace","g","toUpperCase","orange","pink","purple","cyan","lime","deepPurple","blue","teal","yellow","on","element","_node","style","stroke","index","pathLength","getTotalLength","attr","animationDefinition","id","dur","from","to","easing","Chartist","Svg","Easing","easeOutQuint","fill","begin","animate"],"mappings":"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"}