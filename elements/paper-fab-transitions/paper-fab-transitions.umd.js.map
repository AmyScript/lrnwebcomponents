{"version":3,"file":"paper-fab-transitions.umd.js","sources":["lib/paper-fab-morph.js","lib/paper-square-grow-animation.js","lib/paper-fab-speed-dial.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport * as async from \"@polymer/polymer/lib/utils/async.js\";\nimport \"@polymer/iron-dropdown/iron-dropdown.js\";\n/**\n`paper-fab-morph` can be used to wrap a floating action button and another\nelement which is initially hidden, and when tapping the button, it will appear\nas if the button is morphing into the other element, which appears in its place.\n\nThis element expects its content to contain two children: one with the class\n`dropdown-trigger` , which is initially visible and acts as the trigger, and\nanother one with the class `dropdown-content` , which will be hidden until the\ntrigger is tapped.\n\nExample:\n\n    <paper-fab-morph>\n      <paper-fab icon=\"menu\" class=\"dropdown-trigger\">\n      <paper-material class=\"dropdown-content\">\n        <paper-menu>\n          <paper-item>One</paper-item>\n          <paper-item>Two</paper-item>\n        </paper-menu>\n      </paper-mterial>\n    </paper-fab-morph>\n\nIn the example above, the menu will be wrapped by an `iron-dropdown` element\nand will be positioned relative to the button. Positioning can be modified by\nsetting the `horizontalAlign`, `verticalAlign`, `horizontalOffset` and\n`verticalOffset` properties.\n\nAlternatively, it's possible to set content element with fixed position, which\nnullifies the dropdown positioning. This is useful for morphing into toolbars\nand full screen elements for example.\n\nIt is also possible to use an element which implements overlay behavior as the\ncontent, instead of having it wrapped with an `iron-dropdown`. In this case, the\n`isOverlayContent` property should be set to true.\n\nExample:\n\n    <paper-fab-morph is-overlay-content>\n      <paper-fab icon=\"create\" class=\"dropdown-trigger\">\n      <paper-dialog class=\"dropdown-content\">\n        <div>Dialog</div>\n      <paper-dialog>\n    </paper-fab-morph>\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-morph-background` | Background color of the morphing element | `#fff`\n`--paper-morph-dropdown` | Mixin applied to the `iron-dropdown` | `{}`\n`--paper-morph-content` | Mixin applied to the dropdown's content | `{}`\n\n@hero hero.svg\n* @demo demo/index.html\n*/\n(function(Polymer) {\n  Polymer({\n    _template: html`\n      <style>\n        iron-dropdown {\n          @apply --paper-morph-dropdown;\n        }\n        .dropdown-content {\n          @apply --paper-morph-content;\n        }\n        #morpher {\n          position: fixed;\n          display: none;\n          background-color: var(--paper-morph-background, #fff);\n        }\n      </style>\n      <span id=\"fabContainer\" class=\"dropdown-trigger\"\n        ><slot name=\"dropdown-trigger\"></slot\n      ></span>\n      <span id=\"contentContainer\" class=\"dropdown-content\"\n        ><slot name=\"dropdown-content\"></slot\n      ></span>\n      <paper-material id=\"morpher\"></paper-material>\n    `,\n\n    is: \"paper-fab-morph\",\n\n    properties: {\n      /**\n       * Whether the content already has overlay behavior.\n       * If false, it will be wrapped by an iron-dropdown element, which can be\n       * configured with `horizontalAlign`, `verticalAlign`, `horizontalOffset`\n       * and `verticalOffset` properties.\n       */\n      isOverlayContent: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * The transition duration in milliseconds.\n       */\n      duration: {\n        type: Number,\n        value: 200\n      },\n      /**\n       * The orientation against which to align the dropdown\n       * horizontally relative to the trigger button.\n       */\n      horizontalAlign: {\n        type: String,\n        value: \"left\",\n        reflectToAttribute: true\n      },\n\n      /**\n       * The orientation against which to align the dropdown\n       * vertically relative to the trigger button.\n       */\n      verticalAlign: {\n        type: String,\n        value: \"top\",\n        reflectToAttribute: true\n      },\n\n      /**\n       * A pixel value that will be added to the position calculated for the\n       * given `horizontalAlign`. Use a negative value to offset to the\n       * left, or a positive value to offset to the right.\n       */\n      horizontalOffset: {\n        type: Number,\n        value: 0,\n        notify: true\n      },\n\n      /**\n       * A pixel value that will be added to the position calculated for the\n       * given `verticalAlign`. Use a negative value to offset towards the\n       * top, or a positive value to offset towards the bottom.\n       */\n      verticalOffset: {\n        type: Number,\n        value: 0,\n        notify: true\n      }\n    },\n\n    observers: [\n      \"_updateOverlayPosition(verticalAlign, horizontalAlign, verticalOffset, horizontalOffset)\"\n    ],\n\n    ready: function() {\n      this._fab = this.$.fabContainer;\n      this._content = this.$.contentContainer;\n\n      if (this.isOverlayContent) {\n        this._fab.addEventListener(\n          \"tap\",\n          function() {\n            this._content.open();\n          }.bind(this)\n        );\n\n        this._overlay = this._content;\n      } else {\n        var dropdown = document.createElement(\"iron-dropdown\");\n\n        dom(dropdown).appendChild(this._content);\n        dom(this.root).appendChild(dropdown);\n\n        this._overlay = dropdown;\n        this._dropdown = dropdown;\n\n        this._fab.addEventListener(\n          \"tap\",\n          function() {\n            this._dropdown.open();\n          }.bind(this)\n        );\n\n        this._updateOverlayPosition(\n          this.verticalAlign,\n          this.horizontalAlign,\n          this.verticalOffset,\n          this.horizontalOffset\n        );\n      }\n\n      this._overlay.addEventListener(\n        \"iron-overlay-opened\",\n        function() {\n          this._morphOpen();\n        }.bind(this)\n      );\n\n      this._overlay.addEventListener(\n        \"iron-overlay-closed\",\n        function() {\n          this._morphClose();\n        }.bind(this)\n      );\n    },\n\n    /**\n     * Show the content.\n     */\n    open: function() {\n      this._overlay.open();\n    },\n\n    /**\n     * Hide the content.\n     */\n    close: function() {\n      this._overlay.close();\n    },\n\n    _updateOverlayPosition: function(\n      verticalAlign,\n      horizontalAlign,\n      verticalOffset,\n      horizontalOffset\n    ) {\n      if (this._dropdown) {\n        var d = this._dropdown;\n        d.verticalAlign = verticalAlign;\n        d.horizontalAlign = horizontalAlign;\n        d.verticalOffset = verticalOffset;\n        d.horizontalOffset = horizontalOffset;\n      }\n    },\n\n    _morphOpen: function() {\n      var fab = this._fab;\n      var content = this._content;\n\n      var fabRect = fab.getBoundingClientRect();\n      var morpher = this.$.morpher;\n      var ms = morpher.style;\n\n      ms.display = \"block\";\n      ms.top = fabRect.top + \"px\";\n      ms.left = fabRect.left + \"px\";\n      ms.width = fabRect.width + \"px\";\n      ms.height = fabRect.height + \"px\";\n      ms.borderRadius = \"50%\";\n      ms.transitionDuration = this.duration + \"ms\";\n\n      fab.style.visibility = \"hidden\";\n      content.style.visibility = \"hidden\";\n\n      var contentRect = content.getBoundingClientRect();\n\n      ms.top = contentRect.top + \"px\";\n      ms.left = contentRect.left + \"px\";\n      ms.width = contentRect.width + \"px\";\n      ms.height = contentRect.height + \"px\";\n      ms.borderRadius = \"\";\n\n      async.microTask.run(() => {\n        morpher.style.display = \"none\";\n        content.style.visibility = \"visible\";\n      });\n    },\n\n    _morphClose: function() {\n      var fab = this._fab;\n      var content = this._content;\n\n      var contentRect = fab.getBoundingClientRect();\n      var morpher = this.$.morpher;\n      var ms = morpher.style;\n\n      morpher.style.display = \"block\";\n\n      async.microTask.run(() => {\n        var fabRect = fab.getBoundingClientRect();\n        ms.top = fabRect.top + \"px\";\n        ms.left = fabRect.left + \"px\";\n        ms.width = fabRect.width + \"px\";\n        ms.height = fabRect.height + \"px\";\n        ms.borderRadius = \"50%\";\n\n        async.microTask.run(() => {\n          morpher.style.display = \"none\";\n          fab.style.visibility = \"visible\";\n        });\n      });\n    }\n  });\n})(Polymer);\n","import { Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport { NeonAnimationBehavior } from \"@polymer/neon-animation/neon-animation-behavior.js\";\n/**\n`<paper-square-grow-animation>` increases the element's width and height from an initial\npredefined pixel square size to its final size.\n\nConfiguration:\n```\n{\n  name: 'expand-animation',\n  node: <node>,\n  startSize: <start-size-in-px>,\n  timing: <animation-timing>,\n}\n```\n\n@hero hero.svg\n* @demo demo/index.html\n*/\nPolymer({\n  is: \"paper-square-grow-animation\",\n  behaviors: [NeonAnimationBehavior],\n  configure: function(config) {\n    var node = config.node;\n    var startSize = config.startSize;\n    var height = node.getBoundingClientRect().height;\n    var width = node.getBoundingClientRect().width;\n    this._effect = new KeyframeEffect(\n      node,\n      [\n        {\n          height: startSize + \"px\",\n          width: startSize + \"px\"\n        },\n        {\n          height: height + \"px\",\n          width: width + \"px\"\n        }\n      ],\n      this.timingFromConfig(config)\n    );\n    return this._effect;\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout.js\";\nimport \"@polymer/iron-dropdown/iron-dropdown.js\";\nimport \"@polymer/neon-animation/neon-animations.js\";\nimport \"./paper-square-grow-animation.js\";\n/**\n`paper-fab-speed-dial` builds on `iron-dropdown` to allow showing a list of\nspeed dial actions when tapping on a floating action button.\n\nThis element expects its content to contain two children: one with the class\n`dropdown-trigger` , which is initially visible and acts as the trigger, and\nanother one with the class `dropdown-content` , which will be hidden until the\ntrigger is tapped, and will contain the speed dial option elements.\n\nExample:\n\n    <paper-fab-speed-dial>\n      <paper-fab icon=\"add\" class=\"dropdown-trigger\"></paper-fab>\n      <div class=\"dropdown-content\">\n        <paper-fab mini icon=\"star-border\"></paper-fab>\n        <paper-fab mini icon=\"star-half\"></paper-fab>\n        <paper-fab mini icon=\"star\"></paper-fab>\n      </div>\n    </paper-fab-speed-dial>\n\nThe `direction` property can be set to `top`, `bottom`, `left` or `right` to\ncontrol the direction in which the options dropdown is expanded.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-fab-speed-dial-option` | Mixin applied to each option element | `{}`\n\n@hero hero.svg\n* @demo demo/index.html\n*/\n(function(Polymer) {\n  Polymer({\n    _template: html`\n      <custom-style>\n        <style>\n          :host .vertical ::content .dropdown-content {\n            @apply --layout-vertical;\n          }\n          :host .horizontal ::content .dropdown-content {\n            @apply --layout-horizontal;\n          }\n          :host ::content .dropdown-content > * {\n            margin: 8px;\n            @apply --paper-fab-speed-dial-option;\n          }\n        </style>\n      </custom-style>\n      <slot id=\"fabContainer\" name=\"dropdown-trigger\"></slot>\n      <iron-dropdown\n        id=\"dropdown\"\n        open-animation-config=\"[[openAnimationConfig]]\"\n        close-animation-config=\"[[closeAnimationConfig]]\"\n      >\n        <slot id=\"contentContainer\" name=\"dropdown-content\"></slot>\n      </iron-dropdown>\n    `,\n\n    is: \"paper-fab-speed-dial\",\n\n    properties: {\n      /**\n       * The direction in which to expand the options. One of `top`, `bottom`\n       * `left` and `right`.\n       */\n      direction: {\n        type: String,\n        value: \"bottom\"\n      },\n      /**\n       * A pixel value for the distance of the first option fron the trigger\n       * button.\n       */\n      offset: {\n        type: Number,\n        value: 66\n      },\n      /**\n       * An animation config. If provided, this will be used to animate the\n       * opening of the options dropdown.\n       */\n      openAnimationConfig: {\n        type: Array,\n        value: function() {\n          return [\n            {\n              name: \"fade-in-animation\",\n              timing: {\n                delay: 150,\n                duration: 50\n              }\n            },\n            {\n              name: \"paper-square-grow-animation\",\n              startSize: 56,\n              timing: {\n                delay: 150,\n                duration: 200\n              }\n            }\n          ];\n        }\n      },\n      /**\n       * An animation config. If provided, this will be used to animate the\n       * closing of the options dropdown.\n       */\n      closeAnimationConfig: {\n        type: Array,\n        value: function() {\n          return [\n            {\n              name: \"fade-out-animation\",\n              timing: {\n                duration: 200\n              }\n            }\n          ];\n        }\n      }\n    },\n\n    observers: [\"_updateDropdown(direction, offset)\"],\n\n    ready: function() {\n      var fab = dom(this.$.fabContainer).getDistributedNodes()[0];\n      fab.addEventListener(\n        \"tap\",\n        function() {\n          this.$.dropdown.open();\n        }.bind(this)\n      );\n\n      var content = dom(this.$.contentContainer).getDistributedNodes()[0];\n      content.addEventListener(\n        \"tap\",\n        function() {\n          this.$.dropdown.close();\n        }.bind(this)\n      );\n    },\n\n    /**\n     * Show the speed dial options.\n     */\n    open: function() {\n      this.$.dropdown.open();\n    },\n\n    /**\n     * Hide the speed dial options.\n     */\n    close: function() {\n      this.$.dropdown.close();\n    },\n\n    _updateDropdown: function(direction, offset) {\n      var d = this.$.dropdown;\n      switch (direction) {\n        case \"bottom\":\n          d.verticalAlign = \"top\";\n          d.horizontalOffset = 0;\n          d.verticalOffset = offset;\n          d.classList.add(\"vertical\");\n          d.classList.remove(\"horizontal\");\n          break;\n        case \"top\":\n          d.verticalAlign = \"bottom\";\n          d.horizontalOffset = 0;\n          d.verticalOffset = offset;\n          d.classList.add(\"vertical\");\n          d.classList.remove(\"horizontal\");\n          break;\n        case \"right\":\n          d.horizontalAlign = \"left\";\n          d.horizontalOffset = offset;\n          d.verticalOffset = 0;\n          d.classList.add(\"horizontal\");\n          d.classList.remove(\"vertical\");\n          break;\n        case \"left\":\n          d.horizontalAlign = \"right\";\n          d.horizontalOffset = offset;\n          d.verticalOffset = 0;\n          d.classList.add(\"horizontal\");\n          d.classList.remove(\"vertical\");\n          break;\n        default:\n          throw \"Invalid direction. Must be one of [top, bottom, left, right].\";\n      }\n    }\n  });\n})(Polymer);\n"],"names":["Polymer","_template","html","is","properties","isOverlayContent","type","Boolean","value","duration","Number","horizontalAlign","String","reflectToAttribute","verticalAlign","horizontalOffset","notify","verticalOffset","observers","ready","_fab","this","$","fabContainer","_content","contentContainer","addEventListener","open","bind","_overlay","dropdown","document","createElement","dom","appendChild","root","_dropdown","_updateOverlayPosition","_morphOpen","_morphClose","close","d","fab","content","fabRect","getBoundingClientRect","morpher","ms","style","display","top","left","width","height","borderRadius","transitionDuration","visibility","contentRect","async","run","behaviors","NeonAnimationBehavior","configure","config","node","startSize","_effect","KeyframeEffect","timingFromConfig","direction","offset","openAnimationConfig","Array","name","timing","delay","closeAnimationConfig","getDistributedNodes","_updateDropdown","classList","add","remove"],"mappings":"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"}