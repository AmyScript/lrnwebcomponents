{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "lib/paper-fab-morph.js",
      "properties": [
        {
          "name": "isOverlayContent",
          "type": "boolean | null | undefined",
          "description": "Whether the content already has overlay behavior.\nIf false, it will be wrapped by an iron-dropdown element, which can be\nconfigured with `horizontalAlign`, `verticalAlign`, `horizontalOffset`\nand `verticalOffset` properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "duration",
          "type": "number | null | undefined",
          "description": "The transition duration in milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "200"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the dropdown\nhorizontally relative to the trigger button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"left\""
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the dropdown\nvertically relative to the trigger button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "horizontalOffset",
          "type": "number | null | undefined",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`. Use a negative value to offset to the\nleft, or a positive value to offset to the right.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "verticalOffset",
          "type": "number | null | undefined",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`. Use a negative value to offset towards the\ntop, or a positive value to offset towards the bottom.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "Show the content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "Hide the content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateOverlayPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "verticalAlign"
            },
            {
              "name": "horizontalAlign"
            },
            {
              "name": "verticalOffset"
            },
            {
              "name": "horizontalOffset"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_morphOpen",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_morphClose",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 4
            },
            "end": {
              "line": 286,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 62,
          "column": 10
        },
        "end": {
          "line": 287,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "is-overlay-content",
          "description": "Whether the content already has overlay behavior.\nIf false, it will be wrapped by an iron-dropdown element, which can be\nconfigured with `horizontalAlign`, `verticalAlign`, `horizontalOffset`\nand `verticalOffset` properties.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "duration",
          "description": "The transition duration in milliseconds.",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the dropdown\nhorizontally relative to the trigger button.",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the dropdown\nvertically relative to the trigger button.",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "horizontal-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`. Use a negative value to offset to the\nleft, or a positive value to offset to the right.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "vertical-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`. Use a negative value to offset towards the\ntop, or a positive value to offset towards the bottom.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "horizontal-offset-changed",
          "description": "Fired when the `horizontalOffset` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "vertical-offset-changed",
          "description": "Fired when the `verticalOffset` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-fab-morph"
    },
    {
      "description": "`<paper-square-grow-animation>` increases the element's width and height from an initial\npredefined pixel square size to its final size.\n\nConfiguration:\n```\n{\n  name: 'expand-animation',\n  node: <node>,\n  startSize: <start-size-in-px>,\n  timing: <animation-timing>,\n}\n```",
      "summary": "",
      "path": "lib/paper-square-grow-animation.js",
      "properties": [
        {
          "name": "animationTiming",
          "type": "Object | null | undefined",
          "description": "Defines the animation timing.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/neon-animation/neon-animation-behavior.js",
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"duration\":500,\"easing\":\"cubic-bezier(0.4, 0, 0.2, 1)\",\"fill\":\"both\"}",
          "inheritedFrom": "NeonAnimationBehavior"
        },
        {
          "name": "isNeonAnimation",
          "type": "boolean",
          "description": "Can be used to determine that elements implement this behavior.\n   ",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/neon-animation/neon-animation-behavior.js",
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "NeonAnimationBehavior"
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/neon-animation/neon-animation-behavior.js",
            "start": {
              "line": 45,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "NeonAnimationBehavior"
        },
        {
          "name": "timingFromConfig",
          "description": "Returns the animation timing by mixing in properties from `config` to the\ndefaults defined by the animation.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/neon-animation/neon-animation-behavior.js",
            "start": {
              "line": 57,
              "column": 2
            },
            "end": {
              "line": 64,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ],
          "inheritedFrom": "NeonAnimationBehavior"
        },
        {
          "name": "setPrefixedProperty",
          "description": "Sets `transform` and `transformOrigin` properties along with the prefixed\nversions.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/neon-animation/neon-animation-behavior.js",
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "NeonAnimationBehavior"
        },
        {
          "name": "complete",
          "description": "Called when the animation finishes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/neon-animation/neon-animation-behavior.js",
            "start": {
              "line": 85,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 31
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "NeonAnimationBehavior"
        },
        {
          "name": "configure",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 8
        },
        "end": {
          "line": 44,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "animation-timing",
          "description": "Defines the animation timing.",
          "sourceRange": {
            "file": "../../@polymer/neon-animation/neon-animation-behavior.js",
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "NeonAnimationBehavior"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-square-grow-animation"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/paper-fab-speed-dial.js",
      "properties": [
        {
          "name": "direction",
          "type": "string | null | undefined",
          "description": "The direction in which to expand the options. One of `top`, `bottom`\n`left` and `right`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"bottom\""
        },
        {
          "name": "offset",
          "type": "number | null | undefined",
          "description": "A pixel value for the distance of the first option fron the trigger\nbutton.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "66"
        },
        {
          "name": "openAnimationConfig",
          "type": "Array | null | undefined",
          "description": "An animation config. If provided, this will be used to animate the\nopening of the options dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[{\"name\":\"fade-in-animation\",\"timing\":{\"delay\":150,\"duration\":50}},{\"name\":\"paper-square-grow-animation\",\"startSize\":56,\"timing\":{\"delay\":150,\"duration\":200}}]"
        },
        {
          "name": "closeAnimationConfig",
          "type": "Array | null | undefined",
          "description": "An animation config. If provided, this will be used to animate the\nclosing of the options dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[{\"name\":\"fade-out-animation\",\"timing\":{\"duration\":200}}]"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "Show the speed dial options.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "Hide the speed dial options.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateDropdown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "direction"
            },
            {
              "name": "offset"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 41,
          "column": 10
        },
        "end": {
          "line": 196,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "direction",
          "description": "The direction in which to expand the options. One of `top`, `bottom`\n`left` and `right`.",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "offset",
          "description": "A pixel value for the distance of the first option fron the trigger\nbutton.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "open-animation-config",
          "description": "An animation config. If provided, this will be used to animate the\nopening of the options dropdown.",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "close-animation-config",
          "description": "An animation config. If provided, this will be used to animate the\nclosing of the options dropdown.",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-fab-speed-dial"
    }
  ]
}
