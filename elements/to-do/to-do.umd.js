!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@polymer/polymer/polymer-legacy.js"),require("@polymer/paper-checkbox/paper-checkbox.js"),require("@polymer/paper-button/paper-button.js"),require("@polymer/paper-card/paper-card.js"),require("@polymer/paper-input/paper-input.js"),require("@lrnwebcomponents/materializecss-styles/materializecss-styles.js"),require("@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js"),require("@lrnwebcomponents/schema-behaviors/schema-behaviors.js")):"function"==typeof define&&define.amd?define(["exports","@polymer/polymer/polymer-legacy.js","@polymer/paper-checkbox/paper-checkbox.js","@polymer/paper-button/paper-button.js","@polymer/paper-card/paper-card.js","@polymer/paper-input/paper-input.js","@lrnwebcomponents/materializecss-styles/materializecss-styles.js","@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js","@lrnwebcomponents/schema-behaviors/schema-behaviors.js"],t):t(e.ToDo={},e.polymerLegacy_js)}(this,function(e,t){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(){var e,t,i=(e=['\n    <style>\n      :host {\n        display: block;\n      }\n      :host([hide-form]) ul {\n        border: 1px solid black;\n      }\n      paper-card {\n        width: 100%;\n        padding: 8px;\n      }\n      .task-list-wrapper {\n        width: 100%;\n        height: 100%;\n        border: 2px solid black;\n        list-style: none;\n        padding: 0;\n      }\n      .task-list-wrapper li {\n        padding: 8px;\n      }\n      .task-list-wrapper li:nth-child(even) {\n        background-color: #F5F5F5;\n      }\n      .task-list-wrapper li:nth-child(odd) {\n        background-color: #E5E5E5;\n      }\n      .task-list-wrapper li:hover {\n        background-color: #FFFFFF;\n      }\n      .task-list-wrapper li:active {\n        background-color: #FFFFFF;\n      }\n      .task-list-wrapper li:focus {\n        background-color: #FFFFFF;\n      }\n      h3 {\n        margin: 4px;\n        padding: 0;\n        font-size: 20px;\n      }\n    </style>\n    <paper-card heading="[[name]]" elevation="2">\n      <div class="card-content">\n        <div hidden$="[[hideForm]]">\n          <paper-input label="Task to accomplish" id="itemtext"></paper-input>\n          <paper-button raised="" id="itembutton" on-tap="_addItemToList">Add item</paper-button>\n        </div>\n        <ul class="task-list-wrapper">\n          <template is="dom-repeat" items="[[items]]" as="item">\n            <li data-item-id$="[[item.id]]"><paper-checkbox checked="{{item.value}}" disabled="[[item.disabled]]">[[item.label]]</paper-checkbox></li>\n          </template>\n        </ul>\n      </div>\n    </paper-card>\n'],(t=['\n    <style>\n      :host {\n        display: block;\n      }\n      :host([hide-form]) ul {\n        border: 1px solid black;\n      }\n      paper-card {\n        width: 100%;\n        padding: 8px;\n      }\n      .task-list-wrapper {\n        width: 100%;\n        height: 100%;\n        border: 2px solid black;\n        list-style: none;\n        padding: 0;\n      }\n      .task-list-wrapper li {\n        padding: 8px;\n      }\n      .task-list-wrapper li:nth-child(even) {\n        background-color: #F5F5F5;\n      }\n      .task-list-wrapper li:nth-child(odd) {\n        background-color: #E5E5E5;\n      }\n      .task-list-wrapper li:hover {\n        background-color: #FFFFFF;\n      }\n      .task-list-wrapper li:active {\n        background-color: #FFFFFF;\n      }\n      .task-list-wrapper li:focus {\n        background-color: #FFFFFF;\n      }\n      h3 {\n        margin: 4px;\n        padding: 0;\n        font-size: 20px;\n      }\n    </style>\n    <paper-card heading="[[name]]" elevation="2">\n      <div class="card-content">\n        <div hidden\\$="[[hideForm]]">\n          <paper-input label="Task to accomplish" id="itemtext"></paper-input>\n          <paper-button raised="" id="itembutton" on-tap="_addItemToList">Add item</paper-button>\n        </div>\n        <ul class="task-list-wrapper">\n          <template is="dom-repeat" items="[[items]]" as="item">\n            <li data-item-id\\$="[[item.id]]"><paper-checkbox checked="{{item.value}}" disabled="[[item.disabled]]">[[item.label]]</paper-checkbox></li>\n          </template>\n        </ul>\n      </div>\n    </paper-card>\n'])||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return n=function(){return i},i}var o=t.Polymer({_template:t.html(n()),is:"to-do",behaviors:[HAXBehaviors.PropertiesBehaviors],observers:["_valueChanged(items.*)"],properties:{hideForm:{type:Boolean,value:!1,reflectToAttribute:!0},disabledList:{type:Boolean,value:!1,reflectToAttribute:!0},name:{type:String,value:"To do list"},items:{type:Array,value:[],notify:!0}},_valueChanged:function(e){for(var t in e.base)for(var i in e.base[t])this.notifyPath("items."+t+"."+i)},_addItemToList:function(e){""!=this.$.itemtext.value&&"undefined"!==i(this.$.itemtext.value)&&(this.push("items",{label:this.$.itemtext.value,value:!1,disabled:this.disabledList,id:"item-id-"+this.items.length}),this.$.itemtext.value="")},attached:function(){this.setHaxProperties({canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"To do list",description:"A list of things to do so people can keep calm.",icon:"icons:list",color:"grey",groups:["List"],handles:[],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"name",title:"Name",description:"The name of this to do list",inputMethod:"textfield",icon:"editor:title"}],configure:[{property:"name",title:"Name",description:"The name of this to do list",inputMethod:"textfield",icon:"editor:title"},{property:"items",title:"List of items",description:"List of items to display in our list.",inputMethod:"array",properties:[{property:"label",title:"Task",description:"Name of the task",inputMethod:"textfield",required:!0},{property:"value",title:"Done",description:"Completion state",inputMethod:"boolean"}]}],advanced:[]}})}});e.ToDo=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=to-do.umd.js.map
