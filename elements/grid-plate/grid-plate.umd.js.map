{"version":3,"file":"grid-plate.umd.js","sources":["grid-plate.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport * as async from \"@polymer/polymer/lib/utils/async.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/responsive-grid/lib/responsive-grid-row.js\";\nimport \"@lrnwebcomponents/responsive-grid/lib/responsive-grid-col.js\";\n/**\n`grid-plate`\nA grid plate based on a layout that manipulates it.\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n\n*/\nlet GridPlate = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      responsive-grid-col {\n        --responsive-grid-col-inner: {\n          padding-left: 0;\n          padding-right: 0;\n        }\n      }\n\n      responsive-grid-row {\n        --responsive-grid-row-inner: {\n          margin-left: 0;\n          margin-right: 0;\n        }\n      }\n\n      :host([edit-mode]) responsive-grid-col.mover {\n        min-height: 150px;\n        background-color: #d1d1d1;\n      }\n\n      :host ::slotted(*) .mover,\n      :host responsive-grid-col[data-draggable].mover {\n        outline: 2px dotted #d1d1d1;\n        outline-offset: 2px;\n        background-color: rgba(240, 240, 240, .2);\n      }\n\n      :host ::slotted(*) .active-item {\n        outline: 2px dashed #aaaaaa !important;\n        outline-offset: 2px;\n        background-color: rgba(220, 220, 220, .6) !important;\n      }\n\n      :host ::slotted(*) [data-draggable]:focus,\n      :host ::slotted(*) [data-draggable]:hover,\n      :host ::slotted(*) [data-draggable]:active {\n        outline: 2px dotted #d1d1d1;\n        outline-offset: 2px;\n        background-color: rgba(240, 240, 240, .2);\n        cursor: move !important;\n      }\n\n      paper-button {\n        display: none;\n        position: absolute;\n        margin: 0;\n        padding: 0;\n        outline: none;\n        width: 20px;\n        height: 20px;\n        color: black;\n        background-color: #EEEEEE;\n        border-radius: 50%;\n        box-sizing: content-box !important;\n        z-index: 1;\n        min-width: unset;\n      }\n\n      paper-button.active {\n        display: block;\n      }\n      paper-button iron-icon {\n        display: block;\n      }\n\n      .button-holding-pen {\n        position: relative;\n      }\n    </style>\n    <div class=\"button-holding-pen\">\n      <paper-button title=\"move item up\" id=\"up\" on-tap=\"moveActiveElement\">\n        <iron-icon icon=\"icons:arrow-upward\"></iron-icon>\n      </paper-button>\n      <paper-button title=\"move item right\" id=\"right\" on-tap=\"moveActiveElement\">\n        <iron-icon icon=\"icons:arrow-forward\"></iron-icon>\n      </paper-button>\n      <paper-button title=\"move item down\" id=\"down\" on-tap=\"moveActiveElement\">\n        <iron-icon icon=\"icons:arrow-downward\"></iron-icon>\n      </paper-button>\n      <paper-button title=\"move item left\" id=\"left\" on-tap=\"moveActiveElement\">\n        <iron-icon icon=\"icons:arrow-back\"></iron-icon>\n      </paper-button>\n    </div>\n    <responsive-grid-row gutter=\"0\">\n      <template is=\"dom-if\" if=\"[[!hideCol1]]\" strip-whitespace>\n        <responsive-grid-col id=\"col1\" style\\$=\"background-color:[[__col1Color]];\" xl\\$=\"[[col1_xl]]\" lg\\$=\"[[col1_lg]]\" md\\$=\"[[col1_md]]\" sm\\$=\"[[col1_sm]]\" xs\\$=\"[[col1_xs]]\">\n          <slot name=\"col-1\"></slot>\n        </responsive-grid-col>\n      </template>\n      <template is=\"dom-if\" if=\"[[!hideCol2]]\" strip-whitespace>\n        <responsive-grid-col id=\"col2\" style\\$=\"background-color:[[__col2Color]];\" xl\\$=\"[[col2_xl]]\" lg\\$=\"[[col2_lg]]\" md\\$=\"[[col2_md]]\" sm\\$=\"[[col2_sm]]\" xs\\$=\"[[col2_xs]]\">\n          <slot name=\"col-2\"></slot>\n        </responsive-grid-col>\n      </template>\n      <template is=\"dom-if\" if=\"[[!hideCol3]]\" strip-whitespace>\n        <responsive-grid-col id=\"col3\" style\\$=\"background-color:[[__col3Color]];\" xl\\$=\"[[col3_xl]]\" lg\\$=\"[[col3_lg]]\" md\\$=\"[[col3_md]]\" sm\\$=\"[[col3_sm]]\" xs\\$=\"[[col3_xs]]\">\n          <slot name=\"col-3\"></slot>\n        </responsive-grid-col>\n      </template>\n      <template is=\"dom-if\" if=\"[[!hideCol4]]\" strip-whitespace>\n        <responsive-grid-col id=\"col4\" style\\$=\"background-color:[[__col4Color]];\" xl\\$=\"[[col4_xl]]\" lg\\$=\"[[col4_lg]]\" md\\$=\"[[col4_md]]\" sm\\$=\"[[col4_sm]]\" xs\\$=\"[[col4_xs]]\">\n          <slot name=\"col-4\"></slot>\n        </responsive-grid-col>\n      </template>\n      <responsive-grid-col xl=\"12\" lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n        <slot></slot>\n      </responsive-grid-col>\n    </responsive-grid-row>\n    <iron-a11y-keys stop-keyboard-event-propagation target=\"[[__activeItem]]\" keys=\"enter\" on-keys-pressed=\"setActiveElement\"></iron-a11y-keys>\n    <iron-a11y-keys target=\"[[__activeItem]]\" keys=\"esc\" on-keys-pressed=\"cancelActive\"></iron-a11y-keys>\n`,\n\n  is: \"grid-plate\",\n\n  listeners: {\n    focusin: \"_focusIn\"\n  },\n\n  behaviors: [HAXBehaviors.PropertiesBehaviors, window.simpleColorsBehaviors],\n\n  properties: {\n    /**\n     * Predefined layouts\n     */\n    layout: {\n      type: String,\n      value: \"12\",\n      observer: \"_layoutChanged\"\n    },\n    /**\n     * If the grid plate is in a state where its items\n     * can be modified as far as order or column placement.\n     */\n    editMode: {\n      reflectToAttribute: true,\n      type: Boolean,\n      value: false,\n      observer: \"_editModeChanged\"\n    },\n    /**\n     * Color handling can happen two different ways\n     * either as a whole like blue/blue/blue/blue or\n     * per column.\n     */\n    colors: {\n      type: String,\n      value: \"\"\n    },\n    col1Color: {\n      type: String,\n      value: \"\"\n    },\n    col2Color: {\n      type: String,\n      value: \"\"\n    },\n    col3Color: {\n      type: String,\n      value: \"\"\n    },\n    col4Color: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * Actually applies the colors correctly between the two methods\n     */\n    _colors: {\n      type: String,\n      computed:\n        \"_colorCreation(colors, col1Color, col2Color, col3Color, col4Color)\",\n      observer: \"_colColors\"\n    },\n    /**\n     * Track active item\n     */\n    __activeItem: {\n      type: Object,\n      observer: \"_activeItemChanged\"\n    }\n  },\n\n  /**\n   * Cancel active element\n   */\n  cancelActive: function(e) {\n    this.__activeItem = null;\n  },\n\n  /**\n   * Move the active element based on which button got pressed.\n   */\n  moveActiveElement: function(e) {\n    var normalizedEvent = dom(e);\n    var local = normalizedEvent.localTarget;\n    let col = this.__activeItem.getAttribute(\"slot\").split(\"-\");\n    let max = 1;\n    // calcuate max columns based on the layout defined\n    let cols = [1, 2, 3, 4];\n    for (var j in cols) {\n      if (!this[\"hideCol\" + cols[j]]) {\n        max = cols[j];\n      }\n    }\n    // see if this was an up down left or right movement\n    switch (local.id) {\n      case \"up\":\n        // ensure we can go up\n        if (this.__activeItem.previousElementSibling !== null) {\n          dom(this).insertBefore(\n            this.__activeItem,\n            this.__activeItem.previousElementSibling\n          );\n        }\n        break;\n      case \"down\":\n        if (this.__activeItem.nextElementSibling !== null) {\n          dom(this).insertBefore(\n            this.__activeItem.nextElementSibling,\n            this.__activeItem\n          );\n        }\n        break;\n      case \"left\":\n        if (parseInt(col[1]) > 1) {\n          this.__activeItem.setAttribute(\n            \"slot\",\n            \"col-\" + (parseInt(col[1]) - 1)\n          );\n          dom(this).appendChild(this.__activeItem);\n        }\n        break;\n      case \"right\":\n        if (parseInt(col[1]) < max) {\n          this.__activeItem.setAttribute(\n            \"slot\",\n            \"col-\" + (parseInt(col[1]) + 1)\n          );\n          dom(this).appendChild(this.__activeItem);\n        }\n        break;\n    }\n    // ensure arrows are correctly positioned after the move\n    setTimeout(() => {\n      this.positionArrows(this.__activeItem);\n      this.__activeItem.focus();\n    }, 100);\n  },\n\n  /**\n   * Notice changes to what's active and ensure UX associated w/ it is visble\n   */\n  _activeItemChanged: function(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined && newValue != null) {\n      // position arrows\n      newValue.classList.add(\"active-item\");\n      this.positionArrows(newValue);\n    } else if (newValue == null) {\n      this.positionArrows(newValue);\n    }\n    // if we had a previous value then remove the active item class\n    if (typeof oldValue !== typeof undefined && oldValue != null) {\n      oldValue.classList.remove(\"active-item\");\n      oldValue.blur();\n    }\n  },\n\n  /**\n   * Set the target element to active\n   */\n  setActiveElement: function(e) {\n    var normalizedEvent = dom(e);\n    var local = normalizedEvent.localTarget;\n    this.$.up.focus();\n    e.preventDefault();\n    e.stopPropagation();\n  },\n\n  /**\n   * Focus / tab / click event normalization\n   */\n  _focusIn: function(e) {\n    if (this.editMode) {\n      var normalizedEvent = dom(e);\n      var local = normalizedEvent.localTarget;\n      // only activate if we touch something that's in the slot of the grid plate\n      if (dom(local).parentNode === this) {\n        this.__activeItem = local;\n      }\n    }\n  },\n\n  /**\n   * Position the arrows to change directions around something\n   */\n  positionArrows: function(item) {\n    if (item == null) {\n      this.$.up.classList.remove(\"active\");\n      this.$.down.classList.remove(\"active\");\n      this.$.left.classList.remove(\"active\");\n      this.$.right.classList.remove(\"active\");\n    } else {\n      this.$.up.classList.add(\"active\");\n      this.$.down.classList.add(\"active\");\n      this.$.left.classList.add(\"active\");\n      this.$.right.classList.add(\"active\");\n      this.$.up.disabled = false;\n      this.$.down.disabled = false;\n      this.$.left.disabled = false;\n      this.$.right.disabled = false;\n      // get coordinates of the page and active element\n      let bodyRect = this.getBoundingClientRect();\n      let elemRect = item.getBoundingClientRect();\n      let topOffset = elemRect.top - bodyRect.top;\n      let leftOffset = elemRect.left - bodyRect.left;\n      // set the arrows to position correctly at all 4 sides\n      this.$.up.style.top = topOffset - 20 + \"px\";\n      this.$.down.style.top = topOffset + elemRect.height + \"px\";\n      this.$.left.style.top = topOffset + elemRect.height / 2 + \"px\";\n      this.$.right.style.top = topOffset + elemRect.height / 2 + \"px\";\n\n      this.$.up.style.left = leftOffset + elemRect.width / 2 - 10 + \"px\";\n      this.$.down.style.left = leftOffset + elemRect.width / 2 - 10 + \"px\";\n      this.$.left.style.left = leftOffset - 20 + \"px\";\n      this.$.right.style.left = leftOffset + elemRect.width + \"px\";\n      // ensure we disable invalid options contextually\n      let col = item.getAttribute(\"slot\").split(\"-\");\n      let max = 1;\n      // calcuate max columns based on the layout defined\n      let cols = [1, 2, 3, 4];\n      for (var j in cols) {\n        if (!this[\"hideCol\" + cols[j]]) {\n          max = cols[j];\n        }\n      }\n      // test for an element above us\n      if (item.previousElementSibling === null) {\n        this.$.up.disabled = true;\n      }\n      // test for an element below us\n      if (item.nextElementSibling === null) {\n        this.$.down.disabled = true;\n      }\n      // test for a column to the left of us\n      if (parseInt(col[1]) === 1) {\n        this.$.left.disabled = true;\n      }\n      // test for a column to the right of us\n      if (parseInt(col[1]) === max) {\n        this.$.right.disabled = true;\n      }\n    }\n  },\n\n  /**\n   * Notice edit state has changed\n   */\n  _editModeChanged: function(newValue, oldValue) {\n    // flipping from false to true\n    let children = dom(this).getEffectiveChildNodes();\n    if (typeof children === \"object\") {\n      if (newValue && !oldValue) {\n        // walk the children and apply the draggable state needed\n        for (var i in children) {\n          if (typeof children[i].tagName !== typeof undefined) {\n            children[i].addEventListener(\"drop\", this.dropEvent.bind(this));\n            children[i].addEventListener(\n              \"dragstart\",\n              this.dragStart.bind(this)\n            );\n            children[i].addEventListener(\"dragend\", this.dragEnd.bind(this));\n            children[i].addEventListener(\"dragover\", function(e) {\n              e.preventDefault();\n            });\n            children[i].setAttribute(\"draggable\", true);\n            children[i].setAttribute(\"data-draggable\", true);\n            // ensure they can be focused\n            children[i].setAttribute(\"tabindex\", 0);\n          }\n        }\n        async.microTask.run(() => {\n          let cols = [1, 2, 3, 4];\n          for (var j in cols) {\n            if (!this[\"hideCol\" + cols[j]]) {\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .addEventListener(\"drop\", this.dropEvent.bind(this));\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .addEventListener(\"dragstart\", this.dragStart.bind(this));\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .addEventListener(\"dragend\", this.dragEnd.bind(this));\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .addEventListener(\"dragover\", function(e) {\n                  e.preventDefault();\n                });\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .setAttribute(\"data-draggable\", true);\n            }\n          }\n        });\n      }\n      // flipping from true to false\n      else if (!newValue && oldValue) {\n        // walk the children and apply the draggable state needed\n        for (var i in children) {\n          if (typeof children[i].tagName !== typeof undefined) {\n            children[i].removeEventListener(\"drop\", this.dropEvent.bind(this));\n            children[i].removeEventListener(\n              \"dragstart\",\n              this.dragStart.bind(this)\n            );\n            children[i].removeEventListener(\"dragend\", this.dragEnd.bind(this));\n            children[i].removeEventListener(\"dragover\", function(e) {\n              e.preventDefault();\n            });\n            children[i].removeAttribute(\"draggable\");\n            children[i].removeAttribute(\"data-draggable\");\n            children[i].removeAttribute(\"tabindex\");\n          }\n        }\n        async.microTask.run(() => {\n          let cols = [1, 2, 3, 4];\n          for (var j in cols) {\n            if (!this[\"hideCol\" + cols[j]]) {\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .removeEventListener(\"drop\", this.dropEvent.bind(this));\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .removeEventListener(\"dragstart\", this.dragStart.bind(this));\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .removeEventListener(\"dragend\", this.dragEnd.bind(this));\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .removeEventListener(\"dragover\", function(e) {\n                  e.preventDefault();\n                });\n              this.shadowRoot\n                .querySelector(\"#col\" + cols[j])\n                .removeAttribute(\"data-draggable\");\n            }\n          }\n        });\n      }\n    }\n  },\n\n  /**\n   * Drop an item onto another\n   */\n  dropEvent: function(e) {\n    var normalizedEvent = dom(e);\n    var local = normalizedEvent.localTarget;\n    // if we have a slot on what we dropped into then we need to mirror that item\n    // and place ourselves below it in the DOM\n    if (\n      typeof this.__activeItem !== typeof undefined &&\n      typeof local !== typeof undefined &&\n      local.getAttribute(\"slot\") != null &&\n      this.__activeItem !== local\n    ) {\n      this.__activeItem.setAttribute(\"slot\", local.getAttribute(\"slot\"));\n      dom(this).insertBefore(this.__activeItem, local);\n      // ensure that if we caught this event we process it\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    // special case for dropping on an empty column or between items\n    // which could involve a miss on the column\n    else if (local.tagName === \"RESPONSIVE-GRID-COL\") {\n      var col = local.id.replace(\"col\", \"\");\n      this.__activeItem.setAttribute(\"slot\", \"col-\" + col);\n      dom(this).appendChild(this.__activeItem);\n      // ensure that if we caught this event we process it\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    let children = dom(this).children;\n    // walk the children and apply the draggable state needed\n    for (var i in children) {\n      if (typeof children[i].classList !== typeof undefined) {\n        children[i].classList.remove(\"mover\");\n      }\n    }\n    let cols = [1, 2, 3, 4];\n    for (var j in cols) {\n      if (!this[\"hideCol\" + cols[j]]) {\n        this.shadowRoot\n          .querySelector(\"#col\" + cols[j])\n          .classList.remove(\"mover\");\n      }\n    }\n    // position arrows / set focus in case the DOM got updated above\n    setTimeout(() => {\n      this.positionArrows(this.__activeItem);\n      this.__activeItem.focus();\n    }, 100);\n  },\n\n  /**\n   * Notice colors have changed\n   */\n  _colorCreation: function(colors, col1, col2, col3, col4) {\n    let items = colors.split(\"/\");\n    let cols = [col1, col2, col3, col4];\n    // merge the two\n    for (var i in cols) {\n      if (cols[i] != \"\") {\n        items[i] = cols[i];\n      }\n    }\n    return items;\n  },\n\n  /**\n   * Start a drag event, this is an element being dragged\n   */\n  dragStart: function(e) {\n    let children = dom(this).children;\n    // walk the children and apply the draggable state needed\n    for (var i in children) {\n      if (typeof children[i].classList !== typeof undefined) {\n        children[i].classList.add(\"mover\");\n      }\n    }\n    let cols = [1, 2, 3, 4];\n    for (var j in cols) {\n      if (!this[\"hideCol\" + cols[j]]) {\n        this.shadowRoot.querySelector(\"#col\" + cols[j]).classList.add(\"mover\");\n      }\n    }\n  },\n\n  /**\n   * When we end dragging ensure we remove the mover class.\n   */\n  dragEnd: function(e) {\n    let children = dom(this).children;\n    // walk the children and apply the draggable state needed\n    for (var i in children) {\n      if (typeof children[i].classList !== typeof undefined) {\n        children[i].classList.remove(\"mover\");\n      }\n    }\n    let cols = [1, 2, 3, 4];\n    for (var j in cols) {\n      if (!this[\"hideCol\" + cols[j]]) {\n        this.shadowRoot\n          .querySelector(\"#col\" + cols[j])\n          .classList.remove(\"mover\");\n      }\n    }\n  },\n\n  /**\n   * Split a color value based on referencing the code\n   * as color-number for name of the color hypthen numberical array position\n   */\n  splitColor: function(value) {\n    if (value != \"\" && typeof this.__hexCodes[value] !== typeof undefined) {\n      return this.__hexCodes[value][this.__hexCodes[value].length - 1];\n    }\n    return value;\n  },\n\n  /**\n   * Generate the correct color code form the column\n   */\n  _colColors: function(newValue, oldValue) {\n    // don't bother with things that are null\n    if (newValue != \"\") {\n      for (var i in newValue) {\n        this[\"__col\" + (parseInt(i) + 1) + \"Color\"] = this.splitColor(\n          newValue[i]\n        );\n      }\n    }\n  },\n\n  /**\n   * See layout has changed, update all the possible data values\n   */\n  _layoutChanged: function(layout) {\n    let items = layout.split(\"/\");\n    this.__colCount = items.length;\n    switch (items.length) {\n      case 1:\n        this.hideCol1 = false;\n        this.hideCol2 = true;\n        this.hideCol3 = true;\n        this.hideCol4 = true;\n        break;\n      case 2:\n        this.hideCol1 = false;\n        this.hideCol2 = false;\n        this.hideCol3 = true;\n        this.hideCol4 = true;\n        break;\n      case 3:\n        this.hideCol1 = false;\n        this.hideCol2 = false;\n        this.hideCol3 = false;\n        this.hideCol4 = true;\n        break;\n      case 4:\n        this.hideCol1 = false;\n        this.hideCol2 = false;\n        this.hideCol3 = false;\n        this.hideCol4 = false;\n        break;\n    }\n    for (var i in items) {\n      let col = Number(i) + 1;\n      this[\"col\" + col + \"_xl\"] = items[i];\n      this[\"col\" + col + \"_lg\"] = items[i];\n      this[\"col\" + col + \"_md\"] = items[i];\n      this[\"col\" + col + \"_sm\"] = items[i];\n      this[\"col\" + col + \"_xs\"] = items[i];\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  attached: function() {\n    // listen for HAX if it's around\n    document.body.addEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n    // listen for HAX insert events if it exists\n    document.body.addEventListener(\n      \"hax-insert-content\",\n      this.haxInsertContent.bind(this)\n    );\n    // quickly build a basic selection array from known color names\n    var colorOptions = [];\n    for (var i in this.__hexCodes) {\n      colorOptions[i] = i;\n    }\n    // Establish hax property binding\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      settings: {\n        quick: [],\n        configure: [\n          {\n            property: \"layout\",\n            title: \"Layout\",\n            description: \"Style to present these items\",\n            inputMethod: \"select\",\n            options: {\n              \"12\": \"1 col, full width\",\n              \"8/4\": \"2 cols, 66% / 33% split\",\n              \"6/6\": \"2 cols, 50% split\",\n              \"4/8\": \"2 cols, 33% / 66% split\",\n              \"4/4/4\": \"3 cols, 33% each\",\n              \"3/3/3/3\": \"4 cols, 25% each\"\n            }\n          },\n          {\n            property: \"col1Color\",\n            title: \"Col 1 color\",\n            description: \"Color for the 1st column\",\n            inputMethod: \"select\",\n            options: colorOptions\n          },\n          {\n            property: \"col2Color\",\n            title: \"Col 2 color\",\n            description: \"Color for the 1st column\",\n            inputMethod: \"select\",\n            options: colorOptions\n          },\n          {\n            property: \"col3Color\",\n            title: \"Col 3 color\",\n            description: \"Color for the 1st column\",\n            inputMethod: \"select\",\n            options: colorOptions\n          },\n          {\n            property: \"col4Color\",\n            title: \"Col 4 color\",\n            description: \"Color for the 1st column\",\n            inputMethod: \"select\",\n            options: colorOptions\n          }\n        ],\n        advanced: []\n      },\n      saveOptions: {\n        unsetAttributes: [\"__active-item\", \"_colors\", \"edit-mode\"]\n      }\n    };\n\n    this.setHaxProperties(props);\n  },\n\n  /**\n   * Insert event noticed by HAX\n   */\n  haxInsertContent: function(e) {\n    // see if WE are the thing that's active when insert was fired\n    if (this === window.HaxStore.instance.activeContainerNode) {\n      // trick events into rebinding since this event is only possible\n      // when we are in an edit state\n      this.editMode = false;\n      // delay and then set it back, re-applying all events\n      setTimeout(() => {\n        this.editMode = true;\n        // reposition arrows on what had active status\n        this.positionArrows(this.__activeItem);\n        // focus which then hax will kick in\n        this.__activeItem.focus();\n      }, 250);\n    }\n  },\n\n  /**\n   * Store updated, sync.\n   */\n  _haxStorePropertyUpdated: function(e) {\n    if (\n      e.detail &&\n      typeof e.detail.value !== typeof undefined &&\n      e.detail.property\n    ) {\n      if (typeof e.detail.value === \"object\") {\n        this.set(e.detail.property, null);\n      }\n      this.set(e.detail.property, e.detail.value);\n    }\n  }\n});\nexport { GridPlate };\n"],"names":["GridPlate","Polymer","_template","html","is","listeners","focusin","behaviors","HAXBehaviors","PropertiesBehaviors","window","simpleColorsBehaviors","properties","layout","type","String","value","observer","editMode","reflectToAttribute","Boolean","colors","col1Color","col2Color","col3Color","col4Color","_colors","computed","__activeItem","Object","cancelActive","e","moveActiveElement","local","dom","localTarget","col","this","getAttribute","split","max","cols","j","id","previousElementSibling","insertBefore","nextElementSibling","parseInt","setAttribute","appendChild","setTimeout","_this","positionArrows","focus","_activeItemChanged","newValue","oldValue","_typeof","classList","add","remove","blur","setActiveElement","$","up","preventDefault","stopPropagation","_focusIn","parentNode","item","down","left","right","disabled","bodyRect","getBoundingClientRect","elemRect","topOffset","top","leftOffset","style","height","width","_editModeChanged","children","getEffectiveChildNodes","i","tagName","addEventListener","dropEvent","bind","dragStart","dragEnd","async","run","_this2","shadowRoot","querySelector","removeEventListener","removeAttribute","replace","_this3","_colorCreation","col1","col2","col3","col4","items","splitColor","__hexCodes","length","_colColors","_layoutChanged","__colCount","hideCol1","hideCol2","hideCol3","hideCol4","Number","attached","document","body","_haxStorePropertyUpdated","haxInsertContent","colorOptions","props","canScale","canPosition","canEditSource","settings","quick","configure","property","title","description","inputMethod","options","advanced","saveOptions","unsetAttributes","setHaxProperties","HaxStore","instance","activeContainerNode","_this4","detail","set"],"mappings":"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"}