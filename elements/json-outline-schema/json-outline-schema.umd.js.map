{"version":3,"file":"json-outline-schema.umd.js","sources":["json-outline-schema.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\n// register globally so we can make sure there is only one\nwindow.JsonOutlineSchema = window.JsonOutlineSchema || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same json-outline-schema element, making it a singleton.\nwindow.JsonOutlineSchema.requestAvailability = () => {\n  // if there is no single instance, generate one and append it to end of the document\n  if (!window.JsonOutlineSchema.instance) {\n    window.JsonOutlineSchema.instance = document.createElement(\"json-outline-schema\");\n    document.body.appendChild(window.JsonOutlineSchema.instance);\n  }\n  return window.JsonOutlineSchema.instance;\n};\n\n/**\n * `json-outline-schema`\n * `JS based state management helper for the json outline schema spec`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass JsonOutlineSchema extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>\n<div>[[id]]</div>\n<div>[[title]]</div>\n<div>[[author]]</div>\n<div>[[description]]</div>\n<div>[[license]]</div>\n<div>[[metadata]]</div>\n<div>[[items]]</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"id\": {\n    \"name\": \"id\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"title\": {\n    \"name\": \"title\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"author\": {\n    \"name\": \"author\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"description\": {\n    \"name\": \"description\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"license\": {\n    \"name\": \"license\",\n    \"type\": \"String\",\n    \"value\": \"by-sa\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"metadata\": {\n    \"name\": \"metadata\",\n    \"type\": \"Object\",\n    \"value\": \"{}\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"items\": {\n    \"name\": \"items\",\n    \"type\": \"Array\",\n    \"value\": \"[]\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n};\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"json-outline-schema\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    \n    window.addEventListener(\"json-outline-schema-hide\", this.hideJsonOutlineSchema.bind(this));\n    window.addEventListener(\"json-outline-schema-show\", this.showJsonOutlineSchema.bind(this));\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.connectedCallback();\n    window.removeEventListener(\"json-outline-schema-hide\", this.hideJsonOutlineSchema.bind(this));\n    window.removeEventListener(\"json-outline-schema-show\", this.showJsonOutlineSchema.bind(this));\n  }\n  /**\n   * Hide callback\n   */\n  hideJsonOutlineSchema (e) {\n    // add your code to run when the singleton hides\n  }\n  /**\n   * Show / available callback\n   */\n  showJsonOutlineSchema (e) {\n    // add your code to run when the singleton is called for\n  }\n\n  \n}\nwindow.customElements.define(JsonOutlineSchema.tag, JsonOutlineSchema);\nexport { JsonOutlineSchema };\n"],"names":["window","JsonOutlineSchema","requestAvailability","instance","document","createElement","body","appendChild","PolymerElement","html","addEventListener","this","hideJsonOutlineSchema","bind","showJsonOutlineSchema","removeEventListener","e","customElements","define","tag"],"mappings":"4kDAMAA,OAAOC,kBAAoBD,OAAOC,mBAAqB,GAIvDD,OAAOC,kBAAkBC,oBAAsB,kBAExCF,OAAOC,kBAAkBE,WAC5BH,OAAOC,kBAAkBE,SAAWC,SAASC,cAAc,uBAC3DD,SAASE,KAAKC,YAAYP,OAAOC,kBAAkBE,WAE9CH,OAAOC,kBAAkBE,cAc5BF,gaAA0BO,+DAIrBC,qDAqBA,IACH,MACI,UACA,eACC,uBACa,YACV,SAEL,MACC,aACA,eACC,uBACa,YACV,UAEJ,MACA,cACA,eACC,uBACa,YACV,eAEC,MACL,mBACA,eACC,uBACa,YACV,WAEH,MACD,eACA,eACC,4BACa,YACV,YAEF,MACF,gBACA,eACC,yBACa,YACV,SAEL,MACC,aACA,cACC,yBACa,YACV,sCAUL,6HAQPT,OAAOU,iBAAiB,2BAA4BC,KAAKC,sBAAsBC,KAAKF,OACpFX,OAAOU,iBAAiB,2BAA4BC,KAAKG,sBAAsBD,KAAKF,4GAOpFX,OAAOe,oBAAoB,2BAA4BJ,KAAKC,sBAAsBC,KAAKF,OACvFX,OAAOe,oBAAoB,2BAA4BJ,KAAKG,sBAAsBD,KAAKF,qDAKlEK,kDAMAA,yCAMzBhB,OAAOiB,eAAeC,OAAOjB,EAAkBkB,IAAKlB"}