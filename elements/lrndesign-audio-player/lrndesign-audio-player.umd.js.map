{"version":3,"file":"lrndesign-audio-player.umd.js","sources":["lib/lrndesign-audio-player-icons.js","lrndesign-audio-player.umd.js"],"sourcesContent":["import \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-iconset-svg/iron-iconset-svg.js\";\nvar $_documentContainer = document.createElement(\"div\");\n$_documentContainer.setAttribute(\"style\", \"display: none;\");\n\n$_documentContainer.innerHTML = `<iron-iconset-svg name=\"lrndesign-audio-player-icons\" size=\"24\">\n    <svg>\n        <defs>\n            <g id=\"error-outline\"><path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path></g>\n            <g id=\"play-arrow\"><path d=\"M8 5v14l11-7z\"></path></g>\n            <g id=\"replay\"><path d=\"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\"></path></g>\n            <g id=\"pause\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"></path></g>\n        </defs>\n    </svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild($_documentContainer);\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-progress/paper-progress.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-ripple/paper-ripple.js\";\nimport { IronA11yKeysBehavior } from \"@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js\";\nimport \"./lib/lrndesign-audio-player-icons.js\";\n/**\nA custom audio player with material paper style and clean design.\n\nExample:\n\n    <lrndesign-audio-player src=\"audio.mp3\"></lrndesign-audio-player>\n\n### Styling the player:\n\nThis player has an accent color, and you have two option to modify it:\n\n- **Option 1**: Using the *color property* on element. This one is handy if you need to modify the color dynamically.\n\n\n    <lrndesign-audio-player color=\"#F05C38\" src=\"audio.mp3\"></lrndesign-audio-player>\n\n\n- **Option 2**: Using the *custom CSS property*:\n\n\n\n    lrndesign-audio-player {\n       --lrndesign-audio-player-color: #e91e63;\n    }\n\nThe following mixins are available for styling:\n\nCustom property                             | Description                                 | Default\n--------------------------------------------|---------------------------------------------|----------\n--lrndesign-audio-player-color                  | Color of the element                        | blueviolet\n\n@element lrndesign-audio-player\n@demo demo/index.html\n*/\nlet LrndesignAudioPlayer = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /*margin: auto 10px;\n        width: 100%;*/\n        box-sizing: border-box;\n        font-family: \"Roboto Mono\", \"Helvetica Neue\", Arial, sans-serif;\n      }\n\n      #wrapper {\n        position: relative;\n        cursor: pointer;\n        height: 50px;\n        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n      }\n\n      #left,\n      #right {\n        height: 50px;\n        width: 50px;\n        position: relative;\n      }\n\n      #left {\n        background-color: var(--lrndesign-audio-player-color, blueviolet);\n      }\n\n      #right {\n        background-color: rgba(255, 255, 255, 0.75);\n      }\n\n      paper-icon-button,\n      iron-icon {\n        color: #fff;\n      }\n\n      #duration,\n      #title,\n      #progress2 {\n        text-align: center;\n        line-height: 50px;\n      }\n\n      #duration {\n        font-size: 11px;\n        color: var(--lrndesign-audio-player-color, blueviolet);\n      }\n\n      paper-icon-button,\n      iron-icon {\n        margin: auto;\n      }\n\n      #replay {\n        opacity: 0;\n        color: var(--lrndesign-audio-player-color, blueviolet);\n      }\n\n      #title,\n      #progress2 {\n        pointer-events: none;\n        font-size: 15px;\n      }\n\n      #title {\n        z-index: 2;\n        color: var(--lrndesign-audio-player-color, blueviolet);\n      }\n\n      #progress2 {\n        width: 0px;\n        z-index: 5;\n        color: #fff;\n        overflow: hidden;\n      }\n\n      #center {\n        position: relative;\n        overflow: hidden;\n        background-color: rgba(255, 255, 255, 0.75);\n      }\n\n      #progress {\n        width: 100%;\n        transform-origin: left;\n        transform: scaleX(0);\n        background-color: var(--lrndesign-audio-player-color, blueviolet);\n      }\n\n      paper-ripple {\n        color: var(--lrndesign-audio-player-color, blueviolet);\n      }\n\n      /* On hover */\n\n      :host(:not(.cantplay)) #right:hover #replay {\n        opacity: 1;\n      }\n\n      #right:hover #duration {\n        opacity: 0;\n      }\n\n      #left:hover #play,\n      #left:hover #pause {\n        transform: scale3d(1.1, 1.1, 1.1);\n        -ms-transform: scale3d(1.1, 1.1, 1.1);\n        -webkit-transform: scale3d(1.1, 1.1, 1.1);\n      }\n\n      /* On Error */\n\n      :host(.cantplay) #title {\n        font-size: 12px;\n      }\n\n      :host(.cantplay) #wrapper {\n        cursor: default;\n      }\n\n      :host(.cantplay) #play {\n        opacity: 0;\n      }\n\n      /* Flexbox Helpers */\n\n      .layout-horizontal {\n        display: flex;\n        display: -webkit-flex;\n        display: -ms-flexbox;\n        -ms-flex-direction: row;\n        -webkit-flex-direction: row;\n        flex-direction: row;\n      }\n\n      .flex {\n        -ms-flex: 1;\n        -webkit-flex: 1;\n        flex: 1;\n      }\n\n      .fit {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      }\n\n      .self-start {\n        -ms-align-self: flex-start;\n        -webkit-align-self: flex-start;\n        align-self: flex-start;\n      }\n\n      .self-end {\n        -ms-align-self: flex-end;\n        -webkit-align-self: flex-end;\n        align-self: flex-end;\n      }\n    </style>\n\n    <div id=\"wrapper\" class=\"layout-horizontal\">\n      <div id=\"left\" class=\"self-start\" on-tap=\"playPause\">\n        <!-- Icon -->\n        <paper-icon-button\n          id=\"play\"\n          icon=\"lrndesign-audio-player-icons:play-arrow\"\n          class=\"fit\"\n          hidden\\$=\"{{ _hidePlayIcon(isPlaying, canBePlayed) }}\"\n          role=\"button\"\n          aria-label=\"Play Audio\"\n          tabindex=\"-1\"\n        ></paper-icon-button>\n        <paper-icon-button\n          id=\"pause\"\n          icon=\"lrndesign-audio-player-icons:pause\"\n          class=\"fit\"\n          hidden\\$=\"{{ !isPlaying }}\"\n          role=\"button\"\n          aria-label=\"Pause Audio\"\n          tabindex=\"-1\"\n        ></paper-icon-button>\n        <iron-icon\n          id=\"error\"\n          icon=\"lrndesign-audio-player-icons:error-outline\"\n          class=\"fit\"\n          hidden\\$=\"{{ !error }}\"\n        ></iron-icon>\n      </div>\n\n      <div id=\"center\" class=\"flex\" on-down=\"_onDown\">\n        <!-- Title -->\n        <div id=\"title\" class=\"fit\" role=\"alert\">{{ title }}</div>\n\n        <!-- Audio HTML5 element -->\n        <audio\n          id=\"audio\"\n          src=\"{{ src }}\"\n          preload=\"{{ _setPreload(autoPlay, preload) }}\"\n        ></audio>\n\n        <!-- Progress bar -->\n        <div id=\"progress\" class=\"fit\"></div>\n\n        <paper-ripple></paper-ripple>\n\n        <!-- Secondary white title -->\n        <div id=\"progress2\" class=\"fit\">\n          <div id=\"title2\" aria-hidden=\"true\">{{ title }}</div>\n        </div>\n      </div>\n\n      <div id=\"right\" class=\"self-end\" on-click=\"restart\">\n        <!-- Duration -->\n        <div id=\"duration\" class=\"fit\" hidden\\$=\"{{ ended }}\">\n          <span class=\"fit\" role=\"timer\" aria-label=\"Audio Track Length\"\n            >{{ _convertSecToMin(timeLeft) }}</span\n          >\n        </div>\n\n        <!-- Icon -->\n        <paper-icon-button\n          id=\"replay\"\n          class=\"fit\"\n          icon=\"lrndesign-audio-player-icons:replay\"\n          tabindex=\"-1\"\n          role=\"button\"\n          aria-label=\"Replay Audio\"\n        ></paper-icon-button>\n      </div>\n    </div>\n  `,\n\n  is: \"lrndesign-audio-player\",\n\n  //\n  // Component behaviors\n  behaviors: [IronA11yKeysBehavior],\n\n  //\n  // Define component default attributes\n  hostAttributes: {\n    tabindex: 0,\n    role: \"application\",\n    //'aria-activedescendant': 'play',\n    \"aria-label\": \"Audio Player\",\n    \"aria-describedby\": \"title\"\n  },\n\n  //\n  // Define public properties\n\n  properties: {\n    src: {\n      type: String,\n      observer: \"_srcChanged\"\n    },\n    title: {\n      type: String,\n      value: \"Click to play this audio file\"\n    },\n    color: {\n      type: String,\n      observer: \"_changeColor\"\n    },\n    autoPlay: {\n      type: Boolean,\n      value: false\n    },\n    preload: {\n      type: String,\n      value: \"auto\"\n    },\n    currentTime: {\n      type: Number,\n      value: 0,\n      notify: true\n    },\n    timeLeft: {\n      type: Number,\n      value: 0\n    },\n    smallSkip: {\n      type: Number,\n      value: 15\n    },\n    largeSkip: {\n      type: Number,\n      value: 60\n    },\n    error: {\n      type: Boolean\n    },\n    timeOffset: {\n      type: Number,\n      value: 0\n    }\n  },\n\n  keyBindings: {\n    space: \"playPause\",\n    enter: \"playPause\",\n    left: \"_skipReverseByInterval\",\n    right: \"_skipReverseByInterval\",\n    down: \"_skipReverseByInterval\",\n    up: \"_skipReverseByInterval\"\n  },\n\n  //\n  // When element is created\n\n  ready: function() {\n    var player = this;\n\n    //\n    // create Player defaults\n\n    player.canBePlayed = false;\n    player.isPlaying = false;\n    player.ended = false;\n    player.error = false;\n    player.$.audio.currentTime = player.timeOffset; // apply the audio start time property\n  },\n\n  /**\n   * attached lifecycle\n   */\n  attached: function() {\n    this.$.audio.addEventListener(\"loadedmetadata\", this._onCanPlay.bind(this));\n    this.$.audio.addEventListener(\"playing\", this._onPlaying.bind(this));\n    this.$.audio.addEventListener(\"pause\", this._onPause.bind(this));\n    this.$.audio.addEventListener(\"ended\", this._onEnd.bind(this));\n    this.$.audio.addEventListener(\"error\", this._onError.bind(this));\n  },\n  /**\n   * detached lifecycle\n   */\n  detached: function() {\n    this.$.audio.removeEventListener(\n      \"loadedmetadata\",\n      this._onCanPlay.bind(this)\n    );\n    this.$.audio.removeEventListener(\"playing\", this._onPlaying.bind(this));\n    this.$.audio.removeEventListener(\"pause\", this._onPause.bind(this));\n    this.$.audio.removeEventListener(\"ended\", this._onEnd.bind(this));\n    this.$.audio.removeEventListener(\"error\", this._onError.bind(this));\n  },\n  // Play/Pause controls\n\n  playPause: function(e) {\n    if (!!e) e.preventDefault();\n    var player = this;\n\n    if (player.canBePlayed) {\n      return player.isPlaying ? player.$.audio.pause() : player.$.audio.play();\n    } else if (player.preload === \"none\") {\n      // If player can't be played, because audio wasn't pre-loaded\n      // due to the preload=\"none\" property set,\n      // load the audio file at this point and start playing it immediately\n      player.$.audio.load();\n      player.$.audio.play();\n    }\n  },\n\n  //\n  // Restart audio\n\n  restart: function(e) {\n    if (!!e) e.preventDefault();\n    var player = this;\n    player.$.audio.currentTime = 0;\n    if (!player.isPlaying) player.$.audio.play();\n  },\n\n  // when audio file can be played in user's browser\n\n  _onCanPlay: function() {\n    var player = this;\n    player.canBePlayed = true;\n    player.timeLeft = player.$.audio.duration;\n\n    // If player has a Time Offset specified\n    // style the progress bar and title accordingly\n    if (player.timeOffset > 0) {\n      var percentagePlayed = player.timeOffset / player.$.audio.duration;\n      player._updateVisualProgress(percentagePlayed);\n    }\n\n    // If player has auto-play attribute set,\n    // it ignores preload=\"none\" property and starts playing on load.\n    // This behavior corresponds to the native audio element behavior.\n    if (player.autoPlay) player.$.audio.play();\n  },\n\n  // when Player starts playing\n\n  _onPlaying: function() {\n    var player = this;\n    player.ended = false;\n    player.isPlaying = true;\n    player.$.replay.style = \"\"; // remove Replay inline styling\n    player._startProgressTimer();\n  },\n\n  //\n  // Skip or reverse by pre-defined intervals\n\n  _skipReverseByInterval: function(e) {\n    if (!!e) e.preventDefault();\n\n    var player = this,\n      newTime = 0;\n\n    switch (e.detail.key) {\n      case \"up\":\n        if (player.largeSkip < player.timeLeft)\n          newTime = player.currentTime + player.largeSkip;\n        break;\n      case \"down\":\n        if (player.currentTime - player.largeSkip > 0)\n          newTime = player.currentTime - player.largeSkip;\n        break;\n      case \"right\":\n        if (player.smallSkip < player.timeLeft)\n          newTime = player.currentTime + player.smallSkip;\n        break;\n      default:\n        if (player.currentTime - player.smallSkip > 0)\n          newTime = player.currentTime - player.smallSkip;\n    }\n\n    player._updatePlayPosition(newTime);\n    if (!player.isPlaying) player.$.audio.play();\n  },\n\n  // starts Timer\n\n  _startProgressTimer: function() {\n    var player = this;\n    player.timer = {};\n\n    if (player.timer.sliderUpdateInterval) {\n      clearInterval(player.timer.sliderUpdateInterval);\n    }\n\n    player.timer.sliderUpdateInterval = setInterval(function() {\n      if (player.isPlaying) {\n        player.currentTime = player.$.audio.currentTime;\n        player.timeLeft = player.$.audio.duration - player.currentTime;\n\n        var percentagePlayed = player.currentTime / player.$.audio.duration;\n        player._updateVisualProgress(percentagePlayed);\n      } else {\n        clearInterval(player.timer.sliderUpdateInterval);\n      }\n    }, 60);\n  },\n\n  // when Player is paused\n\n  _onPause: function() {\n    var player = this;\n    player.isPlaying = false;\n  },\n\n  // when Player ended playing an audio file\n\n  _onEnd: function() {\n    var player = this;\n    player.ended = true;\n    player.isPlaying = false;\n    player.$.replay.style.opacity = 1; // display Replay icon\n  },\n\n  // on file load error\n\n  _onError: function() {\n    var player = this;\n    player.classList.add(\"cantplay\");\n    player.title = \"Sorry, can't play track: \" + player.title;\n    player.error = true;\n    player.setAttribute(\"aria-invalid\", \"true\");\n  },\n\n  // to convert seconds to 'm:ss' format\n\n  _convertSecToMin: function(seconds) {\n    if (seconds === 0) return \"\";\n\n    var minutes = Math.floor(seconds / 60);\n    var secondsToCalc = Math.floor(seconds % 60) + \"\";\n    return (\n      minutes +\n      \":\" +\n      (secondsToCalc.length < 2 ? \"0\" + secondsToCalc : secondsToCalc)\n    );\n  },\n\n  //\n  // When user clicks somewhere on the progress bar\n\n  _onDown: function(e) {\n    e.preventDefault();\n    var player = this;\n\n    if (player.canBePlayed) {\n      player._updateProgressBar(e);\n      if (!player.isPlaying) player.$.audio.play();\n\n      // When preload=\"none\" is being used,\n      // player should first try to load the audio,\n      // and when it's successfully loaded, recalculate the progress bar\n    } else if (player.preload === \"none\") {\n      player.$.audio.load();\n      player.$.audio.addEventListener(\n        \"loadedmetadata\",\n        function() {\n          player._updateProgressBar(e);\n          if (!player.isPlaying) player.$.audio.play();\n        },\n        false\n      );\n    }\n  },\n\n  //\n  // Helper function\n  // that recalculates the progress bar position\n  // based on the event.click position\n\n  _updateProgressBar: function(e) {\n    var player = this;\n\n    var x = e.detail.x - player.$.center.getBoundingClientRect().left;\n    var r =\n      (x / player.$.center.getBoundingClientRect().width) *\n      player.$.audio.duration;\n\n    this._updatePlayPosition(r);\n  },\n\n  //\n  // Helper function\n  // updates the current time based on a time variable\n\n  _updatePlayPosition: function(newTime) {\n    var player = this;\n    player.currentTime = player.$.audio.currentTime = newTime;\n\n    var percentagePlayed = player.currentTime / player.$.audio.duration;\n    player._updateVisualProgress(percentagePlayed);\n  },\n\n  //\n  // Helper function\n  // updates the progress bar based on a percentage played\n\n  _updateVisualProgress: function(percentagePlayed) {\n    var player = this;\n\n    player.$.progress.style.transform = \"scaleX(\" + percentagePlayed + \")\";\n    player.$.progress2.style.width = percentagePlayed * 100 + \"%\";\n    player.$.title2.style.width = (1 / percentagePlayed) * 100 + \"%\";\n  },\n\n  //\n  // If src is changed when track is playing,\n  // pause the track and start playing a new src\n\n  _srcChanged: function(oldValue, newValue) {\n    var player = this;\n\n    if (player.isPlaying) {\n      player.$.audio.pause();\n      player.$.audio.play();\n    }\n  },\n\n  //\n  // If color property is changed,\n  // update all the nodes with the new accent color\n\n  _changeColor: function(newValue) {\n    var player = this;\n    player.$.left.style.backgroundColor = newValue;\n    player.$.title.style.color = newValue;\n    player.$.duration.style.color = newValue;\n    player.$.progress.style.backgroundColor = newValue;\n    player.$.replay.style.color = newValue;\n  },\n\n  _hidePlayIcon: function(isPlaying, canBePlayed) {\n    return isPlaying ? true : !(canBePlayed || this.preload === \"none\");\n  },\n\n  _setPreload: function(autoplay, preload) {\n    return autoplay ? \"auto\" : preload;\n  }\n});\nexport { LrndesignAudioPlayer };\n"],"names":["$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","LrndesignAudioPlayer","Polymer","_template","html","is","behaviors","IronA11yKeysBehavior","hostAttributes","tabindex","role","properties","src","type","String","observer","title","value","color","autoPlay","Boolean","preload","currentTime","Number","notify","timeLeft","smallSkip","largeSkip","error","timeOffset","keyBindings","space","enter","left","right","down","up","ready","this","canBePlayed","isPlaying","ended","$","audio","attached","addEventListener","_onCanPlay","bind","_onPlaying","_onPause","_onEnd","_onError","detached","removeEventListener","playPause","e","preventDefault","pause","play","load","restart","duration","percentagePlayed","_updateVisualProgress","replay","style","_startProgressTimer","_skipReverseByInterval","newTime","detail","key","_updatePlayPosition","player","timer","sliderUpdateInterval","clearInterval","setInterval","opacity","classList","add","_convertSecToMin","seconds","minutes","Math","floor","secondsToCalc","length","_onDown","_updateProgressBar","r","x","center","getBoundingClientRect","width","progress","transform","progress2","title2","_srcChanged","oldValue","newValue","_changeColor","backgroundColor","_hidePlayIcon","_setPreload","autoplay"],"mappings":"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"}