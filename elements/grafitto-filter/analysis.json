{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "grafitto-filter.js",
      "properties": [
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "These are the items to be filtered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "like",
          "type": "string | null | undefined",
          "description": "Filter regular expression string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "where",
          "type": "string | null | undefined",
          "description": "The filter-by field of your items array of objects",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"name\""
        },
        {
          "name": "caseSensitive",
          "type": "boolean | null | undefined",
          "description": "Enable case sensitivity when filtering",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "as",
          "type": "string | null | undefined",
          "description": "How the filtered items will be passed to the light-DOM. Default `items`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"items\""
        },
        {
          "name": "filtered",
          "type": "Array | null | undefined",
          "description": "Filtered items",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onFilter\"",
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "f",
          "type": "Function | null | undefined",
          "description": "Custom filter function, if this is provided then 'where' and 'like' are ignored",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Function"
            }
          }
        },
        {
          "name": "_template",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 187,
              "column": 1
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "filter",
          "description": "Filters the items using the f function provided. Recommended when f function is provided",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeFiltered",
          "description": "This filters the items provided",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 2
            },
            "end": {
              "line": 306,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "array",
              "description": "These are the items to be filtered."
            },
            {
              "name": "where",
              "type": "string",
              "description": "The filterby string."
            },
            {
              "name": "like",
              "type": "string",
              "description": "The filter string."
            },
            {
              "name": "caseSensitive"
            }
          ],
          "return": {
            "desc": "array} Filter results."
          }
        },
        {
          "name": "_populateUserTemplate",
          "description": "Populates user template, only template dom-repeate is supported for now",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 2
            },
            "end": {
              "line": 336,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filtered",
              "type": "array",
              "description": "the filtered array to be displayed"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_decomposeWhere",
          "description": "This decomposes `where` property to object attributes using . notation",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 2
            },
            "end": {
              "line": 345,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "where"
            },
            {
              "name": "item"
            }
          ]
        },
        {
          "name": "_onFilter",
          "description": "The `filter` event is fired whenever filtering is done before populating the dom.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 2
            },
            "end": {
              "line": 354,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 182,
          "column": 29
        },
        "end": {
          "line": 355,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "GrafittoFilter",
      "attributes": [
        {
          "name": "items",
          "description": "These are the items to be filtered",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "like",
          "description": "Filter regular expression string",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "where",
          "description": "The filter-by field of your items array of objects",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "case-sensitive",
          "description": "Enable case sensitivity when filtering",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "as",
          "description": "How the filtered items will be passed to the light-DOM. Default `items`",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "filtered",
          "description": "Filtered items",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "f",
          "description": "Custom filter function, if this is provided then 'where' and 'like' are ignored",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Function | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "filter",
          "description": "The `filter` event is fired whenever filtering is done before populating the dom.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "f-changed",
          "description": "Fired when the `f` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "grafitto-filter"
    }
  ]
}
