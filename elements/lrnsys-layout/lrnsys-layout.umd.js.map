{"version":3,"file":"lrnsys-layout.umd.js","sources":["lib/lrnsys-button-inner.js","lib/lrnsys-collapselist-item.js","lib/lrnsys-collapselist.js","lib/lrnsys-dialog-toolbar-button.js","lib/lrnsys-dialog-toolbar.js","lib/lrnsys-dialog-modal.js","lib/lrnsys-dialog.js","lib/lrnsys-drawer-modal.js","lib/lrnsys-drawer.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n`lrnsys-button-inner`\n\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n      :host > div > * {\n        vertical-align: middle;\n      }\n      .text-label {\n        margin-left: 0.5em;\n      }\n      .text-label-only {\n        margin-left: 0em;\n      }\n    </style>\n    <div>\n      <template is=\"dom-if\" if=\"[[avatar]]\">\n        <paper-avatar src\\$=\"[[avatar]]\"></paper-avatar>\n      </template>\n      <template is=\"dom-if\" if=\"[[icon]]\">\n        <lrn-icon icon=\"[[icon]]\"></lrn-icon>\n      </template>\n      <template is=\"dom-if\" if=\"[[text]]\">\n        <span class\\$=\"[[_getTextLabelClass()]]\">[[text]]</span>\n      </template>\n    </div>\n    <div><slot name=\"button\"></slot></div>\n`,\n\n  is: \"lrnsys-button-inner\",\n\n  properties: {\n    /**\n     * Icon to present for clicking.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * Icon to present for clicking.\n     */\n    avatar: {\n      type: String\n    },\n    /**\n     * Text to present for clicking.\n     */\n    text: {\n      type: String\n    }\n  },\n\n  /**\n   * Find out if the text does not have an avatar or an icon to the left,\n   * and add a class to remove the left margin.\n   */\n  _getTextLabelClass: function() {\n    if (!this.avatar && !this.icon) {\n      return \"text-label-only\";\n    }\n    return \"text-label\";\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-collapse/iron-collapse.js\";\n/**\n`lrnsys-collapselist-item`\n\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        color: var(--lrnsys-collapselist-text-color, #000);\n      }\n      paper-button {\n        height: 3em;\n        padding: 0;\n        margin: 0;\n        min-width: .1em;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        text-transform: unset;\n        border-radius: 0;\n        background-color: var(--lrnsys-collapselist-item-color, #fff);\n      }\n      paper-button span {\n        pointer-events: none;\n      }\n      .collapse-label {\n        padding: .75em .5em .25em .5em;\n        width: 100%;\n        height: 2em;\n      }\n      :host([opened]) #collapse {\n        border-top: 1px solid var(--lrnsys-collapselist-item-border, #bbb);\n        background-color: var(--lrnsys-collapselist-item-active-color, #eee);\n      }\n      :host([opened]) .collapse-label {\n        font-weight: bold;\n        background-color: var(--lrnsys-collapselist-item-active-color, #eee);\n      }\n      .collapse-content {\n        padding: 1em;\n      }\n    </style>\n    <paper-button on-tap=\"collapseToggle\" id=\"collapse-trigger\" aria-controls=\"collapse\">\n      <span class=\"collapse-label\">\n        <slot name=\"label\"></slot>\n      </span>\n    </paper-button>\n    <iron-collapse id=\"collapse\" opened=\"{{opened}}\">\n      <div class=\"collapse-content\">\n        <slot name=\"content\"></slot>\n      </div>\n    </iron-collapse>\n`,\n\n  is: \"lrnsys-collapselist-item\",\n\n  properties: {\n    /**\n     * Whether or not this is default open on render.\n     */\n    opened: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      notify: true\n    }\n  },\n\n  /**\n   * Toggling collapse on an iron element.\n   */\n  collapseToggle: function(e) {\n    this.$.collapse.toggle();\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/app-layout/app-layout.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-collapse/iron-collapse.js\";\n/**\n`lrnsys-collapselist`\n\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n      :host {\n        display: block;\n        background-color: var(--simple-colors-background1);\n        --lrnsys-collapselist-text-color: var(--simple-colors-foreground1);\n        --lrnsys-collapselist-item-color: var(--simple-colors-background1);\n        --lrnsys-collapselist-item-active-color: var(--simple-colors-background2);\n        --lrnsys-collapselist-item-border: var(--simple-colors-background5);\n      }\n      ul {\n        list-style-type: none;\n        margin: 0;\n        padding: 0;\n      }\n      ul li {\n        width: 100%;\n        border: 1px solid var(--lrnsys-collapselist-item-border);\n        margin-bottom: -1px;\n      }\n      ul li paper-button {\n        height: 2em;\n        padding: .5em;\n        margin: 0;\n        min-width: .1em;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        text-transform: unset;\n        border-radius: 0;\n      }\n      ul li paper-button iron-icon,\n      ul li paper-button span {\n        pointer-events: none;\n      }\n      .collapse-label {\n        margin-left: .5em;\n      }\n      .collapse-content {\n        padding: 1em;\n      }\n    </style>\n    <ul>\n    <template is=\"dom-repeat\" items=\"{{items}}\" as=\"row\">\n      <li>\n        <lrnsys-collapselist-item>\n          <span slot=\"label\">\n            <iron-icon icon=\"[[row.icon]]\"></iron-icon>\n            <span class=\"collapse-label\">[[row.label]]</span>\n          </span>\n          <span slot=\"content\">\n            [[row.content]]\n          </span>\n        </lrnsys-collapselist-item>\n      </li>\n    </template>\n    </ul>\n`,\n\n  is: \"lrnsys-collapselist\",\n  behaviors: [simpleColorsBehaviors],\n\n  properties: {\n    /**\n     * Array of items to present with label and content for the list of collapses.\n     */\n    items: {\n      type: Array\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n    <paper-icon-button raised=\"\" icon=\"[[icon]]\" on-tap=\"_onTap\" id\\$=\"[[id]]\" aria-label\\$=\"[[title]]\">[[title]]</paper-icon-button>\n    <paper-tooltip for\\$=\"[[id]]\" animation-delay=\"200\">[[title]]</paper-tooltip>\n`,\n\n  is: \"lrnsys-dialog-toolbar-button\",\n\n  properties: {\n    /**\n     * The title of the button.\n     */\n    title: {\n      type: String\n    },\n    /**\n     * The button icon.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * The button ID.\n     */\n    id: {\n      type: String\n    }\n  },\n\n  /**\n   * Ready lifecycle\n   */\n  ready: function() {\n    this.fire(\"button-initialized\", { id: this.id });\n  },\n\n  /**\n   * Button has been tapped.\n   */\n  _onTap: function(e) {\n    var normalizedEvent = dom(e);\n    var localTarget = normalizedEvent.localTarget;\n    var id = localTarget.getAttribute(\"id\");\n    this.fire(\"dialog-toolbar-button-tapped\", { id: id });\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"./lrnsys-dialog-toolbar-button.js\";\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n     :host {\n        display: block;\n        --app-toolbar-primary-height: 40px;\n        --app-toolbar-secondary-height: 50px;\n        --app-toolbar-secondary-color: var(--lrnsys-dialog-secondary-background-color);\n        --app-toolbar-primary-color: var(--lrnsys-dialog-toolbar-background-color);\n        position: relative;\n        margin: 0;\n        padding: 0;\n      }\n      app-toolbar#primary {\n        color: var(--lrnsys-dialog-color,#000);\n        background-color: var(--app-toolbar-primary-color);\n        z-index: 10;\n        position: relative;\n        height: var(--app-toolbar-primary-height);\n      }\n      app-toolbar#secondary {\n        color: var(--lrnsys-dialog-color,#000);\n        background-color: var(--app-toolbar-secondary-color);\n        z-index: 5;\n        position: absolute;\n        width: 100%;\n        transform: translateY(-100%);\n        transition: all 0.3s ease-in;\n        height: var(--app-toolbar-primary-height);\n        display: flex;\n        justify-content: center;\n        padding: 0;\n      }\n      :host([secondary-visible]) #secondary {\n        transform: translateY(0);\n        height: var(--app-toolbar-secondary-height);\n      }\n      .secondary-buttons {\n        display: flex;\n      }\n      .secondary-buttons ::shadow * {\n        display: inline-flex;\n      }\n    </style>\n    <app-toolbar id=\"primary\">\n      <slot name=\"primary\"></slot>\n      <div main-title=\"\"></div>\n      <lrnsys-dialog-toolbar-button icon=\"close\" id=\"close\" title=\"close dialog\"></lrnsys-dialog-toolbar-button>\n    </app-toolbar>\n    <app-toolbar id=\"secondary\" hidden\\$=\"[[!_secondaryHasChildren]]\">\n      <div class=\"secondary-buttons\">\n        <slot name=\"secondary\" id=\"secondary-slot\"></slot>\n      </div>\n    </app-toolbar>\n`,\n\n  is: \"lrnsys-dialog-toolbar\",\n\n  listeners: {\n    \"dialog-toolbar-button-tapped\": \"_tapHandler\"\n  },\n\n  properties: {\n    /**\n     * Internal state of secondary toolbar\n     */\n    _secondaryHasChildren: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Button tapped\n   */\n  _tapHandler: function(e) {\n    this.fire(\"button-clicked\", e.detail);\n  },\n\n  /**\n   * Ready.\n   */\n  ready: function() {\n    // listen to see if buttons have been initialized in the secondary toolbar\n    this.$.secondary.addEventListener(\"button-initialized\", e => {\n      this._secondaryHasChildren = true;\n    });\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-dialog/paper-dialog.js\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"@polymer/neon-animation/neon-animations.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"./lrnsys-dialog-toolbar.js\";\nimport \"./lrnsys-button-inner.js\";\n/**\n`lrnsys-dialog`\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: inline-block;\n        z-index: 1000;\n      }\n\n      paper-dialog {\n        position: fixed;\n        top: 5%;\n        right: 5%;\n        bottom: 5%;\n        left: 5%;\n        overflow: auto;\n        border-radius: 3px;\n        color: var(--lrnsys-dialog-color);\n        background-color: var(--lrnsys-dialog-background-color);\n      }\n      paper-dialog-scrollable {\n        margin-top:0;\n        @apply --layout-flex;\n      }\n\n      paper-dialog>*:first-child {\n        margin-top: 0;\n      }\n\n      .dialog-header {\n        width: 100%;\n        padding: 0;\n        margin: 0;\n      }\n      .dialog-heading {\n        padding: 0;\n        margin: 0;\n      }\n      .dialog-header-slot ::slotted(*) {\n        margin: 0;\n        padding: 0 15px;\n        line-height: 200%;\n      }\n    </style>\n    <paper-dialog modal=\"[[modal]]\" id=\"dialog\" entry-animation=\"scale-up-animation\" exit-animation=\"fade-out-animation\" with-backdrop=\"\" opened\\$=\"[[opened]]\">\n      <!--START TOOLBAR TO DIALOG -->\n      <lrnsys-dialog-toolbar on-button-clicked=\"_toolbarButtonClickedHandler\">\n        <span slot=\"primary\">\n          <slot name=\"toolbar-primary\"></slot>\n        </span>\n        <span slot=\"secondary\">\n          <slot name=\"toolbar-secondary\"></slot>\n        </span>\n      </lrnsys-dialog-toolbar>\n      <!--END TOOLBAR TO DIALOG -->\n      <div class\\$=\"[[headingClass]] dialog-header\">\n        <div class\\$=\"[[headingClass]] dialog-heading\" hidden\\$=\"[[!header]]\">[[header]]</div>\n        <span class=\"dialog-header-slot\"><slot name=\"header\"></slot></span>\n      </div>\n      <paper-dialog-scrollable class=\"dialog-contents\" id=\"dialogcontent\">\n        <slot></slot>\n      </paper-dialog-scrollable>\n    </paper-dialog>\n`,\n\n  is: \"lrnsys-dialog-modal\",\n\n  listeners: {\n    \"iron-overlay-closed\": \"_modalClosed\",\n    \"iron-overlay-opened\": \"_resizeContent\",\n    \"iron-overlay-canceled\": \"_changeOpen\"\n  },\n\n  properties: {\n    /**\n     * Header for the dialog\n     */\n    header: {\n      type: String,\n      value: false\n    },\n    /**\n     * Modal state for pop over.\n     */\n    modal: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Is dialog opened?\n     */\n    opened: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      notify: true\n    },\n    /**\n     * Default heading classes.\n     */\n    headingClass: {\n      type: String,\n      value: \"white-text black\"\n    },\n    /**\n     * Support for body-appending which is a hack for stacking context\n     * correction but breaks scoped styles / shadowDOM\n     */\n    bodyAppend: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Ensure we only attach once in this manner\n     */\n    _bodyAppended: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Support for dynamic loading of iron-image elements that are in the content slot.\n     */\n    dynamicImages: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  toggleDialog: function() {\n    // support for loading iron-images dynamically\n    if (this.dynamicImages) {\n      var images = this.$.dialogcontent.getElementsByTagName(\"IRON-IMAGE\");\n      // make sure these are\n      for (var i = 0; i < images.length; i++) {\n        images[i].preventLoad = false;\n      }\n    }\n    this.$.dialog.toggle();\n  },\n\n  /**\n   * Specifcally handle the click on an item in the toolbar.\n   * This allows us to issue events elsewhere or to close the\n   * modal if that button has been pressed.\n   */\n  _toolbarButtonClickedHandler: function(e) {\n    if (e.detail.id === \"close\") {\n      this.$.dialog.cancel();\n    }\n    this.fire(\"toolbar-button-clicked\", e.detail);\n  },\n\n  /**\n   * Modal has closed, let's react appropriately.\n   */\n  _modalClosed: function(e) {\n    // fire so we can react to accessibly; don't care who invoked this\n    // just that it has happened\n    this._changeOpen(e);\n    this.fire(\"lrnsys-dialog-modal-closed\", this);\n  },\n\n  /**\n   * Ensure everything is visible in what's been expanded.\n   */\n  _resizeContent: function(e) {\n    var evt = document.createEvent(\"UIEvents\");\n    evt.initUIEvent(\"resize\", true, false, window, 0);\n    window.dispatchEvent(evt);\n    this._changeOpen(e);\n  },\n\n  /**\n   * Ready lifecyce\n   */\n  ready: function() {\n    const dialog = this.shadowRoot.querySelector(\"paper-dialog\");\n    const toolbar = this.shadowRoot.querySelector(\"lrnsys-dialog-toolbar\");\n    dialog.addEventListener(\"mouseover\", e => {\n      toolbar.setAttribute(\"secondary-visible\", true);\n    });\n    dialog.addEventListener(\"mouseout\", e => {\n      toolbar.removeAttribute(\"secondary-visible\");\n    });\n  },\n\n  /**\n   * Attached lifecyce\n   */\n  attached: function() {\n    // support for appending to the light document\n    // while also making sure we don't loop in attach\n    if (this.bodyAppend && !this._bodyAppended) {\n      this._bodyAppended = true;\n      document.body.appendChild(this);\n    }\n  },\n\n  /**\n   * Attached lifecyce\n   */\n  _changeOpen: function(e) {\n    e.stopPropagation();\n    if (e.srcElement === this.$.dialog) {\n      this.opened = e.type === \"iron-overlay-opened\";\n      this.fire(\"lrnsys-dialog-modal-changed\", this);\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@polymer/paper-dialog/paper-dialog.js\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"@polymer/neon-animation/neon-animations.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./lrnsys-dialog-modal.js\";\nimport \"./lrnsys-button-inner.js\";\n/**\n`lrnsys-dialog`\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: inline-block;\n        --lrnsys-dialog-color: var(--simple-colors-foreground1,#000);\n        --lrnsys-dialog-background-color: var(--simple-colors-background1);\n        --lrnsys-dialog-toolbar-background-color: var(--simple-colors-background3);\n        --lrnsys-dialog-secondary-background-color: rgba(255,255,255, 0.7);\n      }\n      :host([dark]) {\n        --lrnsys-dialog-toolbar-background-color: var(--simple-colors-background1);\n        --lrnsys-dialog-background-color: var(--simple-colors-background3);\n        --lrnsys-dialog-secondary-background-color: rgba(0, 0, 0, 0.7);\n      }\n    </style>\n    <paper-button class\\$=\"[[class]]\" id=\"dialogtrigger\" on-tap=\"toggleDialog\" raised=\"[[raised]]\" disabled\\$=\"[[disabled]]\" title=\"[[alt]]\" aria-label\\$=\"[[alt]]\">\n      <lrnsys-button-inner avatar\\$=\"[[avatar]]\" icon\\$=\"[[icon]]\" text\\$=\"[[text]]\">\n        <slot name=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"dialogtrigger\" animation-delay=\"0\" hidden\\$=\"[[!alt]]\">[[alt]]</paper-tooltip>\n    <lrnsys-dialog-modal id=\"modal\" dynamic-images=\"[[dynamicImages]]\" body-append=\"[[bodyAppend]]\" header=\"[[header]]\" modal=\"[[modal]]\" heading-class=\"[[headingClass]]\" opened\\$=\"[[opened]]\">\n      <slot name=\"toolbar-primary\" slot=\"primary\"></slot>\n      <slot name=\"toolbar-secondary\" slot=\"secondary\"></slot>\n      <slot name=\"header\" slot=\"header\"></slot>\n      <slot></slot>\n    </lrnsys-dialog-modal>\n`,\n\n  is: \"lrnsys-dialog\",\n\n  listeners: {\n    mousedown: \"tapEventOn\",\n    mouseover: \"tapEventOn\",\n    mouseout: \"tapEventOff\",\n    \"dialogtrigger.focused-changed\": \"focusToggle\"\n  },\n\n  behaviors: [simpleColorsBehaviors],\n\n  properties: {\n    /**\n     * Icon to present for clicking.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * If the button should be visually lifted off the UI.\n     */\n    raised: {\n      type: Boolean\n    },\n    /**\n     * Icon to present for clicking.\n     */\n    avatar: {\n      type: String\n    },\n    /**\n     * Text to present for clicking.\n     */\n    text: {\n      type: String\n    },\n    /**\n     * Alt / hover text for this link\n     */\n    alt: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Header for the dialog\n     */\n    header: {\n      type: String\n    },\n    /**\n     * Disabled state.\n     */\n    disabled: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Modal state for pop over.\n     */\n    modal: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Is dialog opened?\n     */\n    opened: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      notify: true\n    },\n    /**\n     * Classes to add / subtract based on the item being hovered\n     */\n    hoverClass: {\n      type: String\n    },\n    /**\n     * Default heading classes.\n     */\n    headingClass: {\n      type: String,\n      value: \"white-text black\"\n    },\n    /**\n     * Support for body-appending which is a hack for stacking context\n     * correction but breaks scoped styles / shadowDOM\n     */\n    bodyAppend: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Support for dynamic loading of iron-image elements that are in the content slot.\n     */\n    dynamicImages: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Tracks if focus state is applied\n     */\n    focusState: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Ability to disable the auto focus mode\n     * this is useful if something else is picking up this capability.\n     */\n    disableAutoFocus: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Handle a focus/tap event and add the hoverclasses\n   * to the classList array for paper-button.\n   */\n  tapEventOn: function(e) {\n    const root = this;\n    if (typeof root.hoverClass !== typeof undefined) {\n      var classes = root.hoverClass.split(\" \");\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.dialogtrigger.classList.add(item);\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle a mouse out event and remove the hoverclasses\n   * from the classList array for paper-button.\n   */\n  tapEventOff: function(e) {\n    const root = this;\n    if (typeof root.hoverClass !== typeof undefined) {\n      var classes = root.hoverClass.split(\" \");\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.dialogtrigger.classList.remove(item);\n        }\n      });\n    }\n  },\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  toggleDialog: function() {\n    this.$.modal.toggleDialog();\n  },\n\n  /**\n   * Handle toggle for mouse class and manage classList array for paper-button.\n   */\n  focusToggle: function(e) {\n    const root = this;\n    root.fire(\"focus-changed\", { focus: root.focusState });\n    // see if it has hover classes\n    if (typeof root.hoverClass !== typeof undefined) {\n      // break class into array\n      var classes = root.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          if (root.focusState) {\n            root.$.dialogtrigger.classList.add(item);\n          } else {\n            root.$.dialogtrigger.classList.remove(item);\n          }\n        }\n      });\n    }\n    root.focusState = !root.focusState;\n  },\n\n  /**\n   * Ready lifecycle\n   */\n  ready: function() {\n    this.__modal = this.$.modal;\n  },\n\n  /**\n   * Attached lifecycle\n   */\n  attached: function() {\n    document.body.addEventListener(\n      \"lrnsys-dialog-modal-changed\",\n      this._changeOpen.bind(this)\n    );\n    if (!this.disableAutoFocus) {\n      document.body.addEventListener(\n        \"lrnsys-dialog-modal-closed\",\n        this._accessibleFocus.bind(this)\n      );\n    }\n  },\n\n  /**\n   * Set ourselves as having focus after the modal closes.\n   */\n  _accessibleFocus: function(e) {\n    // this is OUR modal, we found her, oh modal, We've missed\n    // you so much. thank you for coming home. We're so, so, so\n    // sorry that we appended you to the body. We'll never do it\n    // again (until the next time you open).\n    if (e.detail === this.__modal) {\n      // focus on our dialog triggering button\n      this.$.dialogtrigger.focus();\n    }\n  },\n\n  /**\n   * Attached lifecyce\n   */\n  _changeOpen: function(e) {\n    e.stopPropagation();\n    if (e.detail === this.$.modal) {\n      this.opened = e.type === \"iron-overlay-opened\";\n      this.fire(\"lrnsys-dialog-changed\", this);\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@polymer/app-layout/app-layout.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"./lrnsys-button-inner.js\";\n/**\n`lrnsys-drawer-modal`\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        z-index: 1000;\n      }\n      app-drawer {\n        --app-drawer-width: var(--lrnsys-drawer-width);\n        --app-drawer-content-container: {\n          padding: 0;\n          overflow-y: scroll;\n          position: fixed;\n          color: var(--lrnsys-drawer-color);\n          background-color: var(--lrnsys-drawer-background-color);\n        }\n      }\n      .drawer-header {\n        width: 100%;\n        padding: 0;\n        margin: 0 0 .5em 0;\n        text-align: left;\n        @apply --lrnsys-drawer-header;\n      }\n      .drawer-header-slot {\n      }\n      .drawer-heading {\n        font-size: 1.5em;\n        margin: 0;\n        padding: 0 15px;\n        height: 2.5em;\n        line-height: 3em;\n      }\n      .drawer-content {\n        padding: 0 15px;\n        text-align: left;\n      }\n\n      #close {\n        position: absolute;\n        right: 0.5em;\n        top: 0.5em;\n        padding: 0 0 0 0.25em;\n        margin: 0;\n        min-width: .1em;\n        text-transform: none;\n      }\n      .drawer-header-slot ::slotted(*) {\n        font-size: 1.5em;\n        margin: 0;\n        padding: 0 15px;\n        height: 2.5em;\n        line-height: 3em;\n      }\n    </style>\n    <app-drawer tabindex=\"0\" id=\"flyoutcontent\" opened=\"[[opened]]\" align=\"[[align]]\" role=\"dialog\">\n      <div class=\"drawer-contents\">\n        <div class=\"drawer-header\">\n          <div class\\$=\"[[headingClass]] drawer-header-slot\">\n            <slot name=\"header\"></slot>\n          </div>\n          <h3 class\\$=\"[[headingClass]] drawer-heading\" hidden\\$=\"[[!header]]\">[[header]]</h3>\n        </div>\n        <div class=\"drawer-content\">\n          <slot></slot>\n        </div>\n      </div>\n      <paper-icon-button raised=\"\" icon=\"close\" on-tap=\"closeDrawer\" id=\"close\" aria-label=\"close dialog\" class\\$=\"[[headingClass]]\"></paper-icon-button>\n      <paper-tooltip for=\"close\" animation-delay=\"500\">Close dialog</paper-tooltip>\n    </app-drawer>\n`,\n\n  is: \"lrnsys-drawer-modal\",\n\n  listeners: {\n    \"flyoutcontent.opened-changed\": \"_drawerClosed\"\n  },\n\n  properties: {\n    /**\n     * State for if it is currently open.\n     */\n    opened: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Side of the screen to align the flyout (right or left)\n     */\n    align: {\n      type: String,\n      value: \"left\"\n    },\n    /**\n     * Header for the drawer\n     */\n    header: {\n      type: String,\n      value: false\n    },\n    /**\n     * Disabled state.\n     */\n    disabled: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Heading classes.\n     */\n    headingClass: {\n      type: String,\n      value: \"white-text black\"\n    },\n    /**\n     * Support for body-appending which is a hack for stacking context\n     * correction but breaks scoped styles / shadowDOM\n     */\n    bodyAppend: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Ensure we only attach once in this manner\n     */\n    _bodyAppended: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  open: function() {\n    this.$.flyoutcontent.open();\n    this.$.close.focus();\n  },\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  close: function() {\n    this.$.flyoutcontent.close();\n  },\n\n  /**\n   * Attached lifecyce\n   */\n  attached: function() {\n    // support for appending to the light document\n    // while also making sure we don't loop in attach\n    if (this.bodyAppend && !this._bodyAppended) {\n      this._bodyAppended = true;\n      document.body.appendChild(this);\n    }\n  },\n\n  /**\n   * Close the drawer.\n   */\n  _drawerClosed: function(e) {\n    if (!this.$.flyoutcontent.opened) {\n      this.fire(\"lrnsys-drawer-modal-closed\", this);\n    }\n  },\n\n  /**\n   * Close the drawer.\n   */\n  closeDrawer: function(e) {\n    this.$.flyoutcontent.close();\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@polymer/app-layout/app-layout.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./lrnsys-button-inner.js\";\nimport \"./lrnsys-drawer-modal.js\";\n/**\n`lrnsys-drawer`\n\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        --lrnsys-drawer-color: var(--simple-colors-foreground1);\n        --lrnsys-drawer-background-color: var(--simple-colors-background1);\n      }\n      lrnsys-drawer-modal {\n        --lrnsys-drawer-width: 30%;\n      }\n    </style>\n    <paper-button class\\$=\"[[class]]\" id=\"flyouttrigger\" on-tap=\"toggleDrawer\" raised=\"[[raised]]\" disabled\\$=\"[[disabled]]\" title=\"[[alt]]\">\n      <lrnsys-button-inner avatar=\"[[avatar]]\" icon=\"[[icon]]\" text=\"[[text]]\">\n        <slot name=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"flyouttrigger\" animation-delay=\"0\">[[alt]]</paper-tooltip>\n    <lrnsys-drawer-modal id=\"modal\" body-append=\"[[bodyAppend]]\" opened=\"[[opened]]\" align=\"[[align]]\" header=\"[[header]]\" heading-class=\"[[headingClass]]\">\n      <slot name=\"header\" slot=\"header\"></slot>\n      <slot></slot>\n    </lrnsys-drawer-modal>\n`,\n\n  is: \"lrnsys-drawer\",\n\n  listeners: {\n    mousedown: \"tapEventOn\",\n    mouseover: \"tapEventOn\",\n    mouseout: \"tapEventOff\",\n    \"flyouttrigger.focused-changed\": \"focusToggle\"\n  },\n\n  behaviors: [simpleColorsBehaviors],\n\n  properties: {\n    /**\n     * State for if it is currently open.\n     */\n    opened: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * If the button should be visually lifted off the UI.\n     */\n    raised: {\n      type: Boolean,\n      reflectToAttribute: true\n    },\n    /**\n     * Icon to present for clicking.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * Icon to present for clicking.\n     */\n    avatar: {\n      type: String\n    },\n    /**\n     * Text to present for clicking.\n     */\n    text: {\n      type: String\n    },\n    /**\n     * Side of the screen to align the flyout (right or left)\n     */\n    align: {\n      type: String,\n      value: \"left\"\n    },\n    /**\n     * Alt / hover text for this link\n     */\n    alt: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Header for the drawer\n     */\n    header: {\n      type: String\n    },\n    /**\n     * Disabled state.\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Classes to add / subtract based on the item being hovered\n     */\n    hoverClass: {\n      type: String\n    },\n    /**\n     * Heading classes to apply downstream.\n     */\n    headingClass: {\n      type: String,\n      value: \"white-text black\"\n    },\n    /**\n     * Support for body-appending which is a hack for stacking context\n     * correction but breaks scoped styles / shadowDOM\n     */\n    bodyAppend: {\n      type: Boolean,\n      value: true\n    },\n    /**\n     * Tracks if focus state is applied\n     */\n    focusState: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Ready lifecycle\n   */\n  ready: function() {\n    this.__modal = this.$.modal;\n  },\n\n  /**\n   * Attached lifecycle\n   */\n  attached: function() {\n    document.body.addEventListener(\n      \"lrnsys-drawer-modal-closed\",\n      this._accessibleFocus.bind(this)\n    );\n  },\n\n  /**\n   * Set ourselves as having focus after the modal closes.\n   */\n  _accessibleFocus: function(e) {\n    // this is OUR modal, we found her, oh modal, We've missed\n    // you so much. thank you for coming home. We're so, so, so\n    // sorry that we appended you to the body. We'll never do it\n    // again (until the next time you open).\n    if (e.detail === this.__modal) {\n      // focus on our flyout triggering button\n      this.$.flyouttrigger.focus();\n    }\n  },\n\n  /**\n   * Handle a mouse on event and add the hoverclasses\n   * to the classList array for paper-button.\n   */\n  tapEventOn: function(e) {\n    const root = this;\n    if (typeof root.hoverClass !== typeof undefined) {\n      var classes = root.hoverClass.split(\" \");\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.flyouttrigger.classList.add(item);\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle a mouse out event and remove the hoverclasses\n   * from the classList array for paper-button.\n   */\n  tapEventOff: function(e) {\n    const root = this;\n    if (typeof root.hoverClass !== typeof undefined) {\n      var classes = root.hoverClass.split(\" \");\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.flyouttrigger.classList.remove(item);\n        }\n      });\n    }\n  },\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  toggleDrawer: function() {\n    this.$.modal.open();\n  },\n\n  /**\n   * Handle toggle for mouse class and manage classList array for paper-button.\n   */\n  focusToggle: function(e) {\n    const root = this;\n    root.fire(\"focus-changed\", { focus: root.focusState });\n    // see if it has hover classes\n    if (typeof root.hoverClass !== typeof undefined) {\n      // break class into array\n      var classes = root.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          if (root.focusState) {\n            root.$.flyouttrigger.classList.add(item);\n          } else {\n            root.$.flyouttrigger.classList.remove(item);\n          }\n        }\n      });\n    }\n    root.focusState = !root.focusState;\n  },\n\n  /**\n   * Find out if the text does not have an avatar or an icon to the left,\n   * and add a class to remove the left margin.\n   */\n  _getTextLabelClass: function() {\n    if (!this.avatar && !this.icon) {\n      return \"text-label-only\";\n    }\n    return \"text-label\";\n  }\n});\n"],"names":["_template","html","is","properties","icon","type","String","avatar","text","_getTextLabelClass","this","opened","Boolean","value","reflectToAttribute","notify","collapseToggle","e","$","collapse","toggle","behaviors","simpleColorsBehaviors","items","Array","title","id","ready","fire","_onTap","dom","localTarget","getAttribute","listeners","_secondaryHasChildren","_tapHandler","detail","secondary","addEventListener","_this","header","modal","headingClass","bodyAppend","_bodyAppended","dynamicImages","toggleDialog","images","dialogcontent","getElementsByTagName","i","length","preventLoad","dialog","_toolbarButtonClickedHandler","cancel","_modalClosed","_changeOpen","_resizeContent","evt","document","createEvent","initUIEvent","window","dispatchEvent","shadowRoot","querySelector","toolbar","setAttribute","removeAttribute","attached","body","appendChild","stopPropagation","srcElement","mousedown","mouseover","mouseout","raised","alt","disabled","hoverClass","focusState","disableAutoFocus","tapEventOn","root","_typeof","split","forEach","item","index","dialogtrigger","classList","add","tapEventOff","remove","focusToggle","focus","__modal","bind","_accessibleFocus","align","open","flyoutcontent","close","_drawerClosed","closeDrawer","flyouttrigger","toggleDrawer"],"mappings":"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"}