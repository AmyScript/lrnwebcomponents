{"version":3,"file":"task-list.umd.js","sources":["task-list.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\n/**\n`task-list`\nVisual listing of tasks with different design components that is\nOER Schema capable!\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n - task - a singular thing to accomplish\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n    <link property=\"oer:forComponent\" content\\$=\"[[relatedResource]]\">\n    <h2><span property=\"oer:name\">[[name]]</span></h2>\n    <ol>\n      <template is=\"dom-repeat\" items=\"[[tasks]]\" as=\"task\">\n        <li><span property=\"oer:task\">[[task.name]]</span></li>\n      </template>\n    </ol>\n`,\n\n  is: \"task-list\",\n\n  behaviors: [\n    HAXBehaviors.PropertiesBehaviors,\n    MaterializeCSSBehaviors.ColorBehaviors,\n    SchemaBehaviors.Schema\n  ],\n\n  hostAttributes: {\n    typeof: \"oer:SupportingMaterial\"\n  },\n\n  observers: [\"_valueChanged(tasks.*)\"],\n\n  properties: {\n    /**\n     * Name of this task list\n     */\n    name: {\n      type: String,\n      value: \"Steps to completion\"\n    },\n    /**\n     * Related Resource ID\n     */\n    relatedResource: {\n      type: String\n    },\n    /**\n     * Task list\n     */\n    tasks: {\n      type: Array,\n      value: [],\n      notify: true\n    }\n  },\n\n  /**\n   * Ensure the values change.\n   */\n  _valueChanged: function(e) {\n    for (var i in e.base) {\n      for (var j in e.base[i]) {\n        this.notifyPath(\"tasks.\" + i + \".\" + j);\n      }\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  attached: function() {\n    // Establish hax property binding\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Task list\",\n        description: \"A list of tasks which is an ordered list\",\n        icon: \"icons:list\",\n        color: \"orange\",\n        groups: [\"Content\", \"Instructional\"],\n        handles: [],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"Name of the list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"relatedResource\",\n            title: \"Related resource\",\n            description: \"A reference to the related Schema resource\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"Name of the list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"relatedResource\",\n            title: \"Related resource\",\n            description: \"A reference to the related Schema resource\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"tasks\",\n            title: \"Tasks\",\n            description: \"The tasks to be completed\",\n            inputMethod: \"array\",\n            properties: [\n              {\n                property: \"name\",\n                title: \"Name\",\n                description: \"Name of the task\",\n                inputMethod: \"textfield\",\n                required: true\n              },\n              {\n                property: \"link\",\n                title: \"Link\",\n                description: \"Optional link\",\n                inputMethod: \"textfield\"\n              }\n            ]\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  }\n});\n"],"names":["_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","MaterializeCSSBehaviors","ColorBehaviors","SchemaBehaviors","Schema","hostAttributes","typeof","observers","properties","name","type","String","value","relatedResource","tasks","Array","notify","_valueChanged","e","i","base","j","notifyPath","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","configure","required","advanced"],"mappings":"0hDAeQ,CACNA,UAAWC,YAeXC,GAAI,YAEJC,UAAW,CACTC,aAAaC,oBACbC,wBAAwBC,eACxBC,gBAAgBC,QAGlBC,eAAgB,CACdC,OAAQ,0BAGVC,UAAW,CAAC,0BAEZC,WAAY,CAIVC,KAAM,CACJC,KAAMC,OACNC,MAAO,uBAKTC,gBAAiB,CACfH,KAAMC,QAKRG,MAAO,CACLJ,KAAMK,MACNH,MAAO,GACPI,QAAQ,IAOZC,cAAe,SAASC,OACjB,IAAIC,KAAKD,EAAEE,SACT,IAAIC,KAAKH,EAAEE,KAAKD,QACdG,WAAW,SAAWH,EAAI,IAAME,IAQ3CE,SAAU,gBA0EHC,iBAxEO,CACVC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,YACPC,YAAa,2CACbC,KAAM,aACNC,MAAO,SACPC,OAAQ,CAAC,UAAW,iBACpBC,QAAS,GACTC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,kBACVV,MAAO,mBACPC,YAAa,6CACbU,YAAa,YACbT,KAAM,iBAGVU,UAAW,CACT,CACEF,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,kBACVV,MAAO,mBACPC,YAAa,6CACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,QACVV,MAAO,QACPC,YAAa,4BACbU,YAAa,QACbhC,WAAY,CACV,CACE+B,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbE,UAAU,GAEZ,CACEH,SAAU,OACVV,MAAO,OACPC,YAAa,gBACbU,YAAa,gBAKrBG,SAAU"}