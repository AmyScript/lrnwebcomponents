{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "lib/paper-fab-speed-dial-overlay.js",
      "properties": [
        {
          "name": "sizingTarget",
          "type": "!Element",
          "description": "The element that will receive a `max-height`/`width`. By default it is\nthe same as `this`, but it can be set to a child element. This is useful,\nfor example, for implementing a scrolling region inside the element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "fitInto",
          "type": "Object | null | undefined",
          "description": "The element to fit `this` into.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 42
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "noOverlap",
          "type": "boolean | null | undefined",
          "description": "Will position the element around the positionTarget without overlapping\nit.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "positionTarget",
          "type": "!Element",
          "description": "The element that should be used to position the element. If not set, it\nwill default to the parent node.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Element"
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "horizontalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element horizontally\nrelative to the `positionTarget`. Possible values are \"left\", \"right\",\n\"center\", \"auto\".",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "verticalAlign",
          "type": "string | null | undefined",
          "description": "The orientation against which to align the element vertically\nrelative to the `positionTarget`. Possible values are \"top\", \"bottom\",\n\"middle\", \"auto\".",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean | null | undefined",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as\npreferred alignment and if there's not enough space, it will pick the\nvalues which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "horizontalOffset",
          "type": "number | null | undefined",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `horizontalAlign`.\n\nIf `horizontalAlign` is \"left\" or \"center\", this offset will increase or\ndecrease the distance to the left side of the screen: a negative offset\nwill move the dropdown to the left; a positive one, to the right.\n\nConversely if `horizontalAlign` is \"right\", this offset will increase\nor decrease the distance to the right side of the screen: a negative\noffset will move the dropdown to the right; a positive one, to the left.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 132,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 60
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "verticalOffset",
          "type": "number | null | undefined",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `verticalAlign`.\n\nIf `verticalAlign` is \"top\" or \"middle\", this offset will increase or\ndecrease the distance to the top side of the screen: a negative offset\nwill move the dropdown upwards; a positive one, downwards.\n\nConversely if `verticalAlign` is \"bottom\", this offset will increase\nor decrease the distance to the bottom side of the screen: a negative\noffset will move the dropdown downwards; a positive one, upwards.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 58
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "autoFitOnAttach",
          "type": "boolean | null | undefined",
          "description": "Set to true to auto-fit on attach.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_fitInfo",
          "type": "?Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_fitWidth",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 159,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_fitHeight",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_fitLeft",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 187,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_fitTop",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 189,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_defaultPositionTarget",
          "type": "?",
          "description": "The element that should be used to position the element,\nif no position target is configured.\n   ",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 203,
              "column": 2
            },
            "end": {
              "line": 211,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_localeHorizontalAlign",
          "type": "?",
          "description": "The horizontal align value, accounting for the RTL/LTR text direction.\n   ",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 216,
              "column": 2
            },
            "end": {
              "line": 227,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "__shouldPosition",
          "type": "?",
          "description": "True if the element should be positioned instead of centered.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 233,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_parentResizable",
          "type": "Object | null | undefined",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean | null | undefined",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "True if the overlay is currently displayed.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 79
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_openedChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "canceled",
          "type": "boolean | null | undefined",
          "description": "True if the overlay was canceled when it was last closed.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_canceledChanged\"",
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "withBackdrop",
          "type": "boolean | null | undefined",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_withBackdropChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "noAutoFocus",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable auto-focusing the overlay or child nodes with\nthe `autofocus` attribute` when the overlay is opened.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "closingReason",
          "type": "Object | null | undefined",
          "description": "Contains the reason(s) this overlay was last closed (see\n`iron-overlay-closed`). `IronOverlayBehavior` provides the `canceled`\nreason; implementers of the behavior can provide other reasons in\naddition to `canceled`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "restoreFocusOnClose",
          "type": "boolean | null | undefined",
          "description": "Set to true to enable restoring of focus when overlay is closed.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "allowClickThrough",
          "type": "boolean | null | undefined",
          "description": "Set to true to allow clicks to go through overlays.\nWhen the user clicks outside this overlay, the click may\nclose the overlay below.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "alwaysOnTop",
          "type": "boolean | null | undefined",
          "description": "Set to true to keep overlay always on top.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "scrollAction",
          "type": "string | null | undefined",
          "description": "Determines which action to perform when scroll outside an opened overlay\nhappens. Possible values: lock - blocks scrolling from happening, refit -\ncomputes the new position on the overlay cancel - causes the overlay to\nclose",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_manager",
          "type": "!IronOverlayManagerClass",
          "description": "Shortcut to access to the overlay manager.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusedChild",
          "type": "?Node",
          "description": "The node being focused.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "backdropElement",
          "type": "!Element",
          "description": "The backdrop element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 152,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusNode",
          "type": "!Node",
          "description": "Returns the node to give focus to.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 158,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_focusableNodes",
          "type": "!Array.<!Node>",
          "description": "Array of nodes that can receive focus (overlay included), ordered by\n`tabindex`. This is used to retrieve which is the first and last focusable\nnodes in order to wrap the focus for overlays `with-backdrop`.\n\nIf you know what is your content (specifically the first and last focusable\nchildren), you can override this method to return only `[firstFocusable,\nlastFocusable];`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 175,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 232,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "fit",
          "description": "Positions and fits the element into the `fitInto` element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 269,
              "column": 2
            },
            "end": {
              "line": 273,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_discoverInfo",
          "description": "Memoize information needed to position and size the target element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 279,
              "column": 2
            },
            "end": {
              "line": 318,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "resetFit",
          "description": "Resets the target element's position and size constraints, and clear\nthe memoized data.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 324,
              "column": 2
            },
            "end": {
              "line": 334,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "refit",
          "description": "Equivalent to calling `resetFit()` and `fit()`. Useful to call this after\nthe element or the `fitInto` element has been resized, or if any of the\npositioning properties (e.g. `horizontalAlign, verticalAlign`) is updated.\nIt preserves the scroll position of the sizingTarget.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 342,
              "column": 2
            },
            "end": {
              "line": 349,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "position",
          "description": "Positions the element according to `horizontalAlign, verticalAlign`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 354,
              "column": 2
            },
            "end": {
              "line": 415,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "constrain",
          "description": "Constrains the size of the element to `fitInto` by setting `max-height`\nand/or `max-width`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 421,
              "column": 2
            },
            "end": {
              "line": 451,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "_sizeDimension",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 457,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rect"
            },
            {
              "name": "positionedBy"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "extent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "__sizeDimension",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 464,
              "column": 2
            },
            "end": {
              "line": 475,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rect"
            },
            {
              "name": "positionedBy"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "extent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "center",
          "description": "Centers horizontally and vertically if not already positioned. This also\nsets `position:fixed`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 481,
              "column": 2
            },
            "end": {
              "line": 514,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "__getNormalizedRect",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 516,
              "column": 2
            },
            "end": {
              "line": 528,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "__getOffscreenArea",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 530,
              "column": 2
            },
            "end": {
              "line": 537,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "position"
            },
            {
              "name": "size"
            },
            {
              "name": "fitRect"
            }
          ],
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "__getPosition",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 540,
              "column": 2
            },
            "end": {
              "line": 685,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hAlign"
            },
            {
              "name": "vAlign"
            },
            {
              "name": "size"
            },
            {
              "name": "sizeNoMargins"
            },
            {
              "name": "positionRect"
            },
            {
              "name": "fitRect"
            }
          ],
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_subscribeIronResize",
          "description": "Subscribe this element to listen to iron-resize events on the given target.\n\nPreferred over target.listen because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target",
              "type": "!HTMLElement",
              "description": "Element to listen to for iron-resize events."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_unsubscribeIronResize",
          "description": "Unsubscribe this element from listening to to iron-resize events on the\ngiven target.\n\nPreferred over target.unlisten because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 156,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target",
              "type": "!HTMLElement",
              "description": "Element to listen to for iron-resize events."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 169,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 181,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 203,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_findParent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 271,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 180,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "toggle",
          "description": "Toggle the opened state of the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 237,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "open",
          "description": "Open the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 245,
              "column": 2
            },
            "end": {
              "line": 248,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "close",
          "description": "Close the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 253,
              "column": 2
            },
            "end": {
              "line": 256,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "cancel",
          "description": "Cancels the overlay.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 262,
              "column": 2
            },
            "end": {
              "line": 271,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event=",
              "description": "The original event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "invalidateTabbables",
          "description": "Invalidates the cached tabbable nodes. To be called when any of the\nfocusable content changes (e.g. a button is disabled).",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 277,
              "column": 2
            },
            "end": {
              "line": 279,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_ensureSetup",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 281,
              "column": 2
            },
            "end": {
              "line": 288,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_openedChanged",
          "description": "Called when `opened` changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 295,
              "column": 2
            },
            "end": {
              "line": 312,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened",
              "type": "boolean="
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_canceledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 314,
              "column": 2
            },
            "end": {
              "line": 317,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_withBackdropChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 319,
              "column": 2
            },
            "end": {
              "line": 331,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_prepareRenderOpened",
          "description": "tasks which must occur before opening; e.g. making the element visible.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 337,
              "column": 2
            },
            "end": {
              "line": 353,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_renderOpened",
          "description": "Tasks which cause the overlay to actually open; typically play an\nanimation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 360,
              "column": 2
            },
            "end": {
              "line": 362,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_renderClosed",
          "description": "Tasks which cause the overlay to actually close; typically play an\nanimation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 369,
              "column": 2
            },
            "end": {
              "line": 371,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishRenderOpened",
          "description": "Tasks to be performed at the end of open action. Will fire\n`iron-overlay-opened`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 378,
              "column": 2
            },
            "end": {
              "line": 383,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishRenderClosed",
          "description": "Tasks to be performed at the end of close action. Will fire\n`iron-overlay-closed`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 390,
              "column": 2
            },
            "end": {
              "line": 398,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_preparePositioning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 400,
              "column": 2
            },
            "end": {
              "line": 404,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_finishPositioning",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 406,
              "column": 2
            },
            "end": {
              "line": 419,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_applyFocus",
          "description": "Applies focus according to the opened state.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 425,
              "column": 2
            },
            "end": {
              "line": 448,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureClick",
          "description": "Cancels (closes) the overlay. Call when click happens outside the overlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 455,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureFocus",
          "description": "Keeps track of the focused child. If withBackdrop, traps focus within\noverlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 467,
              "column": 2
            },
            "end": {
              "line": 478,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureEsc",
          "description": "Handles the ESC key event and cancels (closes) the overlay.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 485,
              "column": 2
            },
            "end": {
              "line": 489,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_onCaptureTab",
          "description": "Handles TAB key events to track focus changes.\nWill wrap focus for overlays withBackdrop.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 497,
              "column": 2
            },
            "end": {
              "line": 541,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_onIronResize",
          "description": "Refits if the overlay is opened and not animating.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 547,
              "column": 2
            },
            "end": {
              "line": 551,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "_onNodesChange",
          "description": "Will call notifyResize if overlay is opened.\nCan be overridden in order to avoid multiple observers on the same node.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 558,
              "column": 2
            },
            "end": {
              "line": 564,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__ensureFirstLastFocusables",
          "description": "Updates the references to the first and last focusable nodes.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 570,
              "column": 2
            },
            "end": {
              "line": 574,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__openedChanged",
          "description": "Tasks executed when opened changes: prepare for the opening, move the\nfocus, update the manager, render opened/closed.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 581,
              "column": 2
            },
            "end": {
              "line": 597,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__deraf",
          "description": "Debounces the execution of a callback to the next animation frame.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 605,
              "column": 2
            },
            "end": {
              "line": 614,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "jobname",
              "type": "!string"
            },
            {
              "name": "callback",
              "type": "!Function",
              "description": "Always bound to `this`"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__updateScrollObservers",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 622,
              "column": 2
            },
            "end": {
              "line": 633,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAttached",
              "type": "boolean"
            },
            {
              "name": "opened",
              "type": "boolean"
            },
            {
              "name": "scrollAction",
              "type": "string="
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__addScrollListeners",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 638,
              "column": 2
            },
            "end": {
              "line": 660,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__removeScrollListeners",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 665,
              "column": 2
            },
            "end": {
              "line": 677,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__isValidScrollAction",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 684,
              "column": 2
            },
            "end": {
              "line": 687,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "scrollAction",
              "type": "string="
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__onCaptureScroll",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 692,
              "column": 2
            },
            "end": {
              "line": 714,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__saveScrollPosition",
          "description": "Memoizes the scroll position of the outside scrolling element.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 720,
              "column": 2
            },
            "end": {
              "line": 731,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "__restoreScrollPosition",
          "description": "Resets the scroll position of the outside scrolling element.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 737,
              "column": 2
            },
            "end": {
              "line": 748,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronOverlayBehaviorImpl"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 2,
          "column": 8
        },
        "end": {
          "line": 8,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "sizing-target",
          "description": "The element that will receive a `max-height`/`width`. By default it is\nthe same as `this`, but it can be set to a child element. This is useful,\nfor example, for implementing a scrolling region inside the element.",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "metadata": {},
          "type": "!Element",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "fit-into",
          "description": "The element to fit `this` into.",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 42
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping\nit.",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 30
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the element. If not set, it\nwill default to the parent node.",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 35
            }
          },
          "metadata": {},
          "type": "!Element",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the `positionTarget`. Possible values are \"left\", \"right\",\n\"center\", \"auto\".",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 35
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the `positionTarget`. Possible values are \"top\", \"bottom\",\n\"middle\", \"auto\".",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 33
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as\npreferred alignment and if there's not enough space, it will pick the\nvalues which minimize the cropping.",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 33
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "horizontal-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `horizontalAlign`.\n\nIf `horizontalAlign` is \"left\" or \"center\", this offset will increase or\ndecrease the distance to the left side of the screen: a negative offset\nwill move the dropdown to the left; a positive one, to the right.\n\nConversely if `horizontalAlign` is \"right\", this offset will increase\nor decrease the distance to the right side of the screen: a negative\noffset will move the dropdown to the right; a positive one, to the left.",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 132,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 60
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "vertical-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `verticalAlign`.\n\nIf `verticalAlign` is \"top\" or \"middle\", this offset will increase or\ndecrease the distance to the top side of the screen: a negative offset\nwill move the dropdown upwards; a positive one, downwards.\n\nConversely if `verticalAlign` is \"bottom\", this offset will increase\nor decrease the distance to the bottom side of the screen: a negative\noffset will move the dropdown downwards; a positive one, upwards.",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 58
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "auto-fit-on-attach",
          "description": "Set to true to auto-fit on attach.",
          "sourceRange": {
            "file": "../../@polymer/iron-fit-behavior/iron-fit-behavior.js",
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 50
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "name": "opened",
          "description": "True if the overlay is currently displayed.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 79
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "canceled",
          "description": "True if the overlay was canceled when it was last closed.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "with-backdrop",
          "description": "Set to true to display a backdrop behind the overlay. It traps the focus\nwithin the light DOM of the overlay.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "no-auto-focus",
          "description": "Set to true to disable auto-focusing the overlay or child nodes with\nthe `autofocus` attribute` when the overlay is opened.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "no-cancel-on-esc-key",
          "description": "Set to true to disable canceling the overlay with the ESC key.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "no-cancel-on-outside-click",
          "description": "Set to true to disable canceling the overlay by clicking outside it.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "closing-reason",
          "description": "Contains the reason(s) this overlay was last closed (see\n`iron-overlay-closed`). `IronOverlayBehavior` provides the `canceled`\nreason; implementers of the behavior can provide other reasons in\naddition to `canceled`.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "restore-focus-on-close",
          "description": "Set to true to enable restoring of focus when overlay is closed.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "allow-click-through",
          "description": "Set to true to allow clicks to go through overlays.\nWhen the user clicks outside this overlay, the click may\nclose the overlay below.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "always-on-top",
          "description": "Set to true to keep overlay always on top.",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        },
        {
          "name": "scroll-action",
          "description": "Determines which action to perform when scroll outside an opened overlay\nhappens. Possible values: lock - blocks scrolling from happening, refit -\ncomputes the new position on the overlay cancel - causes the overlay to\nclose",
          "sourceRange": {
            "file": "../../@polymer/iron-overlay-behavior/iron-overlay-behavior.js",
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronOverlayBehaviorImpl"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "horizontal-offset-changed",
          "description": "Fired when the `horizontalOffset` property changes.",
          "metadata": {},
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "vertical-offset-changed",
          "description": "Fired when the `verticalOffset` property changes.",
          "metadata": {},
          "inheritedFrom": "IronFitBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {},
          "inheritedFrom": "IronOverlayBehaviorImpl"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-fab-speed-dial-overlay"
    },
    {
      "description": "",
      "summary": "",
      "path": "paper-fab-speed-dial.js",
      "properties": [
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 18,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"add\""
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 22,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 26,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "open",
          "description": "Public methods",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 32
        },
        "end": {
          "line": 46,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "PaperFabSpeedDial",
      "attributes": [
        {
          "name": "icon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 18,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opened",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 22,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 26,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-fab-speed-dial"
    }
  ]
}
