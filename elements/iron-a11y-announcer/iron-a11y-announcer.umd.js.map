{"version":3,"file":"iron-a11y-announcer.umd.js","sources":["iron-a11y-announcer.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport * as async from \"@polymer/polymer/lib/utils/async.js\";\nexport const IronA11yAnnouncer = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: fixed;\n        clip: rect(0px,0px,0px,0px);\n      }\n    </style>\n    <div aria-live\\$=\"[[mode]]\">[[_text]]</div>\n`,\n\n  is: \"iron-a11y-announcer\",\n\n  properties: {\n    /**\n     * The value of mode is used to set the `aria-live` attribute\n     * for the element that will be announced. Valid values are: `off`,\n     * `polite` and `assertive`.\n     */\n    mode: {\n      type: String,\n      value: \"polite\"\n    },\n\n    _text: {\n      type: String,\n      value: \"\"\n    }\n  },\n\n  created: function() {\n    if (!IronA11yAnnouncer.instance) {\n      IronA11yAnnouncer.instance = this;\n    }\n\n    document.body.addEventListener(\n      \"iron-announce\",\n      this._onIronAnnounce.bind(this)\n    );\n  },\n\n  /**\n   * Cause a text string to be announced by screen readers.\n   *\n   * @param {string} text The text that should be announced.\n   */\n  announce: function(text) {\n    this._text = \"\";\n    async.microTask.run(() => {\n      this._text = text;\n    });\n  },\n\n  _onIronAnnounce: function(event) {\n    if (event.detail && event.detail.text) {\n      this.announce(event.detail.text);\n    }\n  }\n});\n\nIronA11yAnnouncer.instance = null;\n\nIronA11yAnnouncer.requestAvailability = function() {\n  document.addEventListener(\"DOMContentLoaded\", function(event) {\n    if (!IronA11yAnnouncer.instance) {\n      IronA11yAnnouncer.instance = document.createElement(\n        \"iron-a11y-announcer\"\n      );\n    }\n\n    document.body.appendChild(IronA11yAnnouncer.instance);\n  });\n};\n"],"names":["IronA11yAnnouncer","Polymer","_template","html","is","properties","mode","type","String","value","_text","created","instance","this","document","body","addEventListener","_onIronAnnounce","bind","announce","text","async","run","_this","event","detail","requestAvailability","createElement","appendChild"],"mappings":"67BAEaA,EAAoBC,UAAQ,CACvCC,UAAWC,YAWXC,GAAI,sBAEJC,WAAY,CAMVC,KAAM,CACJC,KAAMC,OACNC,MAAO,UAGTC,MAAO,CACLH,KAAMC,OACNC,MAAO,KAIXE,QAAS,WACFX,EAAkBY,WACrBZ,EAAkBY,SAAWC,MAG/BC,SAASC,KAAKC,iBACZ,gBACAH,KAAKI,gBAAgBC,KAAKL,QAS9BM,SAAU,SAASC,mBACZV,MAAQ,GACbW,YAAgBC,IAAI,WAClBC,EAAKb,MAAQU,KAIjBH,gBAAiB,SAASO,GACpBA,EAAMC,QAAUD,EAAMC,OAAOL,WAC1BD,SAASK,EAAMC,OAAOL,SAKjCpB,EAAkBY,SAAW,KAE7BZ,EAAkB0B,oBAAsB,WACtCZ,SAASE,iBAAiB,mBAAoB,SAASQ,GAChDxB,EAAkBY,WACrBZ,EAAkBY,SAAWE,SAASa,cACpC,wBAIJb,SAASC,KAAKa,YAAY5B,EAAkBY"}