!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@polymer/polymer/polymer-legacy.js"),require("@polymer/paper-styles/paper-styles.js"),require("@polymer/iron-flex-layout/iron-flex-layout.js"),require("@polymer/iron-resizable-behavior/iron-resizable-behavior.js")):"function"==typeof define&&define.amd?define(["exports","@polymer/polymer/polymer-legacy.js","@polymer/paper-styles/paper-styles.js","@polymer/iron-flex-layout/iron-flex-layout.js","@polymer/iron-resizable-behavior/iron-resizable-behavior.js"],r):r(e.CircleProgress={},e.polymerLegacy_js,null,null,e.ironResizableBehavior_js)}(this,function(e,r,t,s,n){"use strict";function o(){var e,r,t=(e=['\n    <custom-style>\n      <style is="custom-style" include="paper-material-styles">\n        :host {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          position: relative;\n          width: var(--circle-progress-width, 64px);\n          height: var(--circle-progress-height, 64px);\n          margin: 24px;\n          border-radius: 50%;\n        }\n        svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          display: none;\n        }\n        .circle-background {\n          stroke: var(--circle-progress-bg-stroke-color, --paper-grey-100);\n        }\n        .circle-foreground {\n          transition: stroke-dashoffset var(--circle-progress-transition, 150ms);\n          stroke: var(--circle-progress-stroke-color, blue);\n          stroke-linecap: var(--circle-progress-stroke-linecap, round);\n        }\n      </style>\n    </custom-style>\n    <svg id="circle" width="100%" height="100%">\n      <circle\n        class="circle-background"\n        r$="[[_radius]]"\n        cx$="[[_cx]]"\n        cy$="[[_cy]]"\n        fill="transparent"\n        stroke-width$="[[strokeWidth]]"\n      ></circle>\n      <circle\n        class="circle-foreground"\n        r$="[[_radius]]"\n        cx$="[[_cx]]"\n        cy$="[[_cy]]"\n        fill="transparent"\n        stroke-width$="[[strokeWidth]]"\n        stroke-dasharray$="[[_dasharray]]"\n        stroke-dashoffset$="[[_dashoffset]]"\n        transform$="[[_transform]]"\n      ></circle>\n    </svg>\n    <slot></slot>\n  '],(r=['\n    <custom-style>\n      <style is="custom-style" include="paper-material-styles">\n        :host {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          position: relative;\n          width: var(--circle-progress-width, 64px);\n          height: var(--circle-progress-height, 64px);\n          margin: 24px;\n          border-radius: 50%;\n        }\n        svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          display: none;\n        }\n        .circle-background {\n          stroke: var(--circle-progress-bg-stroke-color, --paper-grey-100);\n        }\n        .circle-foreground {\n          transition: stroke-dashoffset var(--circle-progress-transition, 150ms);\n          stroke: var(--circle-progress-stroke-color, blue);\n          stroke-linecap: var(--circle-progress-stroke-linecap, round);\n        }\n      </style>\n    </custom-style>\n    <svg id="circle" width="100%" height="100%">\n      <circle\n        class="circle-background"\n        r\\$="[[_radius]]"\n        cx\\$="[[_cx]]"\n        cy\\$="[[_cy]]"\n        fill="transparent"\n        stroke-width\\$="[[strokeWidth]]"\n      ></circle>\n      <circle\n        class="circle-foreground"\n        r\\$="[[_radius]]"\n        cx\\$="[[_cx]]"\n        cy\\$="[[_cy]]"\n        fill="transparent"\n        stroke-width\\$="[[strokeWidth]]"\n        stroke-dasharray\\$="[[_dasharray]]"\n        stroke-dashoffset\\$="[[_dashoffset]]"\n        transform\\$="[[_transform]]"\n      ></circle>\n    </svg>\n    <slot></slot>\n  '])||(r=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}})));return o=function(){return t},t}var i=r.Polymer({_template:r.html(o()),is:"circle-progress",behaviors:[n.IronResizableBehavior],properties:{value:{type:Number,value:0},max:{type:Number,value:100},strokeWidth:{type:Number,value:4},angle:{type:Number,value:-90},_cx:{type:Number,value:null},_cy:{type:Number,value:null},_radius:{type:Number,computed:"_computeRadius(_cx, _cy, strokeWidth)"},_transform:{type:String,computed:"_computeTransform(angle, _cx, _cy)"},_dasharray:{type:Number,computed:"_computeDashArray(_radius)"},_dashoffset:{type:Number,computed:"_computeDashOffset(value, max, _dasharray)"}},listeners:{"iron-resize":"_onIronResize"},_computeDashArray:function(e){return 2*Math.PI*e},_computeDashOffset:function(e,r,t){return(1-e/r)*t},_computeRadius:function(e,r,t){return e&&r?Math.max(0,Math.min(e,r)-t/2):0},_computeTransform:function(e,r,t){return r&&t?"rotate("+e+", "+r+", "+t+")":""},_onIronResize:function(){this.offsetWidth&&this.offsetHeight&&(this._cx=this.offsetWidth/2,this._cy=this.offsetHeight/2,this.$.circle.style.display="block")}});e.CircleProgress=i,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=circle-progress.umd.js.map
